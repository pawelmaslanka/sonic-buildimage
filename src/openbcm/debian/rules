#!/usr/bin/make -f
# -*- makefile -*-

# NOTE: Whole file was inspired by rules for saibcm-modules package from SONiC repo:
# https://github.com/sonic-net/sonic-buildimage/blob/master/platform/broadcom/saibcm-modules/debian/rules

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

psource:=openbcm-source
sname:=openbcm

PKG_NAME=openbcm_6.5.21_amd64.deb
PACKAGE=openbcm
MA_DIR ?= /usr/share/modass
KVERSION ?= 5.10.0-23-2-amd64
KERNVERSION ?= 5.10.0-23-2

platform=x86-smp_generic_64-2_6
TARGET=unix-user

SDK_VER = 6.5.27

KERNLDIR = /sonic/src/sonic-linux-kernel/linux-5.10.179

EXTRA_CFLAGS = -I$(KERNLDIR) -lc -isystem $(SYSINC) -Iinclude -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/include -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/arch/x86/include/generated/uapi -I$(KERNLDIR)/arch/x86/include -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/arch/x86/include/generated -I$(KERNLDIR)/arch/x86/include/uapi -I$(KERNLDIR)/include -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/include/generated -I$(KERNLDIR)/include/uapi -include /sonic/src/sonic-linux-kernel/linux-5.10.179/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/include/generated/autoconf.h -D__KERNEL__ -DNDEBUG -Wundef -Wno-error=unused-value -Wno-error=cpp -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Wno-format-security -O2 -m64 -mtune=generic -mno-red-zone -mcmodel=kernel -funit-at-a-time -fstack-protector -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -fno-omit-frame-pointer -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fno-dwarf2-cfi-asm -fno-builtin -Wno-int-to-pointer-cast -fno-pie -D\"KBUILD_STR(s)=\#s\"
EXTRA_KFLAGS = "-I$(KERNLDIR) -lc -isystem $(SYSINC) -Iinclude -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/include -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/arch/x86/include/generated/uapi -I$(KERNLDIR)/arch/x86/include -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/arch/x86/include/generated -I$(KERNLDIR)/arch/x86/include/uapi -I$(KERNLDIR)/include -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/include/generated -I$(KERNLDIR)/include/uapi -include /sonic/src/sonic-linux-kernel/linux-5.10.179/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/include/generated/autoconf.h -D__KERNEL__ -DNDEBUG -Wundef -Wno-error=unused-value -Wno-error=cpp -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Wno-format-security -O2 -m64 -mtune=generic -mno-red-zone -mcmodel=kernel -funit-at-a-time -fstack-protector -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -fno-omit-frame-pointer -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fno-dwarf2-cfi-asm -fno-builtin -Wno-int-to-pointer-cast -fno-pie"
EXTRA_KERNEL_FLAGS = -I$(KERNLDIR) -Iinclude -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/include -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/arch/x86/include/generated/uapi -I$(KERNLDIR)/arch/x86/include -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/arch/x86/include/generated -I$(KERNLDIR)/arch/x86/include/uapi -I$(KERNLDIR)/include -I$(KERNLDIR)/debian/linux-headers-5.10.0-23-2-amd64/usr/src/linux-headers-5.10.0-23-2-amd64/include/generated -I$(KERNLDIR)/include/uapi

SDK=/sonic/src/OpenBCM/sdk-$(SDK_VER)

-include $(MA_DIR)/include/generic.make
-include $(MA_DIR)/include/common-rules.make

# include $(SDK)/make/Make.config

sdk_build: sdk kernel_module

sdk:
	echo "Build SDK libs"

	SDK=/sonic/src/OpenBCM/sdk-$(SDK_VER) \
	PORTMOD_SUPPORT=1 \
	NO_PRECOMPILED_MODULE=1 \
	ESW_CHIPS=1 \
	KERNBLDDIR=$(KERNLDIR) \
	BUILD_KNET_CB=1 \
	ESW_CHIPS=1 BCM_PTL_SPT=1 BCM_56960_A0=1  \
	FEATURE_LIST="PTP CINT L3 I2C MEM_SCAN EDITLINE BCM_SAL_PROFILE CUSTOMER TEST CHASSIS MSTP RCPU PTP KNET FCMAP ATPTRANS_SOCKET FLOWTRACKER COLLECTOR KNETSYNC" \
	CFGFLAGS="-DALPM_ENABLE -DBCM_WARM_BOOT_SUPPORT -DBCM_WARM_BOOT_SUPPORT_SW_DUMP -DSRC_SOC_COMMON_ACTIVATE_UNUSED -Wno-error -UBCM_PLATFORM_STRING -Wno-error=incompatible-pointer-types -Wno-error=int-conversion -Wno-error=implicit-function-declaration -Wno-error=cpp -Wno-error=format-overflow= -Wno-error=maybe-uninitialized -Wno-error=stringop-truncation -Wno-error=stringop-overflow= -Wno-error=zero-length-bounds -Wno-zero-length-bounds -Wno-error=array-bounds -Wno-array-bounds -Wno-error=unused-function -Wno-unused-function -Wno-error=restrict -Wno-restrict -Wno-error=address-of-packed-member -Wno-address-of-packed-member" \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDK) CFLAGS="$(CFLAGS) -I/sonic/src/openbcm/fix -include int32_t_undefined.h -I$(SDK)/systems/bde/linux/include -I$(SDK)/src/appl/cint -Wno-error -DALPM_ENABLE -DSRC_SOC_COMMON_ACTIVATE_UNUSED -UBCM_PLATFORM_STRING -Wno-error=incompatible-pointer-types -Wno-error=int-conversion -Wno-error=implicit-function-declaration -Wno-error=cpp -Wno-error=format-overflow= -Wno-error=maybe-uninitialized -Wno-error=stringop-truncation -Wno-error=stringop-overflow= -Wno-error=zero-length-bounds -Wno-zero-length-bounds -Wno-error=array-bounds -Wno-array-bounds -Wno-error=unused-function -Wno-unused-function -Wno-error=restrict -Wno-restrict -Wno-error=address-of-packed-member -Wno-address-of-packed-member -DBCM_WARM_BOOT_SUPPORT -DBCM_WARM_BOOT_SUPPORT_SW_DUMP" LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	# SDK=/sonic/src/OpenBCM/sdk-$(SDK_VER) \
	# LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	# SYSOK=1 LINUX_MAKE_USER=1 \
	# YAML=/usr \
	# ESW_CHIPS=1 BCM_56960_A0=1  \
	# EXTRA_CFLAGS=$(EXTRA_KFLAGS) \
	# KFLAGS=$(EXTRA_KFLAGS) \
	# FEATURE_LIST="PTP CINT L3 I2C MEM_SCAN EDITLINE BCM_SAL_PROFILE CUSTOMER TEST CHASSIS MSTP RCPU PTP KNET FCMAP ATPTRANS_SOCKET FLOWTRACKER COLLECTOR KNETSYNC" \
	# CFGFLAGS="-DALPM_ENABLE -DBCM_WARM_BOOT_SUPPORT -DBCM_WARM_BOOT_SUPPORT_SW_DUMP -DSRC_SOC_COMMON_ACTIVATE_UNUSED -Wno-error -UBCM_PLATFORM_STRING -Wno-error=incompatible-pointer-types -Wno-error=int-conversion -Wno-error=implicit-function-declaration -Wno-error=cpp -Wno-error=format-overflow= -Wno-error=maybe-uninitialized -Wno-error=stringop-truncation -Wno-error=stringop-overflow= -Wno-error=zero-length-bounds -Wno-zero-length-bounds -Wno-error=array-bounds -Wno-array-bounds -Wno-error=unused-function -Wno-unused-function -Wno-error=restrict -Wno-restrict -Wno-error=address-of-packed-member -Wno-address-of-packed-member" \
	# $(MAKE) -C $(SDK)/systems/linux/user/opennsa CFLAGS="$(CFLAGS) -I$(SDK)/include -I$(SDK)/systems/bde/linux/include -I$(SDK)/systems/linux/kernel/modules/include -I$(SDK)/systems/bde/shared/include -I$(SDK)/systems/bde/linux/include -I$(SDK)/src/appl/cint -include $(SDK)/include/soc/mcm/enum_types.h -include $(SDK)/include/soc/mcm/enum_max.h -include $(SDK)/include/soc/mcm/allenum.h -Wno-error -DALPM_ENABLE -DSRC_SOC_COMMON_ACTIVATE_UNUSED -UBCM_PLATFORM_STRING -Wno-error=incompatible-pointer-types -Wno-error=int-conversion -Wno-error=implicit-function-declaration -Wno-error=cpp -Wno-error=format-overflow= -Wno-error=maybe-uninitialized -Wno-error=stringop-truncation -Wno-error=stringop-overflow= -Wno-error=zero-length-bounds -Wno-zero-length-bounds -Wno-error=array-bounds -Wno-array-bounds -Wno-error=unused-function -Wno-unused-function -Wno-error=restrict -Wno-restrict -Wno-error=address-of-packed-member -Wno-address-of-packed-member -DBCM_WARM_BOOT_SUPPORT -DBCM_WARM_BOOT_SUPPORT_SW_DUMP" LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	# SDK=/sonic/src/OpenBCM/sdk-$(SDK_VER) \
	# BUILD_KNET_CB=1 \
	# BCM_PTL_SPT=1 ESW_CHIPS=1 BCM_56960_A0=1  \
	# EXTRA_CFLAGS=$(EXTRA_KFLAGS) \
	# KFLAGS=$(EXTRA_KFLAGS) \
	# OPT_CFLAGS=$(EXTRA_KFLAGS) \
	# FEATURE_LIST="PTP CINT L3 I2C MEM_SCAN EDITLINE BCM_SAL_PROFILE CUSTOMER TEST CHASSIS MSTP RCPU PTP KNET FCMAP ATPTRANS_SOCKET FLOWTRACKER COLLECTOR KNETSYNC" \
	# CFGFLAGS="-DALPM_ENABLE -DBCM_WARM_BOOT_SUPPORT -DBCM_WARM_BOOT_SUPPORT_SW_DUMP -DSRC_SOC_COMMON_ACTIVATE_UNUSED -Wno-error -UBCM_PLATFORM_STRING -Wno-error=incompatible-pointer-types -Wno-error=int-conversion -Wno-error=implicit-function-declaration -Wno-error=cpp -Wno-error=format-overflow= -Wno-error=maybe-uninitialized -Wno-error=stringop-truncation -Wno-error=stringop-overflow= -Wno-error=zero-length-bounds -Wno-zero-length-bounds -Wno-error=array-bounds -Wno-array-bounds -Wno-error=unused-function -Wno-unused-function -Wno-error=restrict -Wno-restrict -Wno-error=address-of-packed-member -Wno-address-of-packed-member" \
	# $(MAKE) -C $(SDK)/systems/linux/user/common mod CFLAGS="$(CFLAGS) -I$(SDK)/include -I$(SDK)/systems/bde/linux/include -I$(SDK)/systems/linux/kernel/modules/include -I$(SDK)/systems/bde/shared/include -I$(SDK)/systems/bde/linux/include -I$(SDK)/src/appl/cint -include $(SDK)/include/soc/mcm/enum_types.h -include $(SDK)/include/soc/mcm/enum_max.h -include $(SDK)/include/soc/mcm/allenum.h -Wno-error -DALPM_ENABLE -DSRC_SOC_COMMON_ACTIVATE_UNUSED -UBCM_PLATFORM_STRING -Wno-error=incompatible-pointer-types -Wno-error=int-conversion -Wno-error=implicit-function-declaration -Wno-error=cpp -Wno-error=format-overflow= -Wno-error=maybe-uninitialized -Wno-error=stringop-truncation -Wno-error=stringop-overflow= -Wno-error=zero-length-bounds -Wno-zero-length-bounds -Wno-error=array-bounds -Wno-array-bounds -Wno-error=unused-function -Wno-unused-function -Wno-error=restrict -Wno-restrict -Wno-error=address-of-packed-member -Wno-address-of-packed-member -DBCM_WARM_BOOT_SUPPORT -DBCM_WARM_BOOT_SUPPORT_SW_DUMP $(EXTRA_KERNEL_FLAGS)" LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6


kernel_module:
	echo "Build SDK's kernel_modules"
	mkdir -p $(SDK)/build/linux-x86-smp_generic_64-2_6/

	NO_PRECOMPILED_MODULE=1 \
	ESW_CHIPS=1 \
	KERNBLDDIR=$(KERNLDIR) \
	KFLAGS="-D\"KBUILD_MODNAME=KBUILD_STR(linux-kernel-bde)\"" \
	$(MAKE) -C $(SDK)/systems/linux/kernel/modules/shared CFLAGS="$(CFLAGS) -D\"KBUILD_MODNAME=KBUILD_STR(linux-kernel-bde)\" -I$(SDK)/include -I$(SDK)/systems/bde/linux/include -I$(SDK)/systems/linux/kernel/modules/include -I$(SDK)/systems/bde/shared/include" SDK=$(SDK) LKM_BLDDIR=$(SDK)/kbuild TARGET=linux-x86-smp_generic_64-2_6 platform=x86-smp_generic_64-2_6 EXTRA_CFLAGS="$(EXTRA_CFLAGS)"

	ar rcs $(SDK)/build/linux-x86-smp_generic_64-2_6/libkern.a $(SDK)/build/linux-x86-smp_generic_64-2_6/systems/linux/kernel/modules/shared/*.o

	# Copy missing tools
	cp -Rf /usr/lib/linux-kbuild-5.10/scripts/mod/modpost $(KERNLDIR)/scripts/mod/
	cp -Rf /usr/lib/linux-kbuild-5.10/scripts/basic/fixdep $(KERNLDIR)/scripts/basic/

	ESW_CHIPS=1 \
	KERNBLDDIR=$(KERNLDIR) \
	KFLAGS="-D\"KBUILD_MODNAME=KBUILD_STR(linux-kernel-bde)\"" \
	$(MAKE) -C $(SDK)/systems/bde/linux/kernel CFLAGS="$(CFLAGS) -D\"KBUILD_MODNAME=KBUILD_STR(linux-kernel-bde)\" -I$(SDK)/include -I$(SDK)/systems/bde/linux/include -I$(SDK)/systems/linux/kernel/modules/include -I$(SDK)/systems/bde/shared/include" SDK=$(SDK) LKM_BLDDIR=$(SDK)/kbuild TARGET=linux-x86-smp_generic_64-2_6 platform=x86-smp_generic_64-2_6 EXTRA_CFLAGS="$(EXTRA_CFLAGS)"

	# FIXME in the same way like above
	ESW_CHIPS=1 \
	KERNBLDDIR=$(KERNLDIR) \
	KFLAGS="-D\"KBUILD_MODNAME=KBUILD_STR(linux-user-bde)\"" \
	$(MAKE) -C $(SDK)/systems/bde/linux/user/kernel CFLAGS="$(CFLAGS) -D\"KBUILD_MODNAME=KBUILD_STR(linux-user-bde)\" -I$(SDK)/include -I$(SDK)/systems/bde/linux/include -I$(SDK)/systems/linux/kernel/modules/include -I$(SDK)/systems/bde/shared/include" SDK=$(SDK) LKM_BLDDIR=$(SDK)/kbuild TARGET=linux-x86-smp_generic_64-2_6 platform=x86-smp_generic_64-2_6 EXTRA_CFLAGS="$(EXTRA_CFLAGS)"

	# # This is userspace module
	# $(MAKE) -C $(SDK)/systems/bde/linux/user CFLAGS="$(CFLAGS) -I$(SDK)/include -I$(SDK)/systems/bde/linux/include -I$(SDK)/systems/linux/kernel/modules/include -I$(SDK)/systems/bde/shared/include -include $(SDK)/include/soc/mcm/enum_types.h -include $(SDK)/include/soc/mcm/enum_max.h -include $(SDK)/include/soc/mcm/allenum.h" SDK=$(SDK) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	ESW_CHIPS=1 \
	KERNBLDDIR=$(KERNLDIR) \
	KFLAGS="-D\"KBUILD_MODNAME=KBUILD_STR(linux-bcm-knet)\"" \
	$(MAKE) -C $(SDK)/systems/linux/kernel/modules/bcm-knet CFLAGS="$(CFLAGS) -D\"KBUILD_MODNAME=KBUILD_STR(linux-bcm-knet)\" -I$(SDK)/include -I$(SDK)/systems/bde/linux/include -I$(SDK)/systems/linux/kernel/modules/include -I$(SDK)/systems/bde/shared/include" SDK=$(SDK) LKM_BLDDIR=$(SDK)/kbuild TARGET=linux-x86-smp_generic_64-2_6 platform=x86-smp_generic_64-2_6 EXTRA_CFLAGS="$(EXTRA_CFLAGS)"

sdk_env:
	echo "Prepare SDK env"
	# create links
	# Taken from SONiC repo of saibcm-modules package from file platform/broadcom/saibcm-modules/debian/rules
	cd /; sudo mkdir -p /lib/modules/$(KERNVERSION)-amd64 2>/dev/null || true
	cd /; sudo rm /lib/modules/$(KERNVERSION)-amd64/build 2>/dev/null || true
	cd /; sudo rm /lib/modules/$(KERNVERSION)-amd64/source 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-common/ /lib/modules/$(KERNVERSION)-amd64/source 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-amd64/ /lib/modules/$(KERNVERSION)-amd64/build 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-amd64/include/generated/ /usr/src/linux-headers-$(KERNVERSION)-common/include/generated 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-amd64/arch/x86/include/generated/ /usr/src/linux-headers-$(KERNVERSION)-common/arch/x86/include/generated 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-amd64/arch/x86/module.lds /usr/src/linux-headers-$(KERNVERSION)-common/arch/x86/module.lds 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-amd64/include/config/ /usr/src/linux-headers-$(KERNVERSION)-common/include/config 2>/dev/null || true
	cd /; sudo cp /usr/src/linux-headers-$(KERNVERSION)-amd64/Module.symvers /usr/src/linux-headers-$(KERNVERSION)-common/Module.symvers 2>/dev/null || true
	mkdir -p $(SDK)/kbuild

	SDK=/sonic/src/OpenBCM/sdk-$(SDK_VER) \
	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_PHYMOD=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDK)/systems/bde/linux/user CFLAGS="$(CFLAGS) -I$(SDK)/include -I$(SDK)/systems/bde/linux/include -I$(SDK)/systems/linux/kernel/modules/include -I$(SDK)/systems/bde/shared/include -include $(SDK)/include/soc/mcm/enum_types.h -include $(SDK)/include/soc/mcm/enum_max.h -include $(SDK)/include/soc/mcm/allenum.h" SDK=$(SDK) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

kdist_config: prep-deb-files

kdist_clean: clean
	dh_testdir
	dh_clean
	# SDK=/sonic/src/OpenBCM/sdk-$(SDK_VER) \
	# LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	# NO_SAL_APPL=1 BUILD_PHYMOD=1 SYSOK=1 LINUX_MAKE_USER=1 \
	# YAML=/usr \
	# KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	# KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	# KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	# $(MAKE) -C $(SDK)/systems/bde/linux/user clean CFLAGS="$(CFLAGS) -I$(SDK)/systems/bde/linux/include" LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	# # LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	# # BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	# # YAML=/usr \
	# # KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	# # KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	# # KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	# # $(MAKE) -C $(SDKLT)/linux/knet clean SDK=$(SDKLT) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	# # LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	# # BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	# # YAML=/usr \
	# # KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	# # KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	# # KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	# # $(MAKE) -C $(SDKLT)/linux/bde clean SDK=$(SDKLT) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	# # LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	# # BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	# # YAML=/usr \
	# # KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	# # KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	# # KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	# # $(MAKE) -C $(SDKLT) clean SDK=$(SDKLT) LKM_BLDDIR=$(SDK)/kbuild LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	# LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	# NO_SAL_APPL=1 BUILD_PHYMOD=1 SYSOK=1 LINUX_MAKE_USER=1 \
	# YAML=/usr \
	# KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	# KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	# KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	# $(MAKE) -C $(SDK) clean TARGET=$(TARGET) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

configure: configure-stamp
configure-stamp:
	dh_testdir
	touch configure-stamp


build-arch: configure-stamp  build-arch-stamp
build-arch-stamp: sdk_env sdk_build
	dh_testdir

build-indep:  configure-stamp build-indep-stamp
build-indep-stamp:
	dh_testdir
	touch $@

build: build-arch

clean:
	dh_testdir
	#dh_testroot
	rm -f build-arch-stamp build-indep-stamp configure-stamp

	# Add here commands to clean up after the build process.
	# SDK=$(realpath .) LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	#     KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	#     KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	#     $(MAKE) -C systems/linux/user/x86-smp_generic_64-2_6 clean

	# SDK=$(realpath .) BUILD_KNET_CB=1 \
	#     KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	#     $(MAKE) -C sdklt/ clean

	dh_clean

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	dh_install

binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_installchangelogs  -i
	dh_installdocs -i
	dh_installexamples -i
	dh_installman -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_installdeb -i
	dh_shlibdeps -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i --filename $(PKG_NAME)

binary-arch: build install
	dh_testdir -s
	dh_testroot -s

	dh_installdocs -s
	dh_installexamples -s
	dh_installmenu -s
	dh_installmodules -s
	dh_systemd_enable -s
	dh_installinit -s
	dh_systemd_start -s
	dh_installcron -s
	dh_installinfo -s
	dh_installchangelogs  -s
	dh_strip -s
	dh_link -s
	dh_compress -s
	dh_fixperms -s
	dh_makeshlibs -s
	dh_installdeb -s
	dh_shlibdeps -s
	dh_gencontrol -s -- -n"$(PKG_NAME)"
	dh_md5sums -s
	dh_builddeb -s --filename $(PKG_NAME)

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure binary-modules kdist kdist_configure kdist_image kdist_clean
