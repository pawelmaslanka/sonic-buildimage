#!/usr/bin/make -f
# -*- makefile -*-

# NOTE: Whole file was inspired by rules for saibcm-modules package from SONiC repo:
# https://github.com/sonic-net/sonic-buildimage/blob/master/platform/broadcom/saibcm-modules/debian/rules

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

psource:=openbcm-source
sname:=openbcm

PKG_NAME=openbcm_6.5.21_amd64.deb
PACKAGE=openbcm
MA_DIR ?= /usr/share/modass
KVERSION ?= 5.10.0-23-2-amd64
KERNVERSION ?= 5.10.0-23-2

platform=x86-smp_generic_64-2_6
TARGET=unix-user

SDKLT=/sonic/src/OpenBCM/sdk-6.5.21/libs/sdklt
SDK=/sonic/src/OpenBCM/sdk-6.5.21

-include $(MA_DIR)/include/generic.make
-include $(MA_DIR)/include/common-rules.make

include $(SDK)/make/Make.config

sdk_build: sdk sdklt kernel_module

sdk:
	echo "Build SDK libs"
	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	$(MAKE) -f $(SDK)/make/Make.libsum SDK=$(SDK) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	SDK=/sonic/src/OpenBCM/sdk-6.5.21 \
	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDK) CFLAGS="$(CFLAGS) -I$(SDK)/systems/bde/linux/include -I$(SDK)/src/appl/cint" LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDK) TARGET=$(TARGET) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6


sdklt:
	echo "Build SDKLT libs"
	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDKLT) SDK=$(SDKLT) LKM_BLDDIR=$(SDK)/kbuild LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

kernel_module:
	echo "Build SDKLT's kernel_modules"
	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDKLT)/linux/bde SDK=$(SDKLT) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDKLT)/linux/knet SDK=$(SDKLT) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6
	cp $(SDK)/kbuild/linux_ngbde.ko /sonic/src/openbcm
	cp $(SDK)/kbuild/linux_ngknet.ko /sonic/src/openbcm

sdk_env:
	echo "Prepare SDK env"
	# create links
	# Taken from SONiC repo of saibcm-modules package from file platform/broadcom/saibcm-modules/debian/rules
	cd /; sudo mkdir -p /lib/modules/$(KERNVERSION)-amd64 2>/dev/null || true
	cd /; sudo rm /lib/modules/$(KERNVERSION)-amd64/build 2>/dev/null || true
	cd /; sudo rm /lib/modules/$(KERNVERSION)-amd64/source 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-common/ /lib/modules/$(KERNVERSION)-amd64/source 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-amd64/ /lib/modules/$(KERNVERSION)-amd64/build 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-amd64/include/generated/ /usr/src/linux-headers-$(KERNVERSION)-common/include/generated 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-amd64/arch/x86/include/generated/ /usr/src/linux-headers-$(KERNVERSION)-common/arch/x86/include/generated 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-amd64/arch/x86/module.lds /usr/src/linux-headers-$(KERNVERSION)-common/arch/x86/module.lds 2>/dev/null || true
	cd /; sudo ln -s /usr/src/linux-headers-$(KERNVERSION)-amd64/include/config/ /usr/src/linux-headers-$(KERNVERSION)-common/include/config 2>/dev/null || true
	cd /; sudo cp /usr/src/linux-headers-$(KERNVERSION)-amd64/Module.symvers /usr/src/linux-headers-$(KERNVERSION)-common/Module.symvers 2>/dev/null || true
	mkdir -p $(SDK)/kbuild

	SDK=/sonic/src/OpenBCM/sdk-6.5.21 \
	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDK)/systems/bde/linux/user CFLAGS="$(CFLAGS) -I$(SDK)/systems/bde/linux/include" LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

kdist_config: prep-deb-files

kdist_clean: clean
	dh_testdir
	dh_clean
	SDK=/sonic/src/OpenBCM/sdk-6.5.21 \
	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDK)/systems/bde/linux/user clean CFLAGS="$(CFLAGS) -I$(SDK)/systems/bde/linux/include" LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDKLT)/linux/knet clean SDK=$(SDKLT) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDKLT)/linux/bde clean SDK=$(SDKLT) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDKLT) clean SDK=$(SDKLT) LKM_BLDDIR=$(SDK)/kbuild LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

	LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	BUILD_SDKLT=1 NO_SAL_APPL=1 BUILD_PHYMOD=1 LTSW_CHIPS=1 SYSOK=1 LINUX_MAKE_USER=1 \
	YAML=/usr \
	KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	$(MAKE) -C $(SDK) clean TARGET=$(TARGET) LKM_BLDDIR=$(SDK)/kbuild TARGET=unix-user platform=x86-smp_generic_64-2_6

configure: configure-stamp
configure-stamp:
	dh_testdir
	touch configure-stamp


build-arch: configure-stamp  build-arch-stamp
build-arch-stamp: sdk_env sdk_build
	dh_testdir

build-indep:  configure-stamp build-indep-stamp
build-indep-stamp:
	dh_testdir
	touch $@

build: build-arch

clean:
	dh_testdir
	#dh_testroot
	rm -f build-arch-stamp build-indep-stamp configure-stamp

	# Add here commands to clean up after the build process.
	# SDK=$(realpath .) LINUX_UAPI_SPLIT=1 DEBIAN_LINUX_HEADER=1 BUILD_KNET_CB=1 \
	#     KERNDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	#     KERNEL_SRC=/usr/src/linux-headers-$(KERNVERSION)-amd64 \
	#     $(MAKE) -C systems/linux/user/x86-smp_generic_64-2_6 clean

	# SDK=$(realpath .) BUILD_KNET_CB=1 \
	#     KDIR=/usr/src/linux-headers-$(KERNVERSION)-common \
	#     $(MAKE) -C sdklt/ clean

	dh_clean

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs
	dh_install

binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_installchangelogs  -i
	dh_installdocs -i
	dh_installexamples -i
	dh_installman -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_installdeb -i
	dh_shlibdeps -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i --filename $(PKG_NAME)

binary-arch: build install
	dh_testdir -s
	dh_testroot -s

	dh_installdocs -s
	dh_installexamples -s
	dh_installmenu -s
	dh_installmodules -s
	dh_systemd_enable -s
	dh_installinit -s
	dh_systemd_start -s
	dh_installcron -s
	dh_installinfo -s
	dh_installchangelogs  -s
	dh_strip -s
	dh_link -s
	dh_compress -s
	dh_fixperms -s
	dh_makeshlibs -s
	dh_installdeb -s
	dh_shlibdeps -s
	dh_gencontrol -s -- -n"$(PKG_NAME)"
	dh_md5sums -s
	dh_builddeb -s --filename $(PKG_NAME)

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure binary-modules kdist kdist_configure kdist_image kdist_clean
