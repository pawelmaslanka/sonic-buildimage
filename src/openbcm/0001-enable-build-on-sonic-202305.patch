diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmbd/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmbd/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmbd/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmbd/cmd/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmbd/cmicd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmbd/cmicd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmbd/cmicd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmbd/cmicd/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmbd/cmicx/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmbd/cmicx/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmbd/cmicx/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmbd/cmicx/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmbd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmbd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmbd/Makefile	2024-06-03 13:49:22.385025185 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmbd/Makefile	2024-06-03 13:48:02.118703511 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd cmicd cmicx symlog
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmbd/symlog/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmbd/symlog/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmbd/symlog/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmbd/symlog/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmdi/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmdi/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmdi/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmdi/cmd/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmdi/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmdi/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmdi/Makefile	2024-06-03 13:49:22.385025185 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmdi/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmdrd/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmdrd/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmdrd/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmdrd/cmd/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmdrd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmdrd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmdrd/Makefile	2024-06-03 13:49:22.385025185 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmdrd/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmlt/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmlt/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmlt/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmlt/cmd/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmlt/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmlt/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmlt/Makefile	2024-06-03 13:49:22.389025300 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmlt/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmmgmt/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmmgmt/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmmgmt/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmmgmt/cmd/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmmgmt/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmmgmt/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmmgmt/Makefile	2024-06-03 13:49:22.389025300 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmmgmt/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
\ No newline at end of file
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmpc/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmpc/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmpc/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmpc/cmd/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmpc/diag/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmpc/diag/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmpc/diag/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmpc/diag/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmpc/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmpc/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmpc/Makefile	2024-06-03 13:49:22.389025300 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmpc/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd diag
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/chip/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/cmd/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmpkt/Makefile	2024-06-03 13:49:22.389025300 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmpkt/Makefile	2024-06-03 13:48:02.122703627 +0200
@@ -5,3 +5,9 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+# FIXME: Filter-out not needed chip
+SUBDIRS := cmd chip/bcm56780_a0 chip/bcm56880_a0 chip/bcm56990_a0 chip/bcm56990_b0
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmptm/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmptm/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmptm/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmptm/cmd/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmptm/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmptm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmptm/Makefile	2024-06-03 13:49:22.389025300 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmptm/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmtrm/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmtrm/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmtrm/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmtrm/cmd/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bcmtrm/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bcmtrm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bcmtrm/Makefile	2024-06-03 13:49:22.389025300 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/bcmtrm/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/board/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/board/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/board/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/board/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/board/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/board/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/board/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/board/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/board/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/board/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/board/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/board/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/board/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/board/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/board/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/board/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/board/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcma/board/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/board/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/board/chip/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bsl/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bsl/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bsl/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bsl/cmd/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bsl/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bsl/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bsl/Makefile	2024-06-03 13:49:22.389025300 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/bsl/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd sinks
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/bsl/sinks/Makefile sdk-6.5.21.new/libs/sdklt/bcma/bsl/sinks/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/bsl/sinks/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/bsl/sinks/Makefile	2024-06-03 13:48:02.126703742 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/cint/cmd/bcma_cint_cmd.c sdk-6.5.21.new/libs/sdklt/bcma/cint/cmd/bcma_cint_cmd.c
--- sdk-6.5.21.origin/libs/sdklt/bcma/cint/cmd/bcma_cint_cmd.c	2024-06-03 13:49:22.389025300 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/cint/cmd/bcma_cint_cmd.c	2024-06-03 13:48:02.130703858 +0200
@@ -55,7 +55,7 @@
     { NULL }
 };
 
-cint_data_t cmd_cint_data =
+static cint_data_t cmd_cint_data =
 {
     NULL,
     __cint_cmd_functions,
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/cint/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/cint/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/cint/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/cint/cmd/Makefile	2024-06-03 13:48:02.130703858 +0200
@@ -0,0 +1,16 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+# Build CINT as SDKLT LIB
+
+CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_SDKLT=1
+CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_PARSER=1
+CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_CINT_LOAD=0
+TMP_SDK_CPPFLAGS := $(filter-out $(CINT_CPPFLAGS),$(SDK_CPPFLAGS))
+TMP_SDK_CPPFLAGS += $(CINT_CPPFLAGS)
+override SDK_CPPFLAGS := $(TMP_SDK_CPPFLAGS)
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/cint/core/cint_config.h sdk-6.5.21.new/libs/sdklt/bcma/cint/core/cint_config.h
--- sdk-6.5.21.origin/libs/sdklt/bcma/cint/core/cint_config.h	2024-06-03 13:49:22.389025300 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/cint/core/cint_config.h	2024-06-03 13:48:02.130703858 +0200
@@ -33,6 +33,10 @@
 #define CINT_CONFIG_INCLUDE_PARSER 1
 #endif
 
+#ifndef CINT_CONFIG_INCLUDE_SDKLT
+#define CINT_CONFIG_INCLUDE_SDKLT 1
+#endif
+
 /*
  *
  * Defines the number of dimensions supported for arrays.  This should be the
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/cint/core/Makefile sdk-6.5.21.new/libs/sdklt/bcma/cint/core/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/cint/core/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/cint/core/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -0,0 +1,154 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+# ifdef BCMA_CINT_ENABLE
+# Build CINT as SDKLT LIB
+
+CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_SDKLT=1
+CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_PARSER=1
+CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_CINT_LOAD=0
+CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_MAIN=0
+TMP_SDK_CPPFLAGS := $(filter-out $(CINT_CPPFLAGS),$(SDK_CPPFLAGS))
+TMP_SDK_CPPFLAGS += $(CINT_CPPFLAGS)
+override SDK_CPPFLAGS := $(TMP_SDK_CPPFLAGS)
+
+include $(SDK)/make/sublib.mk
+
+# else
+# # Build standalone interpreter application
+
+# CC := /tools/bin/gcc
+# PERL := perl
+# FLEX := /projects/ntsw-tools/bin/flex-2.5.31
+# YACC := /tools/bin/yacc
+# PATCH := patch
+# REPLACESTRING := /projects/ntsw-tools/bin/replacestring
+# YEAR := $(shell date +%Y)
+# TMP := tmp.h
+# # CORE_DIR := core/
+# CORE_DIR := ./
+
+# SRCS := cint_ast.c
+# SRCS += cint_ast_debug.c
+# SRCS += cint_builtins.c
+# SRCS += cint_datatypes.c
+# SRCS += cint_debug.c
+# SRCS += cint_error.c
+# SRCS += cint_eval_ast_cint.c
+# SRCS += cint_eval_ast_print.c
+# SRCS += cint_eval_asts.c
+# SRCS += cint_internal.c
+# SRCS += cint_interpreter.c
+# SRCS += cint_operators.c
+# SRCS += cint_parser.c
+# SRCS += cint_test_data.c
+# SRCS += cint_variables.c
+# SRCS += main.c
+# SRCS += cint_stubs.c
+# # generated
+# SRCS += cint_c.lex.c
+# SRCS += cint_c.tab.c
+
+# CFLAGS := -g -O0
+
+# # portability interfaces - pick one
+# CFLAGS += -DCINT_CONFIG_INCLUDE_STDLIB=1
+# CFLAGS += -DCINT_CONFIG_INCLUDE_SDK_SAL=0
+# CFLAGS += -DCINT_CONFIG_INCLUDE_SDKLT=0
+# CFLAGS += -DCINT_CONFIG_INCLUDE_STUBS=0
+
+# # test features
+# CFLAGS += -DCINT_CONFIG_INCLUDE_LOAD=1
+# CFLAGS += -DCINT_CONFIG_INCLUDE_MAIN=1
+# CFLAGS += -DCINT_CONFIG_INCLUDE_TEST_DATA=1
+
+# # FILE IO and READLINE
+# #CFLAGS += -DCINT_CONFIG_FILE_IO=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_XINCLUDE=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_PARSER_READLINE=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_PARSER_ADD_HISTORY=0
+
+# # other configs
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_PARSER=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_DOUBLES=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_LONGLONGS=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_CINT_LOAD=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_DTRACE=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_DEBUG=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_POSIX_TIMER=0
+# #CFLAGS += -DCINT_CONFIG_YAPI=1
+
+# # unused configs
+# #CFLAGS += -DCINT_CONFIG_PARSER_STDIN=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_CINT_SOURCE=1
+
+# CFLAGS += -Wall
+# CFLAGS += -Werror
+# CFLAGS += -DYYDEBUG
+
+# OBJS := $(SRCS:%.c=$(CORE_DIR)%.o)
+
+# DEPS := $(SRCS:%.c=$(CORE_DIR)%.d)
+
+# all: gen cint
+
+# gen: cint_c.lex.c cint_c.tab.c cint_wrappers.h
+
+# cint: $(OBJS)
+# 	$(CC) -o $@ $+ -ldl -lrt -lreadline -lcurses
+
+# cint_c.tab.c: $(CORE_DIR)cint_grammar.y
+# 	$(YACC) -dv -o $(CORE_DIR)$@ $<
+# # Avoid compiler warnings
+# 	$(REPLACESTRING) -a "YYSTYPE yylval;" "YYSTYPE yylval = 0;" $(CORE_DIR)$@
+# 	$(REPLACESTRING) -a "YYLTYPE yylloc;" "YYLTYPE yylloc = {0,0,0,0};" $(CORE_DIR)$@
+# # use CINT bindings via BISON interfaces
+# 	$(REPLACESTRING) -a "yyps = (yypstate *) malloc (sizeof *yyps)" \
+# 		"yyps = (yypstate *) YYMALLOC (sizeof *yyps)" $(CORE_DIR)$@
+# 	$(REPLACESTRING) -a "free (yyps)" "YYFREE (yyps)" $(CORE_DIR)$@
+# # use standard BRCM id/copyright
+# 	@echo '/* ' > $(TMP)
+# 	@echo -n '   $$' >> $(TMP)
+# 	@echo -n 'Id: ' >> $(TMP)
+# 	@echo '$$' >> $(TMP)
+# 	@echo '   $$Copyright: $(YEAR) Broadcom Corp.' >> $(TMP)
+# 	@echo '   All Rights Reserved.$$' >> $(TMP)
+# 	@echo '*/' >> $(TMP)
+# 	@cat $(CORE_DIR)cint_c.tab.h >> $(TMP)
+# 	@rm $(CORE_DIR)cint_c.tab.h
+# 	@mv tmp.h $(CORE_DIR)cint_c.tab.h
+
+# cint_c.lex.c: $(CORE_DIR)cint_scanner.l $(CORE_DIR)lex.patch
+# 	$(FLEX) --nounistd -o $(CORE_DIR)$@ $<
+# 	$(PATCH) -p1 $(CORE_DIR)$@ < $(CORE_DIR)lex.patch
+
+# cint_wrappers.h: $(CORE_DIR)wrappergen.pl
+# 	$(PERL) $< > $(CORE_DIR)$@
+
+# utest: all utest-a.h utest-b.h
+# 	rm -f *.code *.actual *.expected
+# 	$(PERL) $(CORE_DIR)utest.pl $(CORE_DIR)utests
+
+# utest-a.h:
+# 	echo "print 1;" > $@
+
+# utest-b.h:
+# 	echo "#include <utest-a.h>" > $@
+# 	echo "print 121;" >> $@
+# 	echo "#include <utest-a.h>" >> $@
+
+# clean:
+# 	-rm -f cint $(OBJS) $(DEPS) $(CORE_DIR)cint_wrappers.h $(CORE_DIR)cint_c.*.[ch] $(CORE_DIR)cint_c.output utest-*.h
+
+# ifneq ($(MAKECMDGOALS),clean)
+#     include $(DEPS)
+# endif
+
+# # calculate C include dependencies
+# %.d: %.c
+# 	@$(SHELL) -ec "$(CC) -M -MG $(CFLAGS) $< > $@; [ -s $@ ] || rm -f $@"
+
+# endif
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/cint/Makefile sdk-6.5.21.new/libs/sdklt/bcma/cint/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/cint/Makefile	2024-06-03 13:49:22.389025300 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/cint/Makefile	2024-06-03 13:48:02.130703858 +0200
@@ -1,152 +1,159 @@
-#
-# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
-# 
-# Copyright 2007-2020 Broadcom Inc. All rights reserved.
-#
-
-ifdef BCMA_CINT_ENABLE
-# Build CINT as SDKLT LIB
-
-CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_SDKLT=1
-CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_PARSER=1
-CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_CINT_LOAD=0
-TMP_SDK_CPPFLAGS := $(filter-out $(CINT_CPPFLAGS),$(SDK_CPPFLAGS))
-TMP_SDK_CPPFLAGS += $(CINT_CPPFLAGS)
-override SDK_CPPFLAGS := $(TMP_SDK_CPPFLAGS)
+# #
+# # This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# # 
+# # Copyright 2007-2020 Broadcom Inc. All rights reserved.
+# #
+
+# ifdef BCMA_CINT_ENABLE
+# # Build CINT as SDKLT LIB
+
+# CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_SDKLT=1
+# CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_PARSER=1
+# CINT_CPPFLAGS += -DCINT_CONFIG_INCLUDE_CINT_LOAD=0
+# TMP_SDK_CPPFLAGS := $(filter-out $(CINT_CPPFLAGS),$(SDK_CPPFLAGS))
+# TMP_SDK_CPPFLAGS += $(CINT_CPPFLAGS)
+# override SDK_CPPFLAGS := $(TMP_SDK_CPPFLAGS)
+
+# include $(SDK)/make/sublib.mk
+
+# else
+# # Build standalone interpreter application
+
+# CC := /tools/bin/gcc
+# PERL := perl
+# FLEX := /projects/ntsw-tools/bin/flex-2.5.31
+# YACC := /tools/bin/yacc
+# PATCH := patch
+# REPLACESTRING := /projects/ntsw-tools/bin/replacestring
+# YEAR := $(shell date +%Y)
+# TMP := tmp.h
+# CORE_DIR := core/
+
+# SRCS := cint_ast.c
+# SRCS += cint_ast_debug.c
+# SRCS += cint_builtins.c
+# SRCS += cint_datatypes.c
+# SRCS += cint_debug.c
+# SRCS += cint_error.c
+# SRCS += cint_eval_ast_cint.c
+# SRCS += cint_eval_ast_print.c
+# SRCS += cint_eval_asts.c
+# SRCS += cint_internal.c
+# SRCS += cint_interpreter.c
+# SRCS += cint_operators.c
+# SRCS += cint_parser.c
+# SRCS += cint_test_data.c
+# SRCS += cint_variables.c
+# SRCS += main.c
+# SRCS += cint_stubs.c
+# # generated
+# SRCS += cint_c.lex.c
+# SRCS += cint_c.tab.c
+
+# CFLAGS := -g -O0
+
+# # portability interfaces - pick one
+# CFLAGS += -DCINT_CONFIG_INCLUDE_STDLIB=1
+# CFLAGS += -DCINT_CONFIG_INCLUDE_SDK_SAL=0
+# CFLAGS += -DCINT_CONFIG_INCLUDE_SDKLT=0
+# CFLAGS += -DCINT_CONFIG_INCLUDE_STUBS=0
+
+# # test features
+# CFLAGS += -DCINT_CONFIG_INCLUDE_LOAD=1
+# CFLAGS += -DCINT_CONFIG_INCLUDE_MAIN=1
+# CFLAGS += -DCINT_CONFIG_INCLUDE_TEST_DATA=1
+
+# # FILE IO and READLINE
+# #CFLAGS += -DCINT_CONFIG_FILE_IO=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_XINCLUDE=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_PARSER_READLINE=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_PARSER_ADD_HISTORY=0
+
+# # other configs
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_PARSER=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_DOUBLES=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_LONGLONGS=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_CINT_LOAD=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_DTRACE=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_DEBUG=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_POSIX_TIMER=0
+# #CFLAGS += -DCINT_CONFIG_YAPI=1
+
+# # unused configs
+# #CFLAGS += -DCINT_CONFIG_PARSER_STDIN=0
+# #CFLAGS += -DCINT_CONFIG_INCLUDE_CINT_SOURCE=1
+
+# CFLAGS += -Wall
+# CFLAGS += -Werror
+# CFLAGS += -DYYDEBUG
+
+# OBJS := $(SRCS:%.c=$(CORE_DIR)%.o)
+
+# DEPS := $(SRCS:%.c=$(CORE_DIR)%.d)
+
+# all: gen cint
+
+# gen: cint_c.lex.c cint_c.tab.c cint_wrappers.h
+
+# cint: $(OBJS)
+# 	$(CC) -o $@ $+ -ldl -lrt -lreadline -lcurses
+
+# cint_c.tab.c: $(CORE_DIR)cint_grammar.y
+# 	$(YACC) -dv -o $(CORE_DIR)$@ $<
+# # Avoid compiler warnings
+# 	$(REPLACESTRING) -a "YYSTYPE yylval;" "YYSTYPE yylval = 0;" $(CORE_DIR)$@
+# 	$(REPLACESTRING) -a "YYLTYPE yylloc;" "YYLTYPE yylloc = {0,0,0,0};" $(CORE_DIR)$@
+# # use CINT bindings via BISON interfaces
+# 	$(REPLACESTRING) -a "yyps = (yypstate *) malloc (sizeof *yyps)" \
+# 		"yyps = (yypstate *) YYMALLOC (sizeof *yyps)" $(CORE_DIR)$@
+# 	$(REPLACESTRING) -a "free (yyps)" "YYFREE (yyps)" $(CORE_DIR)$@
+# # use standard BRCM id/copyright
+# 	@echo '/* ' > $(TMP)
+# 	@echo -n '   $$' >> $(TMP)
+# 	@echo -n 'Id: ' >> $(TMP)
+# 	@echo '$$' >> $(TMP)
+# 	@echo '   $$Copyright: $(YEAR) Broadcom Corp.' >> $(TMP)
+# 	@echo '   All Rights Reserved.$$' >> $(TMP)
+# 	@echo '*/' >> $(TMP)
+# 	@cat $(CORE_DIR)cint_c.tab.h >> $(TMP)
+# 	@rm $(CORE_DIR)cint_c.tab.h
+# 	@mv tmp.h $(CORE_DIR)cint_c.tab.h
+
+# cint_c.lex.c: $(CORE_DIR)cint_scanner.l $(CORE_DIR)lex.patch
+# 	$(FLEX) --nounistd -o $(CORE_DIR)$@ $<
+# 	$(PATCH) -p1 $(CORE_DIR)$@ < $(CORE_DIR)lex.patch
+
+# cint_wrappers.h: $(CORE_DIR)wrappergen.pl
+# 	$(PERL) $< > $(CORE_DIR)$@
+
+# utest: all utest-a.h utest-b.h
+# 	rm -f *.code *.actual *.expected
+# 	$(PERL) $(CORE_DIR)utest.pl $(CORE_DIR)utests
+
+# utest-a.h:
+# 	echo "print 1;" > $@
+
+# utest-b.h:
+# 	echo "#include <utest-a.h>" > $@
+# 	echo "print 121;" >> $@
+# 	echo "#include <utest-a.h>" >> $@
+
+# clean:
+# 	-rm -f cint $(OBJS) $(DEPS) $(CORE_DIR)cint_wrappers.h $(CORE_DIR)cint_c.*.[ch] $(CORE_DIR)cint_c.output utest-*.h
+
+# ifneq ($(MAKECMDGOALS),clean)
+#     include $(DEPS)
+# endif
+
+# # calculate C include dependencies
+# %.d: %.c
+# 	@$(SHELL) -ec "$(CC) -M -MG $(CFLAGS) $< > $@; [ -s $@ ] || rm -f $@"
 
-include $(SDK)/make/sublib.mk
+# endif
 
-else
-# Build standalone interpreter application
+include $(SDK)/make/sublib.mk
 
-CC := /tools/bin/gcc
-PERL := perl
-FLEX := /projects/ntsw-tools/bin/flex-2.5.31
-YACC := /tools/bin/yacc
-PATCH := patch
-REPLACESTRING := /projects/ntsw-tools/bin/replacestring
-YEAR := $(shell date +%Y)
-TMP := tmp.h
-CORE_DIR := core/
-
-SRCS := cint_ast.c
-SRCS += cint_ast_debug.c
-SRCS += cint_builtins.c
-SRCS += cint_datatypes.c
-SRCS += cint_debug.c
-SRCS += cint_error.c
-SRCS += cint_eval_ast_cint.c
-SRCS += cint_eval_ast_print.c
-SRCS += cint_eval_asts.c
-SRCS += cint_internal.c
-SRCS += cint_interpreter.c
-SRCS += cint_operators.c
-SRCS += cint_parser.c
-SRCS += cint_test_data.c
-SRCS += cint_variables.c
-SRCS += main.c
-SRCS += cint_stubs.c
-# generated
-SRCS += cint_c.lex.c
-SRCS += cint_c.tab.c
-
-CFLAGS := -g -O0
-
-# portability interfaces - pick one
-CFLAGS += -DCINT_CONFIG_INCLUDE_STDLIB=1
-CFLAGS += -DCINT_CONFIG_INCLUDE_SDK_SAL=0
-CFLAGS += -DCINT_CONFIG_INCLUDE_SDKLT=0
-CFLAGS += -DCINT_CONFIG_INCLUDE_STUBS=0
-
-# test features
-CFLAGS += -DCINT_CONFIG_INCLUDE_LOAD=1
-CFLAGS += -DCINT_CONFIG_INCLUDE_MAIN=1
-CFLAGS += -DCINT_CONFIG_INCLUDE_TEST_DATA=1
-
-# FILE IO and READLINE
-#CFLAGS += -DCINT_CONFIG_FILE_IO=0
-#CFLAGS += -DCINT_CONFIG_INCLUDE_XINCLUDE=0
-#CFLAGS += -DCINT_CONFIG_INCLUDE_PARSER_READLINE=0
-#CFLAGS += -DCINT_CONFIG_INCLUDE_PARSER_ADD_HISTORY=0
-
-# other configs
-#CFLAGS += -DCINT_CONFIG_INCLUDE_PARSER=0
-#CFLAGS += -DCINT_CONFIG_INCLUDE_DOUBLES=0
-#CFLAGS += -DCINT_CONFIG_INCLUDE_LONGLONGS=0
-#CFLAGS += -DCINT_CONFIG_INCLUDE_CINT_LOAD=0
-#CFLAGS += -DCINT_CONFIG_INCLUDE_DTRACE=0
-#CFLAGS += -DCINT_CONFIG_INCLUDE_DEBUG=0
-#CFLAGS += -DCINT_CONFIG_INCLUDE_POSIX_TIMER=0
-#CFLAGS += -DCINT_CONFIG_YAPI=1
-
-# unused configs
-#CFLAGS += -DCINT_CONFIG_PARSER_STDIN=0
-#CFLAGS += -DCINT_CONFIG_INCLUDE_CINT_SOURCE=1
-
-CFLAGS += -Wall
-CFLAGS += -Werror
-CFLAGS += -DYYDEBUG
-
-OBJS := $(SRCS:%.c=$(CORE_DIR)%.o)
-
-DEPS := $(SRCS:%.c=$(CORE_DIR)%.d)
-
-all: gen cint
-
-gen: cint_c.lex.c cint_c.tab.c cint_wrappers.h
-
-cint: $(OBJS)
-	$(CC) -o $@ $+ -ldl -lrt -lreadline -lcurses
-
-cint_c.tab.c: $(CORE_DIR)cint_grammar.y
-	$(YACC) -dv -o $(CORE_DIR)$@ $<
-# Avoid compiler warnings
-	$(REPLACESTRING) -a "YYSTYPE yylval;" "YYSTYPE yylval = 0;" $(CORE_DIR)$@
-	$(REPLACESTRING) -a "YYLTYPE yylloc;" "YYLTYPE yylloc = {0,0,0,0};" $(CORE_DIR)$@
-# use CINT bindings via BISON interfaces
-	$(REPLACESTRING) -a "yyps = (yypstate *) malloc (sizeof *yyps)" \
-		"yyps = (yypstate *) YYMALLOC (sizeof *yyps)" $(CORE_DIR)$@
-	$(REPLACESTRING) -a "free (yyps)" "YYFREE (yyps)" $(CORE_DIR)$@
-# use standard BRCM id/copyright
-	@echo '/* ' > $(TMP)
-	@echo -n '   $$' >> $(TMP)
-	@echo -n 'Id: ' >> $(TMP)
-	@echo '$$' >> $(TMP)
-	@echo '   $$Copyright: $(YEAR) Broadcom Corp.' >> $(TMP)
-	@echo '   All Rights Reserved.$$' >> $(TMP)
-	@echo '*/' >> $(TMP)
-	@cat $(CORE_DIR)cint_c.tab.h >> $(TMP)
-	@rm $(CORE_DIR)cint_c.tab.h
-	@mv tmp.h $(CORE_DIR)cint_c.tab.h
-
-cint_c.lex.c: $(CORE_DIR)cint_scanner.l $(CORE_DIR)lex.patch
-	$(FLEX) --nounistd -o $(CORE_DIR)$@ $<
-	$(PATCH) -p1 $(CORE_DIR)$@ < $(CORE_DIR)lex.patch
-
-cint_wrappers.h: $(CORE_DIR)wrappergen.pl
-	$(PERL) $< > $(CORE_DIR)$@
-
-utest: all utest-a.h utest-b.h
-	rm -f *.code *.actual *.expected
-	$(PERL) $(CORE_DIR)utest.pl $(CORE_DIR)utests
-
-utest-a.h:
-	echo "print 1;" > $@
-
-utest-b.h:
-	echo "#include <utest-a.h>" > $@
-	echo "print 121;" >> $@
-	echo "#include <utest-a.h>" >> $@
-
-clean:
-	-rm -f cint $(OBJS) $(DEPS) $(CORE_DIR)cint_wrappers.h $(CORE_DIR)cint_c.*.[ch] $(CORE_DIR)cint_c.output utest-*.h
-
-ifneq ($(MAKECMDGOALS),clean)
-    include $(DEPS)
-endif
-
-# calculate C include dependencies
-%.d: %.c
-	@$(SHELL) -ec "$(CC) -M -MG $(CFLAGS) $< > $@; [ -s $@ ] || rm -f $@"
+SUBDIRS := cmd core
+include $(SDK)/make/subdir.mk
 
-endif
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/cli/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/cli/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/cli/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/cli/cmd/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/cli/Makefile sdk-6.5.21.new/libs/sdklt/bcma/cli/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/cli/Makefile	2024-06-03 13:49:22.393025415 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/cli/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/editline/bcma_editline.c sdk-6.5.21.new/libs/sdklt/bcma/editline/bcma_editline.c
--- sdk-6.5.21.origin/libs/sdklt/bcma/editline/bcma_editline.c	2024-06-03 13:49:22.393025415 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/editline/bcma_editline.c	2024-06-03 13:48:02.134703974 +0200
@@ -13,6 +13,8 @@
 
 #include <bcma/editline/bcma_readline.h>
 
+void *bcma_readline_context;
+
 #if BCMA_NO_EDITLINE == 1
 
 int bcma_editline_not_empty;
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/editline/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/editline/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/editline/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/editline/cmd/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/editline/Makefile sdk-6.5.21.new/libs/sdklt/bcma/editline/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/editline/Makefile	2024-06-03 13:49:22.393025415 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/editline/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/env/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/env/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/env/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/env/cmd/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/env/Makefile sdk-6.5.21.new/libs/sdklt/bcma/env/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/env/Makefile	2024-06-03 13:49:22.393025415 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/env/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/flash/main/Makefile sdk-6.5.21.new/libs/sdklt/bcma/flash/main/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/flash/main/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/flash/main/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/flash/Makefile sdk-6.5.21.new/libs/sdklt/bcma/flash/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/flash/Makefile	2024-06-03 13:49:22.393025415 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/flash/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := main
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/fwm/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/fwm/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/fwm/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/fwm/cmd/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/fwm/Makefile sdk-6.5.21.new/libs/sdklt/bcma/fwm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/fwm/Makefile	2024-06-03 13:49:22.393025415 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/fwm/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := cmd
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/i2c/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/i2c/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/i2c/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/i2c/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/i2c/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/i2c/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/i2c/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/i2c/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/i2c/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/i2c/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/i2c/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/i2c/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.138704090 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/i2c/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/i2c/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/i2c/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/i2c/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.138704090 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/i2c/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcma/i2c/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/i2c/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/i2c/chip/Makefile	2024-06-03 13:48:02.138704090 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/i2c/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/i2c/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/i2c/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/i2c/cmd/Makefile	2024-06-03 13:48:02.138704090 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/i2c/devices/Makefile sdk-6.5.21.new/libs/sdklt/bcma/i2c/devices/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/i2c/devices/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/i2c/devices/Makefile	2024-06-03 13:48:02.138704090 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/i2c/Makefile sdk-6.5.21.new/libs/sdklt/bcma/i2c/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/i2c/Makefile	2024-06-03 13:49:22.393025415 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/i2c/Makefile	2024-06-03 13:48:02.134703974 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := chip/bcm56780_a0 chip/bcm56880_a0 chip/bcm56990_a0 chip/bcm56990_b0 cmd devices
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/include/bcma/editline/bcma_readline.h sdk-6.5.21.new/libs/sdklt/bcma/include/bcma/editline/bcma_readline.h
--- sdk-6.5.21.origin/libs/sdklt/bcma/include/bcma/editline/bcma_readline.h	2024-06-03 13:49:22.397025531 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/include/bcma/editline/bcma_readline.h	2024-06-03 13:48:02.138704090 +0200
@@ -127,7 +127,7 @@
  * CLI instance in order to supply the correct CLI context for readline
  * completion support.
  */
-void *bcma_readline_context;
+extern void *bcma_readline_context;
 
 static inline void
 bcma_readline_context_set(void *context)
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/include/bcma/test/util/bcma_testutil_packet.h sdk-6.5.21.new/libs/sdklt/bcma/include/bcma/test/util/bcma_testutil_packet.h
--- sdk-6.5.21.origin/libs/sdklt/bcma/include/bcma/test/util/bcma_testutil_packet.h	2024-06-03 13:49:22.397025531 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/include/bcma/test/util/bcma_testutil_packet.h	2024-06-03 13:48:02.142704205 +0200
@@ -110,7 +110,7 @@
 /*!
  * \brief crc table.
  */
-uint32_t bcma_testutil_packet_crc_table[BCMA_TESTUTIL_PACKET_NUM_ENTRIES_CRC_TABLE];
+static uint32_t bcma_testutil_packet_crc_table[BCMA_TESTUTIL_PACKET_NUM_ENTRIES_CRC_TABLE];
 
 /*!
  * \brief Init packet such as crc table.
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/mcs/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/mcs/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/mcs/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/mcs/cmd/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/mcs/Makefile sdk-6.5.21.new/libs/sdklt/bcma/mcs/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/mcs/Makefile	2024-06-03 13:49:22.401025647 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/mcs/Makefile	2024-06-03 13:48:02.142704205 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := cmd
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/mon/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/mon/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/mon/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/mon/cmd/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/mon/Makefile sdk-6.5.21.new/libs/sdklt/bcma/mon/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/mon/Makefile	2024-06-03 13:49:22.401025647 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/mon/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := cmd
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/pcie/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/pcie/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/pcie/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/pcie/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/pcie/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/pcie/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/pcie/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/pcie/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/pcie/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/pcie/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/pcie/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/pcie/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/pcie/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/pcie/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/pcie/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/pcie/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/pcie/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcma/pcie/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/pcie/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/pcie/chip/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/pcie/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/pcie/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/pcie/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/pcie/cmd/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/pcie/Makefile sdk-6.5.21.new/libs/sdklt/bcma/pcie/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/pcie/Makefile	2024-06-03 13:49:22.401025647 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/pcie/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := chip/bcm56780_a0 chip/bcm56880_a0 chip/bcm56990_a0 chip/bcm56990_b0 cmd
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/sys/conf/bcma_sys_conf_test.c sdk-6.5.21.new/libs/sdklt/bcma/sys/conf/bcma_sys_conf_test.c
--- sdk-6.5.21.origin/libs/sdklt/bcma/sys/conf/bcma_sys_conf_test.c	2024-06-03 13:49:22.401025647 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/sys/conf/bcma_sys_conf_test.c	2024-06-03 13:48:02.146704321 +0200
@@ -11,17 +11,17 @@
 #include <bcma/sys/bcma_sys_conf.h>
 #include <bcma/test/bcma_test.h>
 #include <bcma/test/bcma_testcmd.h>
-#include <bcma/test/testcase/bcma_testcase_cmicd.h>
-#include <bcma/test/testcase/bcma_testcase_cmicx.h>
-#include <bcma/test/testcase/bcma_testcase_pt.h>
-#include <bcma/test/testcase/bcma_testcase_lb.h>
-#include <bcma/test/testcase/bcma_testcase_counter.h>
-#include <bcma/test/testcase/bcma_testcase_pkt.h>
-#include <bcma/test/testcase/bcma_testcase_ser.h>
-#include <bcma/test/testcase/bcma_testcase_traffic.h>
-#include <bcma/test/testcase/bcma_testcase_benchmark.h>
+// #include <bcma/test/testcase/bcma_testcase_cmicd.h>
+// #include <bcma/test/testcase/bcma_testcase_cmicx.h>
+// #include <bcma/test/testcase/bcma_testcase_pt.h>
+// #include <bcma/test/testcase/bcma_testcase_lb.h>
+// #include <bcma/test/testcase/bcma_testcase_counter.h>
+// #include <bcma/test/testcase/bcma_testcase_pkt.h>
+// #include <bcma/test/testcase/bcma_testcase_ser.h>
+// #include <bcma/test/testcase/bcma_testcase_traffic.h>
+// #include <bcma/test/testcase/bcma_testcase_benchmark.h>
 
-static bcma_test_db_t testdb = {0};
+// static bcma_test_db_t testdb = {0};
 
 /*******************************************************************************
  * Public functions
@@ -30,25 +30,25 @@
 int
 bcma_sys_conf_test_init(bcma_sys_conf_t *sc)
 {
-    bcma_test_db_t *tdb = &testdb;
+    // bcma_test_db_t *tdb = &testdb;
 
     /* Check for valid sys_conf structure */
     if (sc == NULL) {
         return -1;
     }
 
-    bcma_test_init(tdb);
+    // bcma_test_init(tdb);
 
-    bcma_testcase_add_cmicd_cases(tdb);
-    bcma_testcase_add_cmicx_cases(tdb);
-    bcma_testcase_add_pt_cases(tdb);
-    bcma_testcase_add_lb_cases(tdb);
-    bcma_testcase_add_counter_cases(tdb);
-    bcma_testcase_add_pkt_cases(tdb);
-    bcma_testcase_add_ser_cases(tdb);
-    bcma_testcase_add_traffic_cases(tdb);
-    bcma_testcase_add_benchmark_cases(tdb);
-    bcma_testcmd_add_cmds(sc->dsh);
+    // bcma_testcase_add_cmicd_cases(tdb);
+    // bcma_testcase_add_cmicx_cases(tdb);
+    // bcma_testcase_add_pt_cases(tdb);
+    // bcma_testcase_add_lb_cases(tdb);
+    // bcma_testcase_add_counter_cases(tdb);
+    // bcma_testcase_add_pkt_cases(tdb);
+    // bcma_testcase_add_ser_cases(tdb);
+    // bcma_testcase_add_traffic_cases(tdb);
+    // bcma_testcase_add_benchmark_cases(tdb);
+    // bcma_testcmd_add_cmds(sc->dsh);
 
     return 0;
 }
@@ -56,17 +56,17 @@
 int
 bcma_sys_conf_test_cleanup(bcma_sys_conf_t *sc)
 {
-    bcma_test_db_t *tdb = &testdb;
+    // bcma_test_db_t *tdb = &testdb;
 
-    bcma_test_cleanup(tdb);
+    // bcma_test_cleanup(tdb);
 
     return 0;
 }
 
-int
-bcma_sys_conf_test_testcase_add(bcma_test_case_t *tc, int feature)
-{
-    bcma_test_db_t *tdb = &testdb;
+// int
+// bcma_sys_conf_test_testcase_add(bcma_test_case_t *tc, int feature)
+// {
+//     bcma_test_db_t *tdb = &testdb;
 
-    return bcma_testdb_testcase_add(tdb, tc, feature);
-}
+//     return bcma_testdb_testcase_add(tdb, tc, feature);
+// }
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/sys/conf_examples/bcma_sys_conf_sdk.c sdk-6.5.21.new/libs/sdklt/bcma/sys/conf_examples/bcma_sys_conf_sdk.c
--- sdk-6.5.21.origin/libs/sdklt/bcma/sys/conf_examples/bcma_sys_conf_sdk.c	2024-06-03 13:49:22.401025647 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/sys/conf_examples/bcma_sys_conf_sdk.c	2024-06-03 13:48:02.146704321 +0200
@@ -36,7 +36,7 @@
 #include <bcma/bcmpkt/bcma_bcmpktcmd.h>
 #include <bcma/board/bcma_board.h>
 #include <bcma/test/bcma_test.h>
-#include <bcma/test/testcase/bcma_testcase_traffic_flex.h>
+// #include <bcma/test/testcase/bcma_testcase_traffic_flex.h>
 #include <bcma/cint/bcma_cintcmd.h>
 
 #include <bcma/sys/bcma_sys_conf_sdk.h>
@@ -528,16 +528,16 @@
  * a special test group "flex_port" to avoid that developers execute
  * this test by accident.
  */
-static bcma_test_case_t testcase_traffic_flex = {
-    "flex_port",
-    514,
-    "Flex port traffic",
-    BCMA_TESTCASE_TRAFFIC_FLEX_DESC,
-    BCMA_TESTCASE_TRAFFIC_FLEX_FLAGS,
-    1,
-    NULL,
-    bcma_testcase_traffic_flex_op_get,
-};
+// static bcma_test_case_t testcase_traffic_flex = {
+//     "flex_port",
+//     514,
+//     "Flex port traffic",
+//     BCMA_TESTCASE_TRAFFIC_FLEX_DESC,
+//     BCMA_TESTCASE_TRAFFIC_FLEX_FLAGS,
+//     1,
+//     NULL,
+//     bcma_testcase_traffic_flex_op_get,
+// };
 
 static int
 init_test(bcma_sys_conf_t *sc)
@@ -546,7 +546,7 @@
     if (bcma_sys_conf_test_init(sc) < 0) {
         return SHR_E_FAIL;
     }
-    bcma_sys_conf_test_testcase_add(&testcase_traffic_flex, 0);
+    // bcma_sys_conf_test_testcase_add(&testcase_traffic_flex, 0);
 
     return SHR_E_NONE;
 }
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/targets.mk sdk-6.5.21.new/libs/sdklt/bcma/targets.mk
--- sdk-6.5.21.origin/libs/sdklt/bcma/targets.mk	2024-06-03 13:49:22.401025647 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/targets.mk	2024-06-03 13:48:02.146704321 +0200
@@ -39,13 +39,13 @@
 	editline \
 	io
 
-ifndef BCMA_TARGETS
+# ifndef BCMA_TARGETS
 BCMA_TARGETS = $(BCMA_DEFAULT_TARGETS)
-endif
+# endif
 
-ifneq (,$(BCMA_EXCLUDE_TARGETS))
-BCMA_TARGETS := $(filter-out $(BCMA_EXCLUDE_TARGETS),$(BCMA_TARGETS))
-endif
+# ifneq (,$(BCMA_EXCLUDE_TARGETS))
+# BCMA_TARGETS := $(filter-out $(BCMA_EXCLUDE_TARGETS),$(BCMA_TARGETS))
+# endif
 
 BCMA_AVAILABLE_TARGETS := $(notdir $(wildcard $(SDK)/bcma/*))
 BCMA_TARGETS := $(filter $(BCMA_AVAILABLE_TARGETS),$(BCMA_TARGETS))
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.150704437 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.150704437 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/tecsup/chip/Makefile	2024-06-03 13:48:02.150704437 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/tecsup/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/tecsup/cmd/Makefile	2024-06-03 13:48:02.150704437 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/drv/Makefile sdk-6.5.21.new/libs/sdklt/bcma/tecsup/drv/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/drv/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/tecsup/drv/Makefile	2024-06-03 13:48:02.150704437 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/Makefile sdk-6.5.21.new/libs/sdklt/bcma/tecsup/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/tecsup/Makefile	2024-06-03 13:49:22.401025647 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/tecsup/Makefile	2024-06-03 13:48:02.146704321 +0200
@@ -5,3 +5,8 @@
 #
 
 include $(SDK)/make/sublib.mk
+
+SUBDIRS := chip/bcm56780_a0 chip/bcm56780_a0/dna_2_5_13 chip/bcm56880_a0 chip/bcm56880_a0/dna_4_7_11 chip/bcm56990_a0 chip/bcm56990_b0 cmd drv
+include $(SDK)/make/subdir.mk
+
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/test/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/test/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/test/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/test/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.150704437 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/test/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/test/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/test/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/test/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.150704437 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/test/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/test/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/test/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/test/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.150704437 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/test/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcma/test/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/test/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/test/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.154704552 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/test/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcma/test/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/test/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/test/chip/Makefile	2024-06-03 13:48:02.154704552 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/test/cmd/Makefile sdk-6.5.21.new/libs/sdklt/bcma/test/cmd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/test/cmd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/test/cmd/Makefile	2024-06-03 13:48:02.154704552 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/test/Makefile sdk-6.5.21.new/libs/sdklt/bcma/test/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/test/Makefile	2024-06-03 13:49:22.401025647 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcma/test/Makefile	2024-06-03 13:48:02.150704437 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := chip/bcm56780_a0 chip/bcm56880_a0 chip/bcm56990_a0 chip/bcm56990_b0 cmd testcase util
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/test/testcase/Makefile sdk-6.5.21.new/libs/sdklt/bcma/test/testcase/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/test/testcase/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/test/testcase/Makefile	2024-06-03 13:48:02.154704552 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcma/test/util/Makefile sdk-6.5.21.new/libs/sdklt/bcma/test/util/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcma/test/util/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcma/test/util/Makefile	2024-06-03 13:48:02.154704552 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.158704668 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.158704668 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.158704668 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.158704668 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.158704668 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmbd/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.158704668 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmbd/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmbd/chip/Makefile	2024-06-03 13:49:22.409025879 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmbd/chip/Makefile	2024-06-03 13:48:02.158704668 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmbd/hmi/cmicd/Makefile sdk-6.5.21.new/libs/sdklt/bcmbd/hmi/cmicd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmbd/hmi/cmicd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmbd/hmi/cmicd/Makefile	2024-06-03 13:48:02.158704668 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmbd/hmi/cmicx/Makefile sdk-6.5.21.new/libs/sdklt/bcmbd/hmi/cmicx/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmbd/hmi/cmicx/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmbd/hmi/cmicx/Makefile	2024-06-03 13:48:02.162704784 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmbd/hmi/Makefile sdk-6.5.21.new/libs/sdklt/bcmbd/hmi/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmbd/hmi/Makefile	2024-06-03 13:49:22.409025879 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmbd/hmi/Makefile	2024-06-03 13:48:02.158704668 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := cmicd cmicx
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcfg/yaml/Makefile sdk-6.5.21.new/libs/sdklt/bcmcfg/yaml/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcfg/yaml/Makefile	2024-06-03 13:49:22.433026573 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcfg/yaml/Makefile	2024-06-03 13:48:02.182705362 +0200
@@ -6,11 +6,7 @@
 
 include $(SDK)/make/libname.mk
 
-ifdef YAML
 SUBDIRS := libyaml
-else
-SUBDIRS := null
-endif
 
 include $(SDK)/make/subdir.mk
 
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcnet/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmcnet/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcnet/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcnet/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.186705478 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcnet/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmcnet/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcnet/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcnet/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.186705478 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcnet/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmcnet/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcnet/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcnet/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.186705478 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcnet/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmcnet/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcnet/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcnet/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.186705478 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcnet/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmcnet/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcnet/chip/Makefile	2024-06-03 13:49:22.433026573 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcnet/chip/Makefile	2024-06-03 13:48:02.186705478 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcnet/hmi/cmicd/Makefile sdk-6.5.21.new/libs/sdklt/bcmcnet/hmi/cmicd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcnet/hmi/cmicd/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcnet/hmi/cmicd/Makefile	2024-06-03 13:48:02.186705478 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcnet/hmi/cmicx/Makefile sdk-6.5.21.new/libs/sdklt/bcmcnet/hmi/cmicx/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcnet/hmi/cmicx/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcnet/hmi/cmicx/Makefile	2024-06-03 13:48:02.186705478 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcnet/hmi/Makefile sdk-6.5.21.new/libs/sdklt/bcmcnet/hmi/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcnet/hmi/Makefile	2024-06-03 13:49:22.433026573 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcnet/hmi/Makefile	2024-06-03 13:48:02.186705478 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := cmicd cmicx
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.190705594 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.190705594 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.190705594 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.190705594 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.194705710 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.194705710 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/chip/Makefile	2024-06-03 13:49:22.437026688 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/chip/Makefile	2024-06-03 13:48:02.186705478 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/ctr/dbgsel/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/ctr/dbgsel/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/ctr/dbgsel/Makefile	2024-06-03 13:49:22.441026804 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/ctr/dbgsel/Makefile	2024-06-03 13:48:02.194705710 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/ctr/eflex/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/ctr/eflex/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/ctr/eflex/Makefile	2024-06-03 13:49:22.441026804 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/ctr/eflex/Makefile	2024-06-03 13:48:02.194705710 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/ctr/evict/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/ctr/evict/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/ctr/evict/Makefile	2024-06-03 13:49:22.441026804 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/ctr/evict/Makefile	2024-06-03 13:48:02.194705710 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/ctr/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/ctr/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/ctr/Makefile	2024-06-03 13:49:22.441026804 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/ctr/Makefile	2024-06-03 13:48:02.194705710 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := dbgsel eflex evict
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.198705825 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.198705825 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.198705825 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/include/bcmcth/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.198705825 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/include/bcmcth/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/include/bcmcth/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/include/bcmcth/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/include/bcmcth/chip/Makefile	2024-06-03 13:48:02.198705825 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/mon/collector/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/mon/collector/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/mon/collector/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/mon/collector/Makefile	2024-06-03 13:48:02.202705941 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/mon/flowtracker/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/mon/flowtracker/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/mon/flowtracker/Makefile	2024-06-03 13:49:22.449027035 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/mon/flowtracker/Makefile	2024-06-03 13:48:02.202705941 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/mon/int/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/mon/int/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/mon/int/Makefile	2024-06-03 13:49:22.449027035 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/mon/int/Makefile	2024-06-03 13:48:02.202705941 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/mon/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/mon/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/mon/Makefile	2024-06-03 13:49:22.449027035 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/mon/Makefile	2024-06-03 13:48:02.202705941 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := collector flowtracker int telemetry
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/mon/telemetry/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/mon/telemetry/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/mon/telemetry/Makefile	2024-06-03 13:49:22.449027035 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/mon/telemetry/Makefile	2024-06-03 13:48:02.202705941 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/oam/bfd/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/oam/bfd/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/oam/bfd/Makefile	2024-06-03 13:49:22.449027035 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/oam/bfd/Makefile	2024-06-03 13:48:02.202705941 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/oam/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/oam/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/oam/Makefile	2024-06-03 13:49:22.449027035 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/oam/Makefile	2024-06-03 13:48:02.202705941 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bfd
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/trunk/bcmcth_trunk_grp.c sdk-6.5.21.new/libs/sdklt/bcmcth/trunk/bcmcth_trunk_grp.c
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/trunk/bcmcth_trunk_grp.c	2024-06-03 13:49:22.449027035 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/trunk/bcmcth_trunk_grp.c	2024-06-03 13:48:02.206706056 +0200
@@ -33,7 +33,7 @@
 static bcmcth_trunk_grp_bk_t * lth_grp_bk_temp[BCMDRD_CONFIG_MAX_UNITS];
 
 /*! TRUNK group SW bitmap changed in one commit. */
-SHR_BITDCL *bcmcth_trunk_grp_bitmap_diff[BCMDRD_CONFIG_MAX_UNITS];
+static SHR_BITDCL *bcmcth_trunk_grp_bitmap_diff[BCMDRD_CONFIG_MAX_UNITS];
 
 /*! Pointer to trunk group state. */
 #define GRP_HA(unit)                 lth_grp_bk[unit]
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/trunk/bcmcth_trunk_imm_grp.c sdk-6.5.21.new/libs/sdklt/bcmcth/trunk/bcmcth_trunk_imm_grp.c
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/trunk/bcmcth_trunk_imm_grp.c	2024-06-03 13:49:22.449027035 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/trunk/bcmcth_trunk_imm_grp.c	2024-06-03 13:48:02.206706056 +0200
@@ -35,7 +35,7 @@
 static bcmcth_trunk_imm_grp_bk_t *grp_bk_temp[BCMDRD_CONFIG_MAX_UNITS];
 
 /*! TRUNK group SW bitmap changed in one commit. */
-SHR_BITDCL *bcmcth_trunk_grp_bitmap_diff[BCMDRD_CONFIG_MAX_UNITS];
+static SHR_BITDCL *bcmcth_trunk_imm_grp_bitmap_diff[BCMDRD_CONFIG_MAX_UNITS];
 
 /*! Pointer to trunk group state. */
 #define GRP_HA(unit)                 grp_bk[unit]
@@ -44,7 +44,7 @@
 #define GRP_TEMP(unit)               grp_bk_temp[unit]
 
 /*! Pointer to trunk group temporary state. */
-#define GRP_DIFF(unit)               bcmcth_trunk_grp_bitmap_diff[unit]
+#define GRP_DIFF(unit)               bcmcth_trunk_imm_grp_bitmap_diff[unit]
 
 #define BCMCTH_TRUNK_GRP_MAX_MEMBERS(_u_) \
         (GRP_TEMP(_u_)->max_member_cnt)
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/ts/bs/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/ts/bs/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/ts/bs/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/ts/bs/Makefile	2024-06-03 13:48:02.206706056 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/ts/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/ts/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/ts/Makefile	2024-06-03 13:49:22.449027035 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/ts/Makefile	2024-06-03 13:48:02.206706056 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bs synce tod
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/ts/synce/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/ts/synce/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/ts/synce/Makefile	2024-06-03 13:49:22.453027151 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/ts/synce/Makefile	2024-06-03 13:48:02.206706056 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmcth/ts/tod/Makefile sdk-6.5.21.new/libs/sdklt/bcmcth/ts/tod/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmcth/ts/tod/Makefile	2024-06-03 13:49:22.453027151 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmcth/ts/tod/Makefile	2024-06-03 13:48:02.206706056 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.206706056 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.206706056 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.206706056 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.206706056 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.206706056 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.206706056 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/chip/Makefile	2024-06-03 13:49:22.453027151 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/chip/Makefile	2024-06-03 13:48:02.206706056 +0200
@@ -5,3 +5,6 @@
 #
 
 include $(SDK)/make/sublib.mk
+SUBDIRS := bcm56990_a0 bcm56990_b0 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56780_a0 bcm56780_a0/dna_2_5_13
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.214706288 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.214706288 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.222706520 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/include/bcmdi/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.222706520 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdi/include/bcmdi/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmdi/include/bcmdi/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdi/include/bcmdi/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdi/include/bcmdi/chip/Makefile	2024-06-03 13:48:02.222706520 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdrd/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmdrd/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdrd/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdrd/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.226706636 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdrd/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmdrd/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdrd/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdrd/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.230706751 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdrd/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmdrd/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdrd/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdrd/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.230706751 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdrd/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmdrd/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdrd/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmdrd/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.230706751 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmdrd/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmdrd/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmdrd/chip/Makefile	2024-06-03 13:49:22.469027614 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmdrd/chip/Makefile	2024-06-03 13:48:02.222706520 +0200
@@ -5,3 +5,6 @@
 #
 
 include $(SDK)/make/sublib.mk
+SUBDIRS := bcm56990_a0 bcm56990_b0 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56780_a0 bcm56780_a0/dna_2_5_13
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.294708602 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.298708718 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.298708718 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.298708718 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.298708718 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.298708718 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/chip/Makefile	2024-06-03 13:49:22.537029580 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/chip/Makefile	2024-06-03 13:48:02.294708602 +0200
@@ -7,3 +7,6 @@
 #
 
 include $(SDK)/make/sublib.mk
+SUBDIRS := bcm56990_a0 bcm56990_b0 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56780_a0 bcm56780_a0/dna_2_5_13
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.298708718 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.298708718 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.298708718 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/include/bcmecmp/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.298708718 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmecmp/include/bcmecmp/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmecmp/include/bcmecmp/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmecmp/include/bcmecmp/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmecmp/include/bcmecmp/chip/Makefile	2024-06-03 13:48:02.298708718 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.302708834 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.302708834 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.306708950 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.306708950 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.306708950 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmfp/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.310709065 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmfp/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmfp/chip/Makefile	2024-06-03 13:49:22.537029580 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmfp/chip/Makefile	2024-06-03 13:48:02.302708834 +0200
@@ -5,3 +5,6 @@
 #
 
 include $(SDK)/make/sublib.mk
+SUBDIRS := bcm56990_a0 bcm56990_b0 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56780_a0 bcm56780_a0/dna_2_5_13
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmha/scripts/ltid_gen.py sdk-6.5.21.new/libs/sdklt/bcmha/scripts/ltid_gen.py
--- sdk-6.5.21.origin/libs/sdklt/bcmha/scripts/ltid_gen.py	2024-06-03 13:49:22.553030044 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmha/scripts/ltid_gen.py	2024-06-03 13:48:02.318709296 +0200
@@ -7,6 +7,7 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
+
 import sys
 import subprocess
 import os
@@ -393,7 +394,7 @@
                 out_yml_file = output_dir + ENUM_PREFIX + dev + \
                            DEV_VARIANT_DELIM + variant + '_v_' + ver + '.yml'
                 try:
-                    ofh = open(out_yml_file, 'w')
+                    ofh = open(out_yml_file, 'wb')
                 except:
                     print('invalid destination file ', out_yml_file)
                     return -1
@@ -650,13 +651,13 @@
             print('Failed to create file ', out_f)
             return -1
         write_out_header(dev_fh)
-        print 'processing device ', dev
+        print('processing device ', dev)
 
         for var in os.listdir(dev_path):
             var_path = dev_path + '/' + var
             if os.path.isdir(var_path):
                 if filter_variant_db_out(var.lower()):
-                    print 'filter out variant ', var
+                    print('filter out variant ', var)
                     continue
                 for (dirpath, dirnames, filenames) in walk(var_path):
                     for f in filenames:
@@ -1162,4 +1163,3 @@
         print('Error: Unsupported python version, min version 2.7.x')
     else:
         main(sys.argv[1:])
-
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlm/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlm/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlm/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlm/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.370710800 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlm/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlm/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlm/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlm/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.374710916 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlm/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlm/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlm/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlm/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.374710916 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlm/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlm/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlm/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlm/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.374710916 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlm/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmlm/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlm/chip/Makefile	2024-06-03 13:49:22.553030044 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlm/chip/Makefile	2024-06-03 13:48:02.370710800 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlm/hmi/cmicx/Makefile sdk-6.5.21.new/libs/sdklt/bcmlm/hmi/cmicx/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlm/hmi/cmicx/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlm/hmi/cmicx/Makefile	2024-06-03 13:48:02.374710916 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlm/hmi/Makefile sdk-6.5.21.new/libs/sdklt/bcmlm/hmi/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlm/hmi/Makefile	2024-06-03 13:49:22.553030044 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlm/hmi/Makefile	2024-06-03 13:48:02.374710916 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := cmicx
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.402711726 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.402711726 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.426712420 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.426712420 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.442712883 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.458713346 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/chip/Makefile	2024-06-03 13:49:22.553030044 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/chip/Makefile	2024-06-03 13:48:02.374710916 +0200
@@ -4,4 +4,9 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bcm56990_a0 bcm56990_b0 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56780_a0 bcm56780_a0/dna_2_5_13
+
 include $(SDK)/make/sublib.mk
+SUBDIRS := bcm56990_a0 bcm56990_b0 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56780_a0 bcm56780_a0/dna_2_5_13
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/chip/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56780_a0/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56880_a0/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56990_a0/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/bcm56990_b0/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/include/bcmlrd/defs/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/include/bcmlrd/defs/Makefile	2024-06-03 13:48:02.462713462 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/probe/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/probe/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/probe/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/probe/bcm56780_a0/Makefile	2024-06-03 13:48:02.466713578 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/probe/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/probe/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/probe/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/probe/bcm56880_a0/Makefile	2024-06-03 13:48:02.466713578 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/probe/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/probe/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/probe/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/probe/bcm56990_a0/Makefile	2024-06-03 13:48:02.466713578 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/probe/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/probe/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/probe/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/probe/bcm56990_b0/Makefile	2024-06-03 13:48:02.466713578 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlrd/probe/Makefile sdk-6.5.21.new/libs/sdklt/bcmlrd/probe/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlrd/probe/Makefile	2024-06-03 13:49:22.649032820 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlrd/probe/Makefile	2024-06-03 13:48:02.466713578 +0200
@@ -5,3 +5,6 @@
 #
 
 include $(SDK)/make/sublib.mk
+SUBDIRS := bcm56990_a0 bcm56990_b0 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56780_a0 bcm56780_a0/dna_2_5_13
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.466713578 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56780_a0/Makefile	2024-06-03 13:48:02.466713578 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.470713693 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56880_a0/Makefile	2024-06-03 13:48:02.470713693 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56990_a0/Makefile	2024-06-03 13:48:02.470713693 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/bcm56990_b0/Makefile	2024-06-03 13:48:02.470713693 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcfg/Makefile	2024-06-03 13:49:22.653032936 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcfg/Makefile	2024-06-03 13:48:02.466713578 +0200
@@ -10,4 +10,6 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
+
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.470713693 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56780_a0/Makefile	2024-06-03 13:48:02.470713693 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.470713693 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56880_a0/Makefile	2024-06-03 13:48:02.470713693 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56990_a0/Makefile	2024-06-03 13:48:02.470713693 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/bcm56990_b0/Makefile	2024-06-03 13:48:02.474713809 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmcth/Makefile	2024-06-03 13:49:22.653032936 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmcth/Makefile	2024-06-03 13:48:02.470713693 +0200
@@ -10,4 +10,6 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
+
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.474713809 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56780_a0/Makefile	2024-06-03 13:48:02.474713809 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.474713809 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56880_a0/Makefile	2024-06-03 13:48:02.474713809 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56990_a0/Makefile	2024-06-03 13:48:02.474713809 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/bcm56990_b0/Makefile	2024-06-03 13:48:02.474713809 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmfp/Makefile	2024-06-03 13:49:22.657033052 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmfp/Makefile	2024-06-03 13:48:02.474713809 +0200
@@ -10,4 +10,6 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
+
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.482714040 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56780_a0/Makefile	2024-06-03 13:48:02.482714040 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.490714272 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56880_a0/Makefile	2024-06-03 13:48:02.490714272 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56990_a0/Makefile	2024-06-03 13:48:02.494714387 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/bcm56990_b0/Makefile	2024-06-03 13:48:02.494714387 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmimm/Makefile	2024-06-03 13:49:22.657033052 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmimm/Makefile	2024-06-03 13:48:02.474713809 +0200
@@ -10,4 +10,6 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
+
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0 
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmlm/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmlm/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmlm/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmlm/bcm56780_a0/Makefile	2024-06-03 13:48:02.494714387 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmlm/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmlm/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmlm/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmlm/bcm56880_a0/Makefile	2024-06-03 13:48:02.494714387 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmlm/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmlm/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmlm/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmlm/bcm56990_a0/Makefile	2024-06-03 13:48:02.494714387 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmlm/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmlm/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmlm/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmlm/bcm56990_b0/Makefile	2024-06-03 13:48:02.494714387 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmlm/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmlm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmlm/Makefile	2024-06-03 13:49:22.677033630 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmlm/Makefile	2024-06-03 13:48:02.494714387 +0200
@@ -10,4 +10,6 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
+
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.506714734 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56780_a0/Makefile	2024-06-03 13:48:02.506714734 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.514714966 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56880_a0/Makefile	2024-06-03 13:48:02.514714966 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56990_a0/Makefile	2024-06-03 13:48:02.518715082 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/bcm56990_b0/Makefile	2024-06-03 13:48:02.522715197 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmltx/Makefile	2024-06-03 13:49:22.677033630 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmltx/Makefile	2024-06-03 13:48:02.498714503 +0200
@@ -10,4 +10,6 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
+
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmpc/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmpc/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmpc/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmpc/bcm56780_a0/Makefile	2024-06-03 13:48:02.522715197 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmpc/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmpc/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmpc/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmpc/bcm56880_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmpc/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmpc/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmpc/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmpc/bcm56990_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmpc/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmpc/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmpc/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmpc/bcm56990_b0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmpc/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmpc/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmpc/Makefile	2024-06-03 13:49:22.701034324 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmpc/Makefile	2024-06-03 13:48:02.522715197 +0200
@@ -10,4 +10,6 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
+
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmsec/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmsec/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmsec/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmsec/bcm56780_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmsec/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmsec/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmsec/Makefile	2024-06-03 13:49:22.701034324 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmsec/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -10,4 +10,6 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
+
+SUBDIRS := bcm56780_a0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmtm/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmtm/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmtm/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmtm/bcm56780_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmtm/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmtm/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmtm/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmtm/bcm56880_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmtm/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmtm/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmtm/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmtm/bcm56990_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmtm/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmtm/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmtm/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmtm/bcm56990_b0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmtm/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/bcmtm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/bcmtm/Makefile	2024-06-03 13:49:22.705034440 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/bcmtm/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -10,4 +10,6 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
+
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56780_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56880_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56990_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/bcm56990_b0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/include/bcmlta/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/include/bcmlta/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56780_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56880_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56990_a0/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/bcm56990_b0/Makefile	2024-06-03 13:48:02.530715429 +0200
@@ -0,0 +1,13 @@
+#
+# DO NOT EDIT THIS FILE!
+# This file is auto-generated by fltg from Logical Table mapping files.
+#
+# Tool: $SDK/INTERNAL/fltg/bin/fltg
+#
+# Edits to this file will be lost when it is regenerated.
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/Makefile sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmlta/ltm_intf/Makefile	2024-06-03 13:49:22.705034440 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmlta/ltm_intf/Makefile	2024-06-03 13:48:02.526715313 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.530715429 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.530715429 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.534715544 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.534715544 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/chip/Makefile	2024-06-03 13:49:22.705034440 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/chip/Makefile	2024-06-03 13:48:02.530715429 +0200
@@ -5,3 +5,6 @@
 #
 
 include $(SDK)/make/sublib.mk
+SUBDIRS := bcm56990_a0 bcm56990_b0 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56780_a0 bcm56780_a0/dna_2_5_13
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/frag/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/frag/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/frag/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/frag/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/frag/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/frag/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/frag/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/frag/bcm56780_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/frag/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/frag/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/frag/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/frag/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/frag/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/frag/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/frag/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/frag/bcm56880_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/frag/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/frag/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/frag/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/frag/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56780_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56880_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56990_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/bcm56990_b0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/conf/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/conf/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56780_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56880_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56990_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/bcm56990_b0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/defs/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/defs/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56780_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56880_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56990_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/bcm56990_b0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/entry/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/entry/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56780_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/frag/bcm56880_a0/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/frag/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/frag/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/frag/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/frag/Makefile	2024-06-03 13:48:02.538715660 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/id/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/id/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/id/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/id/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.542715776 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/id/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/id/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/id/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/id/bcm56780_a0/Makefile	2024-06-03 13:48:02.542715776 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/id/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/id/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/id/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/id/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.542715776 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/id/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/id/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/id/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/id/bcm56880_a0/Makefile	2024-06-03 13:48:02.542715776 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/id/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/id/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/id/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/id/Makefile	2024-06-03 13:48:02.546715891 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.546715891 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56780_a0/Makefile	2024-06-03 13:48:02.546715891 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.550716007 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56880_a0/Makefile	2024-06-03 13:48:02.550716007 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56990_a0/Makefile	2024-06-03 13:48:02.550716007 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/bcm56990_b0/Makefile	2024-06-03 13:48:02.550716007 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/Makefile sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmltd/include/bcmltd/str/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmltd/include/bcmltd/str/Makefile	2024-06-03 13:48:02.554716123 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.566716470 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.566716470 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.566716470 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.566716470 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.566716470 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpc/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.566716470 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmpc/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpc/chip/Makefile	2024-06-03 13:49:22.745035597 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmpc/chip/Makefile	2024-06-03 13:48:02.566716470 +0200
@@ -5,3 +5,6 @@
 #
 
 include $(SDK)/make/sublib.mk
+SUBDIRS := bcm56990_a0 bcm56990_b0 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56780_a0 bcm56780_a0/dna_2_5_13
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.570716586 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.570716586 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.574716701 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.574716701 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.574716701 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.574716701 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/chip/Makefile	2024-06-03 13:49:22.749035713 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/chip/Makefile	2024-06-03 13:48:02.570716586 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.574716701 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.574716701 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.574716701 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/include/bcmpkt/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.574716701 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/include/bcmpkt/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/include/bcmpkt/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/include/bcmpkt/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/include/bcmpkt/chip/Makefile	2024-06-03 13:48:02.574716701 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/sym/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/sym/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/sym/Makefile	2024-06-03 13:49:22.753035829 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/sym/Makefile	2024-06-03 13:48:02.574716701 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := proto
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpkt/sym/proto/Makefile sdk-6.5.21.new/libs/sdklt/bcmpkt/sym/proto/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpkt/sym/proto/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpkt/sym/proto/Makefile	2024-06-03 13:48:02.574716701 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpmac/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpmac/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpmac/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpmac/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.578716817 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpmac/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpmac/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpmac/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpmac/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.578716817 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpmac/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpmac/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpmac/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpmac/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.578716817 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpmac/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmpmac/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpmac/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmpmac/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.578716817 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmpmac/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmpmac/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmpmac/chip/Makefile	2024-06-03 13:49:22.753035829 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmpmac/chip/Makefile	2024-06-03 13:48:02.578716817 +0200
@@ -5,3 +5,6 @@
 #
 
 include $(SDK)/make/sublib.mk
+SUBDIRS := bcm56990_a0 bcm56990_b0 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56780_a0 bcm56780_a0/dna_2_5_13
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.582716933 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.582716933 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.586717049 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.586717049 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.586717049 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.586717049 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/chip/Makefile	2024-06-03 13:49:22.757035944 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/chip/Makefile	2024-06-03 13:48:02.578716817 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/cth/alpm/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/cth/alpm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/cth/alpm/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/cth/alpm/Makefile	2024-06-03 13:48:02.590717164 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/cth/ctr/flex/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/cth/ctr/flex/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/cth/ctr/flex/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/cth/ctr/flex/Makefile	2024-06-03 13:48:02.590717164 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/cth/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/cth/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/cth/Makefile	2024-06-03 13:49:22.765036175 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/cth/Makefile	2024-06-03 13:48:02.586717049 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := alpm ctr/flex ser uft
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/cth/ser/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/cth/ser/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/cth/ser/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/cth/ser/Makefile	2024-06-03 13:48:02.590717164 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/cth/uft/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/cth/uft/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/cth/uft/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/cth/uft/Makefile	2024-06-03 13:48:02.590717164 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/cth_be/alpm/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/cth_be/alpm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/cth_be/alpm/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/cth_be/alpm/Makefile	2024-06-03 13:48:02.590717164 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/cth_be/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/cth_be/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/cth_be/Makefile	2024-06-03 13:49:22.765036175 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/cth_be/Makefile	2024-06-03 13:48:02.590717164 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := alpm uft
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/cth_be/uft/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/cth_be/uft/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/cth_be/uft/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/cth_be/uft/Makefile	2024-06-03 13:48:02.590717164 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.594717280 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.594717280 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.594717280 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/include/bcmptm/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.594717280 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmptm/include/bcmptm/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmptm/include/bcmptm/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmptm/include/bcmptm/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmptm/include/bcmptm/chip/Makefile	2024-06-03 13:48:02.594717280 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur "sdk-6.5.21.origin/libs/sdklt/bcmsec/chip/bcm56780_a0/Makefile copy" "sdk-6.5.21.new/libs/sdklt/bcmsec/chip/bcm56780_a0/Makefile copy"
--- "sdk-6.5.21.origin/libs/sdklt/bcmsec/chip/bcm56780_a0/Makefile copy"	1970-01-01 01:00:00.000000000 +0100
+++ "sdk-6.5.21.new/libs/sdklt/bcmsec/chip/bcm56780_a0/Makefile copy"	2024-06-03 13:48:02.602717511 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmsec/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmsec/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmsec/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmsec/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.602717511 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmsec/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/bcmsec/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmsec/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmsec/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.602717511 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmsec/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/bcmsec/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmsec/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmsec/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.602717511 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmsec/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmsec/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmsec/chip/Makefile	2024-06-03 13:49:22.777036523 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmsec/chip/Makefile	2024-06-03 13:48:02.602717511 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmsec/imm/Makefile sdk-6.5.21.new/libs/sdklt/bcmsec/imm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmsec/imm/Makefile	2024-06-03 13:49:22.777036523 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmsec/imm/Makefile	2024-06-03 13:48:02.602717511 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := sa
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmsec/imm/sa/Makefile sdk-6.5.21.new/libs/sdklt/bcmsec/imm/sa/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmsec/imm/sa/Makefile	2024-06-03 13:49:22.777036523 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmsec/imm/sa/Makefile	2024-06-03 13:48:02.602717511 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/chip/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/chip/Makefile	2024-06-03 13:49:22.777036523 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/chip/Makefile	2024-06-03 13:48:02.602717511 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := bcm56780_a0 bcm56780_a0/dna_2_5_13 bcm56880_a0 bcm56880_a0/dna_4_7_11 bcm56990_a0 bcm56990_b0 
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/device/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/lth/device/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/device/Makefile	2024-06-03 13:49:22.785036755 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/lth/device/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/lth_pmap/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/lth/lth_pmap/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/lth_pmap/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/lth/lth_pmap/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/lth/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/Makefile	2024-06-03 13:49:22.785036755 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/lth/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := device lth_pmap obm oobfc sched_shaper
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/obm/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/lth/obm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/obm/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/lth/obm/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/oobfc/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/lth/oobfc/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/oobfc/Makefile	2024-06-03 13:49:22.789036870 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/lth/oobfc/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/sched_shaper/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/lth/sched_shaper/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/lth/sched_shaper/Makefile	2024-06-03 13:49:22.789036870 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/lth/sched_shaper/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/common/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/common/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/common/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/common/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/bst/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/bst/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/bst/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/bst/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/ct/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/ct/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/ct/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/ct/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/device/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/device/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/device/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/device/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -0,0 +1,7 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/ebst/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/ebst/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/ebst/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/ebst/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/Makefile	2024-06-03 13:49:22.789036870 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -3,5 +3,4 @@
 # 
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
-
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/mod/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/mod/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/mod/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/mod/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/multicast/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/multicast/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/multicast/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/multicast/Makefile	2024-06-03 13:48:02.614717859 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/obm/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/obm/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/obm/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/obm/Makefile	2024-06-03 13:48:02.614717859 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/oobfc/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/oobfc/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/oobfc/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/oobfc/Makefile	2024-06-03 13:48:02.614717859 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/pfc/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/pfc/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/pfc/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/pfc/Makefile	2024-06-03 13:48:02.614717859 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/scheduler_shaper/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/scheduler_shaper/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/scheduler_shaper/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/scheduler_shaper/Makefile	2024-06-03 13:48:02.614717859 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/wred/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/wred/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/imm/wred/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/imm/wred/Makefile	2024-06-03 13:48:02.614717859 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/Makefile sdk-6.5.21.new/libs/sdklt/bcmtm/shared/Makefile
--- sdk-6.5.21.origin/libs/sdklt/bcmtm/shared/Makefile	2024-06-03 13:49:22.789036870 +0200
+++ sdk-6.5.21.new/libs/sdklt/bcmtm/shared/Makefile	2024-06-03 13:48:02.610717743 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := common imm imm/bst imm/ct imm/device imm/ebst imm/mod imm/multicast imm/obm imm/oobfc imm/pfc imm/scheduler_shaper imm/wred
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/chip/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/devdb/chip/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/chip/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/chip/bcm56780_a0/Makefile	2024-06-03 13:48:02.626718205 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/chip/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/devdb/chip/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/chip/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/chip/bcm56880_a0/Makefile	2024-06-03 13:48:02.630718321 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/chip/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/devdb/chip/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/chip/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/chip/bcm56990_a0/Makefile	2024-06-03 13:48:02.638718553 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/chip/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/devdb/chip/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/chip/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/chip/bcm56990_b0/Makefile	2024-06-03 13:48:02.642718668 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/chip/Makefile sdk-6.5.21.new/libs/sdklt/devdb/chip/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/chip/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/chip/Makefile	2024-06-03 13:48:02.642718668 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56780_a0/dna_2_5_13/Makefile sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56780_a0/dna_2_5_13/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56780_a0/dna_2_5_13/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56780_a0/dna_2_5_13/Makefile	2024-06-03 13:48:02.650718900 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56780_a0/Makefile sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56780_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56780_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56780_a0/Makefile	2024-06-03 13:48:02.650718900 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56880_a0/dna_4_7_11/Makefile sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56880_a0/dna_4_7_11/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56880_a0/dna_4_7_11/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56880_a0/dna_4_7_11/Makefile	2024-06-03 13:48:02.662719247 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56880_a0/Makefile sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56880_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56880_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56880_a0/Makefile	2024-06-03 13:48:02.662719247 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56990_a0/Makefile sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56990_a0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56990_a0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56990_a0/Makefile	2024-06-03 13:48:02.666719363 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56990_b0/Makefile sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56990_b0/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/lt/bcm56990_b0/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/lt/bcm56990_b0/Makefile	2024-06-03 13:48:02.666719363 +0200
@@ -0,0 +1 @@
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/devdb/lt/Makefile sdk-6.5.21.new/libs/sdklt/devdb/lt/Makefile
--- sdk-6.5.21.origin/libs/sdklt/devdb/lt/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/devdb/lt/Makefile	2024-06-03 13:48:02.666719363 +0200
@@ -0,0 +1,2 @@
+include $(SDK)/make/subdir.mk
+include $(SDK)/make/lib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/linux/bcmlu/bcmpkt/knet/Makefile sdk-6.5.21.new/libs/sdklt/linux/bcmlu/bcmpkt/knet/Makefile
--- sdk-6.5.21.origin/libs/sdklt/linux/bcmlu/bcmpkt/knet/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/linux/bcmlu/bcmpkt/knet/Makefile	2024-06-03 13:48:02.674719594 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/linux/bcmlu/bcmpkt/Makefile sdk-6.5.21.new/libs/sdklt/linux/bcmlu/bcmpkt/Makefile
--- sdk-6.5.21.origin/libs/sdklt/linux/bcmlu/bcmpkt/Makefile	2024-06-03 13:49:22.813037564 +0200
+++ sdk-6.5.21.new/libs/sdklt/linux/bcmlu/bcmpkt/Makefile	2024-06-03 13:48:02.674719594 +0200
@@ -4,4 +4,5 @@
 # Copyright 2007-2020 Broadcom Inc. All rights reserved.
 #
 
+SUBDIRS := knet socket
 include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/libs/sdklt/linux/bcmlu/bcmpkt/socket/Makefile sdk-6.5.21.new/libs/sdklt/linux/bcmlu/bcmpkt/socket/Makefile
--- sdk-6.5.21.origin/libs/sdklt/linux/bcmlu/bcmpkt/socket/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/libs/sdklt/linux/bcmlu/bcmpkt/socket/Makefile	2024-06-03 13:48:02.674719594 +0200
@@ -0,0 +1,6 @@
+#
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+include $(SDK)/make/sublib.mk
diff -Naur sdk-6.5.21.origin/src/sal/appl/editline/editline.h sdk-6.5.21.new/src/sal/appl/editline/editline.h
--- sdk-6.5.21.origin/src/sal/appl/editline/editline.h	2024-06-03 13:49:23.269050754 +0200
+++ sdk-6.5.21.new/src/sal/appl/editline/editline.h	2024-06-03 13:48:03.974757198 +0200
@@ -5,6 +5,10 @@
 
 #ifdef INCLUDE_EDITLINE
 
+#if	!defined(HAVE_STDLIB)
+#define HAVE_STDLIB 1
+#endif // !defined(HAVE_STDLIB)
+
 #include <sal/core/libc.h>
 #include <sal/core/alloc.h>
 #include <sal/appl/io.h>
diff -Naur sdk-6.5.21.origin/src/sal/appl/linux/console.c sdk-6.5.21.new/src/sal/appl/linux/console.c
--- sdk-6.5.21.origin/src/sal/appl/linux/console.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/appl/linux/console.c	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,169 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * File: 	console.c
+ * Purpose:	User TTY I/O
+ */
+
+#include <sys/types.h>
+#include <stdio.h>
+#include <stdarg.h>
+#include <unistd.h>
+
+#include <sal/core/sync.h>
+#include <sal/core/thread.h>
+#include <sal/appl/io.h>
+
+static sal_mutex_t console_mutex;
+
+/*
+ * sal_console_init
+ */
+
+int
+sal_console_init(void)
+{
+    console_mutex = sal_mutex_create("console mutex");
+
+    return 0;
+}
+
+/*
+ * Function:
+ *	sal_console_info
+ * Purpose:
+ *	Get console information
+ * Parameters:
+ *	info - console info
+ * Returns:
+ *      0 on success
+ *      -1 if stdin is not a tty
+ */
+
+int
+sal_console_info_get(sal_console_info_t *info)
+{
+#if	defined(TIOCGWINSZ)
+    struct winsize	W;
+#endif	/* defined(TIOCGWINSZ) */
+
+    if (!isatty(0)) {
+        return -1;
+    }
+    if (info == NULL) {
+        return 0;
+    }
+    memset(info, 0, sizeof(*info));
+#if	defined(TIOCGWINSZ)
+    if (ioctl(0, TIOCGWINSZ, &W) >= 0) {
+	info->cols = (int)W.ws_col;
+	info->rows = (int)W.ws_row;
+    }
+#endif	/* defined(TIOCGWINSZ) */
+    return 0;
+}
+
+/*
+ * Function:
+ *	sal_console_write
+ * Purpose:
+ *	Write characters to console
+ * Parameters:
+ *	buf - buffer to write
+ *	count - number of characters in buffer
+ */
+
+int
+sal_console_write(const void *buf, int count)
+{
+    return write(0, buf, count);
+}
+
+/*
+ * Function:
+ *	sal_console_read
+ * Purpose:
+ *	Read characters from console
+ * Parameters:
+ *	buf - buffer to fill
+ *	count - number of characters to read
+ */
+
+int
+sal_console_read(void *buf, int count)
+{
+    return read(0, buf, count);
+}
+
+/*
+ * Function:
+ *	sal_console_gets
+ * Purpose:
+ *	Read line from console
+ * Parameters:
+ *	buf - input buffer
+ *	size - size of input buffer
+ */
+
+char *
+sal_console_gets(char *buf, int size)
+{
+    char *p = fgets(buf, size, stdin);
+    if (p == NULL) {
+	clearerr(stdin);
+    }
+    return p;
+}
+
+#ifndef SDK_CONFIG_SAL_VPRINTF
+/*
+ * sal_vprintf
+ *
+ *   This is the base routine upon which all standard printing is built.
+ */
+
+int sal_vprintf(const char *fmt, va_list varg)
+{
+    int			retv;
+#ifndef	SAL_THREAD_NAME_PRINT_DISABLE
+    char		thread_name[SAL_THREAD_NAME_MAX_LEN];
+    sal_thread_t	thread;
+
+    thread = sal_thread_self();
+    thread_name[0] = 0;
+
+    if (thread != sal_thread_main_get()) {
+	sal_thread_name(thread, thread_name, sizeof (thread_name));
+    }
+#endif	/* !SAL_THREAD_NAME_PRINT_DISABLE */
+
+    sal_mutex_take(console_mutex, sal_mutex_FOREVER);
+
+#ifndef	SAL_THREAD_NAME_PRINT_DISABLE
+    if (thread_name[0] != 0) {
+	(void) printf("[%s]", thread_name);
+    }
+#endif	/* !SAL_THREAD_NAME_PRINT_DISABLE */
+
+    retv = vprintf(fmt, varg);
+
+    fflush(stdout);
+
+    sal_mutex_give(console_mutex);
+
+    return retv;
+}
+#endif /* !SDK_CONFIG_SAL_VPRINTF */
+
+int sal_printf(const char *fmt, ...)
+{
+    int retv;
+    va_list varg;
+    va_start(varg, fmt);
+    retv = sal_vprintf(fmt, varg);
+    va_end(varg);
+    return retv;
+}
diff -Naur sdk-6.5.21.origin/src/sal/appl/linux/fileio.c sdk-6.5.21.new/src/sal/appl/linux/fileio.c
--- sdk-6.5.21.origin/src/sal/appl/linux/fileio.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/appl/linux/fileio.c	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,301 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * File: 	fileio.c
+ * Purpose:	File I/O
+ */
+
+#include <sys/types.h>
+#include <sys/stat.h>		/* mkdir */
+#include <string.h>
+#include <libgen.h>
+#include <stdlib.h>
+#include <errno.h>
+#include <unistd.h>
+#include <dirent.h>
+#include <assert.h>
+
+#include <sal/appl/io.h>
+#include <sal/core/alloc.h>
+
+#if defined(__STRICT_ANSI__)
+#define NO_ENV_SUPPORT
+#endif
+
+int
+sal_homedir_set(char *dir)
+{
+#ifndef NO_ENV_SUPPORT
+    char *buf = NULL;
+    if (dir != NULL) {
+        if (dir[0] != '/') {
+            return -1;
+        }
+        
+        if ((buf = malloc(5 + strlen(dir) + 1)) == NULL) {
+            return -1;
+        }
+        /* coverity[secure_coding] */
+        sprintf(buf, "HOME=%s", dir);
+        if (putenv(buf)) {
+            free(buf);
+            return -1;
+        }
+        
+    }
+#endif    
+    return 0; 
+    
+}
+
+char *
+sal_homedir_get(char *buf, size_t size)
+{
+#ifndef NO_ENV_SUPPORT
+    char	*s;
+
+    if ((s = getenv("HOME")) != NULL) {
+	strncpy(buf, s, size);
+	buf[size - 2] = 0;
+    } else {
+        /* coverity[secure_coding] */
+	strcpy(buf, "/");
+    }
+
+    if (buf[strlen(buf) - 1] != '/') {
+        /* coverity[secure_coding] */
+	strcat(buf, "/");
+    }
+#endif
+    return buf;
+}
+
+/*
+ * Modify umask for folder creation
+ */
+int sal_umask(int mask)
+{
+    return umask(mask);
+}
+
+/*
+ * Get current working directory.
+ *
+ * NOTE: this version of cwd always includes the trailing slash so
+ * a filename should be directly appended.
+ */
+
+char *sal_getcwd(char *buf, size_t size)
+{
+    if (getcwd(buf, size - 1) == NULL)
+	return NULL;
+
+    if (buf[strlen(buf) - 1] != '/')
+        /* coverity[secure_coding] */
+	strcat(buf, "/");
+
+    return buf;
+}
+
+int sal_ls(char *f, char *flags)
+{
+    char cmd[256];
+    /* coverity[secure_coding] */ 
+    sprintf(cmd, "ls %s %s\n", flags ? flags : "", f);
+    return(system(cmd));
+}
+
+int sal_cd(char *f)
+{
+#ifdef NO_ENV_SUPPORT
+    return chdir("/");
+#endif
+    int rv;
+    char *s = NULL;
+    if (f == NULL) {
+        f = getenv("HOME");
+        if (f == NULL) {
+            f = "/";
+        } else {
+            s = strdup(f);
+            f = s;
+        }
+    }
+    /* coverity[tainted_string] */
+    rv = chdir(f);
+    if (s) {
+        free(s);
+    }
+    return rv;
+}
+
+FILE *
+sal_fopen(char *file, char *mode)
+/*
+ * Function: 	sal_fopen
+ * Purpose:	"fopen" a file.
+ * Parameters:	name - name of file to open
+ *		mode - file mode.
+ * Returns:	NULL or FILE * pointer.
+ */
+{
+    return fopen(file, mode);
+}
+
+int
+sal_fclose(FILE *fp)
+/*
+ * Function: 	sal_fclose
+ * Purpose:	Close a file opened with sal_fopen
+ * Parameters:	fp - FILE pointer.
+ * Returns:	non-zero on error
+ */
+{
+    return fclose(fp);
+}
+
+int
+sal_fread(void *buf, int size, int num, FILE *fp)
+/*
+ * Function: 	sal_fread
+ * Purpose:	read() a file.
+ * Parameters:	name - name of file to open
+ *		mode - file mode.
+ * Returns:	number of bytes read
+ */
+{
+    return fread(buf, size, num, fp);
+}
+
+int
+sal_feof(FILE *fp)
+/*
+ * Function: 	sal_feof
+ * Purpose:	Return TRUE if EOF of a file is reached.
+ * Parameters:	FILE * pointer.
+ * Returns:	TRUE or FALSE
+ */
+{
+    return feof(fp);
+}
+
+int
+sal_ferror(FILE *fp)
+/*
+ * Function: 	sal_ferror
+ * Purpose:	Return TRUE if an error condition for a file pointer is set.
+ * Parameters:	FILE * pointer.
+ * Returns:	TRUE or FALSE
+ */
+{
+    return ferror(fp);
+}
+
+int
+sal_fsize(FILE *fp)
+/*
+ * Function: 	sal_fsize
+ * Purpose:	Return the size of a file if possible
+ * Parameters:	FILE * pointer.
+ * Returns:	File size or -1 in case of failure
+ */
+{
+    int rv;
+    
+    if (0 != fseek(fp, 0, SEEK_END)) {
+        return -1;
+    } 
+    rv = (int)ftell(fp);
+    if (0 != fseek(fp, 0, SEEK_SET)) {
+        return -1;
+    }
+    return rv < 0 ? -1 : rv;
+}
+
+int
+sal_remove(char *f)
+{
+    return(unlink(f));
+}
+
+int
+sal_rename(char *f_old, char *f_new)
+{
+    return rename(f_old, f_new);
+}
+char *
+sal_dirname(char *path, char *dest)
+{
+    /**
+     * we use here extra variable cause dirname/basename 
+     * might change the input string,we use it staticly because 
+     * we need it to be persistent outside the subroutine 
+     */
+    char p[SAL_NAME_MAX];
+    sal_strncpy(p, path,sizeof(p)-1);
+    sal_strcpy(dest,dirname(p));
+    return dest;
+}
+
+char *
+sal_basename(char *path, char *dest)
+{
+    /**
+     * we use here extra variable cause dirname/basename 
+     * might change the input string,we use it staticly because 
+     * we need it to be persistent outside the subroutine 
+     */
+    char p[SAL_NAME_MAX];
+    sal_strncpy(p, path,sizeof(p)-1);
+    sal_strcpy(dest,basename(p));
+    return dest;
+} 
+
+int
+sal_mkdir(char *path)
+{
+    return mkdir(path, 0777);
+}
+
+int
+sal_rmdir(char *path)
+{
+    return rmdir(path);
+}
+
+SAL_DIR *
+sal_opendir(char *dirName)
+{
+    return (SAL_DIR *) opendir(dirName);
+}
+
+int
+sal_closedir(SAL_DIR *dirp)
+{
+    return closedir((DIR *) dirp);
+}
+
+struct sal_dirent *
+sal_readdir(SAL_DIR *dirp)
+{
+    static struct sal_dirent dir;
+    struct dirent *d;
+
+    if ((d = readdir((DIR *) dirp)) == NULL) {
+	return NULL;
+    }
+
+    strncpy(dir.d_name, d->d_name, sizeof (dir.d_name));
+    dir.d_name[sizeof (dir.d_name) - 1] = 0;
+
+    return &dir;
+}
+
+void
+sal_rewinddir(SAL_DIR *dirp)
+{
+    rewinddir((DIR *) dirp);
+}
diff -Naur sdk-6.5.21.origin/src/sal/appl/linux/Makefile sdk-6.5.21.new/src/sal/appl/linux/Makefile
--- sdk-6.5.21.origin/src/sal/appl/linux/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/appl/linux/Makefile	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,15 @@
+# $Id: Makefile,v 1.3 2004/03/03 09:33:47 brb Exp $
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+# Makefile for SOC SAL support (Unix)
+#
+LOCALDIR = src/sal/appl/unix
+
+include ${SDK}/make/Make.config
+
+lib = libsal_appl_plat
+include ${SDK}/make/Make.lib
+
+include ${SDK}/make/Make.depend
diff -Naur sdk-6.5.21.origin/src/sal/appl/linux/pci.c sdk-6.5.21.new/src/sal/appl/linux/pci.c
--- sdk-6.5.21.origin/src/sal/appl/linux/pci.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/appl/linux/pci.c	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,22 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * pci: PCI abstraction common to all platforms.
+ */
+#include <sal/appl/pci.h>
+
+/*
+ * This function will be used only if the application does not provide
+ * its own version (see e.g. systems/linux/user/common/socdiag.c).
+ *
+ * It is required by the PCI utility functions in pci_common.c, but
+ * for UNIX/Linux builds, these functions are only used by a
+ * deprecated CLI command and not by the core SDK.
+ */
+uint32 pci_config_getw(pci_dev_t *dev, uint32 addr)
+{
+    return 0;
+}
diff -Naur sdk-6.5.21.origin/src/sal/appl/linux/sal.c sdk-6.5.21.new/src/sal/appl/linux/sal.c
--- sdk-6.5.21.origin/src/sal/appl/linux/sal.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/appl/linux/sal.c	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,703 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * File: 	sal.c
+ * Purpose:	Defines sal routines for user-mode Unix targets.
+ */
+
+#include <sys/types.h>
+#include <sys/time.h>
+#include <string.h>
+#include <stdlib.h>
+#include <errno.h>
+#include <unistd.h>
+#include <signal.h>
+#include <pthread.h>
+#include <assert.h>
+
+#include <sal/core/time.h>
+#include <sal/core/thread.h>
+#include <sal/core/sync.h>
+#include <sal/core/boot.h>
+#include <sal/core/spl.h>
+#include <sal/core/alloc.h>
+
+#include <sal/appl/sal.h>
+#include <sal/appl/io.h>
+#include <sal/appl/config.h>
+#include <shared/error.h>
+
+#ifdef BROADCOM_DEBUG
+/* { */
+#ifdef INCLUDE_BCM_SAL_PROFILE
+/* { */
+#if AGGRESSIVE_ALLOC_DEBUG_TESTING
+/* { */
+#include <sal/core/alloc.h>
+/* } */
+#endif
+/* } */
+#endif
+/* } */
+#endif /* BROADCOM_DEBUG */
+
+#if defined (__STRICT_ANSI__)
+#define RANDOM  rand
+#define SRANDOM srand
+#else
+#define RANDOM  random
+#define SRANDOM srandom
+#endif
+
+#if (defined(__DUNE_GTO_BCM_CPU__) || defined(__DUNE_WRX_BCM_CPU__) || defined(__DUNE_SLK_BCM_CPU__) || defined(__DUNE_GTS_BCM_CPU__)) && !defined(INCLUDE_CPU_I2C)
+#define INCLUDE_CPU_I2C
+#endif
+
+#ifdef INCLUDE_CPU_I2C
+#include <fcntl.h>
+#include <linux/i2c.h>
+#include <linux/i2c-dev.h>
+#ifndef I2C_SMBUS_QUICK
+#include <linux/i2c.h>
+#endif
+#include <sys/ioctl.h>      /* ioctl */
+
+#define SAL_I2C_DEVICE_FILE_NAME_PREFIX "/dev/i2c-" /* i2c device is SAL_I2C_DEVICE_FILE_NAME_PREFIX + device number */
+#define SAL_I2C_MAX_NAME_LENGTH 64
+#define SAL_I2C_MAX_NOF_SLAVE_DEVS 128 /* Maximum number of slave devices (Addresses) on an I2C bus, numbered from 0 */
+#define SAL_I2C_MAX_ADDRESS_SIZE 4 /* Maximum number of bytes of an address in an I2C device (register address) */
+
+/* flags for sal_i2c_operation() */
+#define SAL_I2C_FLAGS_WRITE 1
+#define SAL_I2C_FLAGS_WRITE_SPLIT 2 /* Split the address and data writes */
+#define SAL_I2C_FLAGS_IGNORE_UNKNOWN_DEV_ERR_ON_WRITE 4
+#define SAL_I2C_MAX_NOF_BUSES 8 /* Maximum number of I2C buses supported which are consecutively numbered from 0 */
+#endif /* INCLUDE_CPU_I2C */
+
+
+/*
+ * Function:
+ *	sal_flash_sync
+ * Purpose:
+ *	For compatibility only.
+ * Parameters:
+ *	None
+ * Returns:
+ *	0 - success
+ *	-1 - failed
+ * Notes:
+ *	Not supported for Unix.
+ */
+
+int
+sal_flash_sync(void)
+{
+    return(-1);
+}
+
+/*
+ * Function:
+ *	sal_flash_init
+ * Purpose:
+ *	For compatibility only.
+ * Parameters:
+ *	None
+ * Returns:
+ *	0 - success
+ *	-1 - failed
+ * Notes:
+ *	Not supported for Unix.
+ */
+
+int
+sal_flash_init(int format)
+{
+    return(-1);
+}
+
+/*
+ * Function:
+ *	sal_flash_boot
+ * Purpose:
+ *	For compatibility only.
+ * Parameters:
+ *	None
+ * Returns:
+ *	0 - success
+ *	-1 - failed
+ * Notes:
+ *	Not supported for Unix.
+ */
+
+int
+sal_flash_boot(char *f)
+{
+    return(-1);
+}
+
+/*
+ * Function:
+ *	sal_appl_init
+ * Purpose:
+ *	Initialize the SAL abstraction layer for Unix
+ * Parameters:
+ *	None
+ * Returns:
+ *	0 - success
+ *	-1 - failed
+ */
+
+int
+sal_appl_init(void)
+{
+#ifndef NO_FILEIO
+    char		start_cwd[256];
+
+    sal_getcwd(start_cwd, sizeof (start_cwd));
+    sal_homedir_set(start_cwd);
+#endif
+
+    sal_console_init();
+    sal_config_refresh();
+
+    DISPLAY_MEM ;
+    return(0);
+}
+
+/*
+ * Function:
+ *	sal_reboot
+ * Purpose:
+ *	For compatibility only.
+ * Parameters:
+ *	None
+ * Notes:
+ *	Causes the Unix application to exit.
+ */
+
+void
+sal_reboot(void)
+{
+    exit(0);
+}
+
+/*
+ * Function:
+ *	sal_shell
+ * Purpose:
+ *	Fork a standard O/S shell.
+ * Parameters:
+ *	None
+ */
+
+void
+sal_shell(void)
+{
+    char *s = getenv("SHELL");
+    /*    coverity[tainted_string]    */
+    system(s ? s : "/bin/sh");
+}
+
+/*
+ * Function:
+ *   sal_shell_cmd
+ * Purpose:
+ *   Execute a standard O/S shell command.
+ * Parameters:
+ *   cmd - commands to be executed
+ */
+
+void
+sal_shell_cmd(const char *cmd)
+{
+    system(cmd);
+}
+
+/*
+ * Function:
+ *	sal_led
+ * Purpose:
+ *	For compatibility only.
+ * Parameters:
+ *	v - pattern to show on LED display
+ * Returns:
+ *	Previous state of LEDs.
+ * Notes:
+ *	Not supported for Unix.
+ */
+
+uint32
+sal_led(uint32 v)
+{
+    static uint32	led = 0;
+    uint32		led_prev;
+
+    led_prev = led;
+    led = v;
+
+    return led_prev;
+}
+
+/*
+ * Function:
+ *	sal_led_string
+ * Purpose:
+ *	For compatibility only.
+ * Parameters:
+ *	s - string to show on LED display
+ * Notes:
+ *	Not supported for Unix.
+ */
+
+void
+sal_led_string(const char *s)
+{
+    COMPILER_REFERENCE(s);
+}
+
+/*
+ * Function:
+ *	sal_date_set
+ * Purpose:
+ *	For compatibility only.
+ * Parameters:
+ *	val - new system time
+ * Returns:
+ *	0 - success
+ *	-1 - failure
+ * Notes:
+ *	Not supported for Unix.
+ */
+
+int
+sal_date_set(sal_time_t *val)
+{
+    sal_printf("Don't know how to set date on this platform (%lu)\n", *val);
+    return -1;
+}
+
+/*
+ * Function:
+ *	sal_date_get
+ * Purpose:
+ *	For compatibility only.
+ * Parameters:
+ *	None
+ * Returns:
+ *	0 - success
+ *	-1 - failure
+ */
+
+int
+sal_date_get(sal_time_t *val)
+{
+    time((time_t *) val);
+    return 0;
+}
+
+
+/* Code for supporting I2C operations on I2C devices whose master is the CPU */
+
+#ifdef INCLUDE_CPU_I2C
+/* File descriptor for each I2C bus the CPU is connected to, a positive value means it is open */
+static int i2c_bus_filedesc[SAL_I2C_MAX_NOF_BUSES] = {0};
+
+/* open a Linux device file for an I2C bus */
+static int sal_i2c_init_fd(int* p_fd, uint8 bus_num)
+{
+  char dev_file_name[SAL_I2C_MAX_NAME_LENGTH];
+
+  sal_snprintf(dev_file_name, SAL_I2C_MAX_NAME_LENGTH, SAL_I2C_DEVICE_FILE_NAME_PREFIX"%d", (int)bus_num);
+  
+  /* Try to open the given i2c dev num */
+  if ( ((*p_fd) = open(dev_file_name, O_RDWR)) <= 0)
+  {
+      sal_printf("ERROR in %s: Failed to open() I2C device file for bus number %u\n",
+                 FUNCTION_NAME(), (unsigned)bus_num);
+      return _SHR_E_FAIL;
+  }
+  return _SHR_E_NONE;
+}
+
+/* close a Linux device file for an I2C bus */
+static int sal_i2c_deinit_fd(int *fd)
+{
+  /* close the I2C device */
+  if (*fd > 0) {
+      if (close(*fd)) {
+          return _SHR_E_NOT_FOUND;
+      }
+      *fd = -1;
+  }
+  
+  return _SHR_E_NONE;
+}
+
+/* Init CPU I2C */
+int sal_i2c_init()
+{
+    return _SHR_E_NONE;
+}
+
+/* De-init CPU I2C */
+int sal_i2c_deinit()
+{
+    int i, ret = _SHR_E_NONE;
+    for (i = 0; i < SAL_I2C_MAX_NOF_BUSES; ++i) {
+        ret |= sal_i2c_deinit_fd(i2c_bus_filedesc + i);
+    }
+    return ret ? _SHR_E_NOT_FOUND : _SHR_E_NONE;
+}
+
+
+/*
+ * Perform an I2C access operation on an I2C device connected to the CPU.
+ * The device file for the I2C bus needs to already be open.
+ */
+static int sal_i2c_operation(
+  int i2c_bus,    /* The number of the I2C bus to access on */
+  uint16 i2c_dev, /* the device on the I2C bus (slave device ID/address) to be accessed */
+  uint8 alen,    /* the length of the address in bytes, should be between 0 and 4. */
+  uint8 dlen,    /* the length of the data to read. */
+  uint32 addr,   /* The address in the device to be accessed (register address). Used if alen>0 */
+  uint8 *data,   /* the buffer for the data to be read. */
+  uint32 flags)  /* flags affecting function operation specifically SAL_I2C_FLAGS_WRITE indicated this is a write operation */
+{
+    int i;
+    unsigned bus = i2c_bus;
+    uint32 value;
+    struct i2c_rdwr_ioctl_data rw_data;
+    struct i2c_msg i2c_rw_msg[2];
+    uint8 addr_n_data[SAL_I2C_MAX_ADDRESS_SIZE + 256]; /* buffer to hold the address and for writes also the write data */
+    /*
+     * Initialize variables which are transferred to ioctl() below
+     * because Valgrind requires all input to ioctl() to be initialized.
+     * What we may have here is 'alignment holes' (e.g., in 64 bits CPUs)
+     */
+    sal_memset(i2c_rw_msg,0, sizeof(i2c_rw_msg));
+    sal_memset(&rw_data,0, sizeof(rw_data));
+    if (bus >= SAL_I2C_MAX_NOF_BUSES || i2c_dev >= SAL_I2C_MAX_NOF_SLAVE_DEVS || alen > SAL_I2C_MAX_ADDRESS_SIZE) {
+        sal_printf("I2c bus %u or I2C device 0x%x or address length %d out of range.\n",
+                   bus, (unsigned)i2c_dev, (unsigned)alen);
+        return _SHR_E_PARAM;
+    }
+
+    /* open the given i2c bus device file if it is not open */
+    if (i2c_bus_filedesc[bus] <= 0) {
+        if (sal_i2c_init_fd(i2c_bus_filedesc + bus, bus) != _SHR_E_NONE || i2c_bus_filedesc[bus] <= 0) {
+            sal_printf("Failed to auto-open the device file.\n");
+            return _SHR_E_FAIL;
+        }
+    }
+
+    /* copy the address to addr_n_data as big endian */
+    value = addr;
+    for (i = alen ; i > 0 ; ) {
+        addr_n_data[--i] = value & 0xff;
+        value >>= 8;
+    }
+
+    /* init the i2c access struct */
+    rw_data.msgs = &i2c_rw_msg[0];
+    i2c_rw_msg[0].addr  = i2c_dev;
+    i2c_rw_msg[0].flags = 0; /* I2C_M_WR */
+    i2c_rw_msg[0].buf   = &addr_n_data[0];
+    if (flags & SAL_I2C_FLAGS_WRITE) {
+        if (flags & SAL_I2C_FLAGS_WRITE_SPLIT) { /* block write */
+            rw_data.nmsgs = 2; /* two WRITE operations */
+            i2c_rw_msg[0].len     = alen;
+            i2c_rw_msg[1].addr    = i2c_dev;
+            i2c_rw_msg[1].flags   = I2C_M_NOSTART;
+            i2c_rw_msg[1].buf     = data;     /* write from input buffer */
+            i2c_rw_msg[1].len     = dlen;
+        } else {
+            rw_data.nmsgs = 1; /* one WRITE operation */
+            i2c_rw_msg[0].len = alen + dlen;
+            sal_memcpy(addr_n_data + alen, data, dlen); /* copy write data after the address */
+        }
+    } else { /* read */
+        if (alen) { /* We have an address so we need to first write it and then read */
+            rw_data.nmsgs = 2;                /* WRITE + READ operations */
+            i2c_rw_msg[0].len     = alen;
+            i2c_rw_msg[1].addr    = i2c_dev;
+            i2c_rw_msg[1].flags   = I2C_M_RD;
+            i2c_rw_msg[1].buf     = data;     /* read to input buffer */
+            i2c_rw_msg[1].len     = dlen;
+        } else { /* No address, only read */
+            rw_data.nmsgs = 1;                /* one READ operation */
+            i2c_rw_msg[0].flags   = I2C_M_RD;
+            i2c_rw_msg[0].buf     = data;     /* read to input buffer */
+            i2c_rw_msg[0].len     = dlen;
+        }
+    }
+
+    /* Perform the I2C messages/operations */
+    while (ioctl(i2c_bus_filedesc[bus], I2C_RDWR, &rw_data) < 0) {
+        if (errno == ENXIO &&
+          (flags & (SAL_I2C_FLAGS_WRITE | SAL_I2C_FLAGS_IGNORE_UNKNOWN_DEV_ERR_ON_WRITE)) ==
+          (SAL_I2C_FLAGS_WRITE | SAL_I2C_FLAGS_IGNORE_UNKNOWN_DEV_ERR_ON_WRITE)) {
+            break;
+        }
+        /* sal_printf("ioctl I2C_RDWR failed in %s, %d, %s "
+           "- error reading from bus %u slave device 0x%x, address 0x%x, error = %d\n",
+           __FILE__, __LINE__, FUNCTION_NAME(), bus, (unsigned)i2c_dev, addr, errno); */
+        if (errno != EINTR) {
+            return _SHR_E_FAIL;
+        }
+    }
+#ifdef CPU_I2C_DUMP_MESSAGES
+    {
+        unsigned j, k;
+        struct i2c_msg *p = rw_data.msgs;
+        sal_printf("I2C %s ioctl(%d,", flags & SAL_I2C_FLAGS_WRITE ? "Write":"Read", i2c_bus_filedesc[bus]);
+        for (j = rw_data.nmsgs; j > 0; --j, ++p) {
+            sal_printf(" [addr=0x%x flags=0x%x len=%u, buf=0x", (unsigned)p->addr, (unsigned)p->flags, (unsigned)p->len);
+            for (k = 0; k < p->len; ++k ) {
+                sal_printf("%.2x", (unsigned)p->buf[k]);
+            }
+            sal_printf("]");
+        }
+        sal_printf("\n");
+    }
+#endif /* CPU_I2C_DUMP_MESSAGES */
+
+    /* In read operations the output is now in the data buffer */
+    return _SHR_E_NONE;
+}
+
+#endif /* INCLUDE_CPU_I2C */
+
+/*
+ * Perform an I2C operations on an I2C device connected to the CPU's I2C controller.
+ * The CPU is the I2C master.
+ */
+
+/* 
+ * Function     : sal_i2c_read
+ * Purpose      : Provide i2c bus read functionality using CPU i2c controller
+ * Returns      : 0 - success, otherwise - failure
+ */
+int
+sal_i2c_read(
+  int i2c_bus,    /* The number of the I2C bus to access on */
+  uint16 i2c_dev, /* the device on the I2C bus (slave device ID/address) to be accessed */
+  uint32 addr,    /* The address in the device to be accessed (register address). Used if alen>0 */
+  uint8 addr_len, /* the length of the address in bytes, should be between 0 and 4. */
+  uint8 *data,    /* the buffer for the data to be read. */
+  uint8 data_len) /* the length of the data to read. */
+{
+#ifdef INCLUDE_CPU_I2C
+    return sal_i2c_operation(i2c_bus, i2c_dev, addr_len, data_len, addr, data, 0);
+#else  /* INCLUDE_CPU_I2C */
+    return _SHR_E_UNAVAIL;
+#endif /* INCLUDE_CPU_I2C */
+}
+
+/* 
+ * Function     : sal_i2c_write
+ * Purpose      : Provide i2c bus write functionality using CPU i2c controller    
+ * Returns      : 0 - success, otherwise - failure
+ */
+int
+sal_i2c_write(
+  int i2c_bus,    /* The number of the I2C bus to access on */
+  uint16 i2c_dev, /* the device on the I2C bus (slave device ID/address) to be accessed */
+  uint32 addr,    /* The address in the device to be accessed (register address). Used if addr_len>0 */
+  uint8 addr_len, /* the length of the address in bytes, should be between 0 and 4. */
+  uint8 *data,    /* the buffer of the data to be written. */
+  uint8 data_len) /* the length of the data to write. */
+{
+#ifdef INCLUDE_CPU_I2C
+    return sal_i2c_operation(i2c_bus, i2c_dev, addr_len, data_len, addr, data, SAL_I2C_FLAGS_WRITE);
+#else  /* INCLUDE_CPU_I2C */
+    return _SHR_E_UNAVAIL;
+#endif /* INCLUDE_CPU_I2C */
+}
+
+/*
+ * Function     : sal_i2c_write_int
+ * Purpose      : Provide i2c bus write functionality using CPU i2c controller
+ * Returns      : 0 - success, otherwise - failure
+ */
+int
+sal_i2c_write_int(
+  int i2c_bus,          /* The number of the I2C bus to access on */
+  uint16 i2c_dev,       /* the device on the I2C bus (slave device ID/address) to be accessed */
+  uint32 addr,          /* The address in the device to be accessed (register address). Used if addr_len>0 */
+  uint8 addr_len,       /* the length of the address in bytes, should be between 0 and 4. */
+  uint32 value_to_write, /* the value to be written. */
+  uint8 data_len)       /* the length of the data to write. */
+{
+#ifdef INCLUDE_CPU_I2C
+    uint32 value;
+    uint8 data[4] = {0};
+    int ret = 0;
+    int i;
+
+    if (data_len > sizeof(uint32))
+    {
+        return _SHR_E_PARAM;
+    }
+
+    /* build data as big endian */
+    value = value_to_write;
+    for (i = data_len ; i > 0 ;) {
+        data[--i] = value & 0xff;
+        value >>= 8;
+    }
+
+    /* Perform an I2C write operation */
+    ret = sal_i2c_write(i2c_bus, i2c_dev, addr, addr_len, data, data_len);
+
+    return ret;
+#else  /* INCLUDE_CPU_I2C */
+    return _SHR_E_UNAVAIL;
+#endif /* INCLUDE_CPU_I2C */
+}
+
+/*
+ * Function     : sal_i2c_read_int
+ * Purpose      : Provide i2c bus read functionality using CPU i2c controller
+ * Returns      : 0 - success, otherwise - failure
+ */
+int
+sal_i2c_read_int(
+  int i2c_bus,          /* The number of the I2C bus to access on */
+  uint16 i2c_dev,       /* the device on the I2C bus (slave device ID/address) to be accessed */
+  uint32 addr,          /* The address in the device to be accessed (register address). Used if alen>0 */
+  uint8 addr_len,       /* the length of the address in bytes, should be between 0 and 4. */
+  uint32 *value_to_read, /* Where to write the value to be read. */
+  uint8 data_len)       /* the length of the data to read. */
+{
+#ifdef INCLUDE_CPU_I2C
+    uint32 value;
+    uint8 result[4] = {0};
+    int ret = 0;
+    int i;
+
+    if (data_len > sizeof(uint32))
+    {
+        return _SHR_E_PARAM;
+    }
+    /* Perform an I2C read operation */
+    ret = sal_i2c_read(i2c_bus, i2c_dev, addr, addr_len, result, data_len);
+
+    /* build results value according received as big endian */
+    value = 0;
+    if (ret == _SHR_E_NONE) {
+        for (i = 0 ; i < data_len; ++i) {
+            value = (value << 8) | result[i];
+        }
+    }
+    *value_to_read = value;
+    return ret;
+#else  /* INCLUDE_CPU_I2C */
+    return _SHR_E_UNAVAIL;
+#endif /* INCLUDE_CPU_I2C */
+}
+
+/* 
+ * Function     : sal_i2c_write_split
+ * Purpose      : Provide i2c bus write functionality using CPU i2c controller    
+ *                Uses two Linux messages for the write instead of one.
+ * Returns      : 0 - success, otherwise - failure
+ */
+int
+sal_i2c_write_split(
+  int i2c_bus,    /* The number of the I2C bus to access on */
+  uint16 i2c_dev, /* the device on the I2C bus (slave device ID/address) to be accessed */
+  uint32 addr,    /* The address in the device to be accessed (register address). Used if addr_len>0 */
+  uint8 addr_len, /* the length of the address in bytes, should be between 0 and 4. */
+  uint8 *data,    /* the buffer of the data to be written. */
+  uint8 data_len) /* the length of the data to write. */
+{
+#ifdef INCLUDE_CPU_I2C
+    return sal_i2c_operation(i2c_bus, i2c_dev, addr_len, data_len, addr, data,
+      SAL_I2C_FLAGS_WRITE | SAL_I2C_FLAGS_WRITE_SPLIT);
+#else  /* INCLUDE_CPU_I2C */
+    return _SHR_E_UNAVAIL;
+#endif /* INCLUDE_CPU_I2C */
+}
+
+/*
+ * Function: cpu_i2c_device_present
+ * Purpose: Probe the I2C bus using i2c_dev, report if a device responds.
+ *          The I2C bus is released upon return.
+ *          No further action is taken.
+ *
+ * Parameters:
+ *    i2c_dev - I2C slave address
+ *
+ * Return:
+ *     _SHR_E_NONE - An I2C device responds at the indicated slave address i2c_dev.
+ *     otherwise  - No I2C response at the indicated saddr, or I/O error.
+ */
+int
+sal_i2c_device_present(
+  int i2c_bus,    /* The number of the I2C bus to access on */
+  uint16 i2c_dev) /* the device on the I2C bus (slave device ID/address) to be accessed */
+{
+#ifdef INCLUDE_CPU_I2C
+    struct i2c_smbus_ioctl_data smbus_data;
+    unsigned bus = i2c_bus;
+
+    if (bus >= SAL_I2C_MAX_NOF_BUSES || i2c_dev >= SAL_I2C_MAX_NOF_SLAVE_DEVS) {
+        sal_printf("I2c bus %u or I2C device 0x%x out of range.\n",
+                   bus, (unsigned)i2c_dev);
+        return _SHR_E_PARAM;
+    }
+
+    /* open the given i2c bus device file if it is not open */
+    if (i2c_bus_filedesc[bus] <= 0) {
+        if (sal_i2c_init_fd(i2c_bus_filedesc + bus, bus) != _SHR_E_NONE || i2c_bus_filedesc[bus] <= 0) {
+            sal_printf("Failed to auto-open the device file.\n");
+            return _SHR_E_FAIL;
+        }
+    }
+
+
+    if (ioctl(i2c_bus_filedesc[bus], I2C_SLAVE, i2c_dev) < 0) {
+        /* ERROR HANDLING; you can check errno to see what went wrong */
+        return _SHR_E_NOT_FOUND;
+    }
+
+    sal_memset(&smbus_data, 0, sizeof(smbus_data));
+    smbus_data.read_write = I2C_SMBUS_QUICK;
+    smbus_data.size = I2C_SMBUS_QUICK;
+
+    if (ioctl(i2c_bus_filedesc[bus], I2C_SMBUS, &smbus_data) < 0) {
+        /* ERROR HANDLING; you can check errno to see what went wrong */
+       return _SHR_E_NOT_FOUND;
+    }
+    return _SHR_E_NONE;
+#else  /* INCLUDE_CPU_I2C */
+    return _SHR_E_UNAVAIL;
+#endif /* INCLUDE_CPU_I2C */
+}
+
+/* 
+ * Function     : sal_i2c_config_get 
+ * Purpose      : Retrieve configurable i2c bus properties 
+ * unit         : I2C controller 
+ * flags        : SAL_I2C_* flags 
+ */
+int
+sal_i2c_config_get(int unit, uint32 *flags)
+{
+    return(-1); /* Not supported */
+}
+
+/* 
+ * Function     : sal_i2c_config_set 
+ * Purpose      : Configure i2c bus properties 
+ * unit         : I2C controller 
+ * flags        : SAL_I2C_* flags 
+ */
+int
+sal_i2c_config_set(int unit, uint32 flags)
+{
+    return(-1); /* Not supported */
+}
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/alloc.c sdk-6.5.21.new/src/sal/core/linux/alloc.c
--- sdk-6.5.21.origin/src/sal/core/linux/alloc.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/alloc.c	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,1017 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * File: 	alloc.c
+ * Purpose:	Defines sal routines for memory allocation
+ */
+
+#ifdef LINUX_SAL_DMA_ALLOC_OVERRIDE
+/* Keep local functions, but use a different name */
+#define sal_dma_alloc sal_sim_dma_alloc
+#define sal_dma_free sal_sim_dma_free
+#endif
+
+#include <sys/types.h>
+#ifdef PTRS_ARE_64BITS
+#include <unistd.h>
+#include <sys/mman.h>
+#endif
+#include <stdlib.h>
+#include <assert.h>
+
+#include <sal/types.h>
+#include <sal/core/thread.h>
+#include <sal/core/memlog.h>
+#include <sal/core/libc.h>
+
+#ifdef MEMORY_MEASUREMENT_DIAGNOSTICS
+#include <shared/mem_measure_tool.h>
+#endif
+
+#ifndef USE_EXTERNAL_MEM_CHECKING
+/* { */
+#define USE_EXTERNAL_MEM_CHECKING 0
+/* } */
+#endif
+#if USE_EXTERNAL_MEM_CHECKING
+/* { */
+#define EXT_DEBUG_ALLOC(_sz, _flags) do { return (_flags & SAL_ALLOC_F_ZERO) ? calloc(1, _sz) : malloc(_sz); } while(0)
+#define EXT_DEBUG_FREE(_addr) do { free(_addr); return; } while(0)
+/* } */
+#else
+/* { */
+#define EXT_DEBUG_ALLOC(_sz, _flags)
+#define EXT_DEBUG_FREE(_addr)
+/* } */
+#endif
+
+#ifndef AGGRESSIVE_ALLOC_DEBUG_TESTING
+/* { */
+#define AGGRESSIVE_ALLOC_DEBUG_TESTING 0
+/* } */
+#endif
+
+#if AGGRESSIVE_ALLOC_DEBUG_TESTING
+/* { */
+#include "alloc_debug.h"
+
+
+static alloc_info Allocs[MAX_ALLOCS];
+static int nof_allocs = 0;
+static pthread_mutex_t alloc_test_mutex;
+static int _test_ininted = 0;
+
+/*
+ * Base entry (first entry) to scan in global array 'Allocas' every time
+ * an allocation is required.
+ * See 'sal_alloc_debug_alloc()'.
+ */
+static uint32 Aggressive_debug_alloc_base = 0;
+static uint32 Aggressive_long_free_search = AGGRESSIVE_LONG_FREE_SEARCH;
+static uint32 Aggressive_alloc_debug_testing_keep_order = AGGRESSIVE_ALLOC_DEBUG_TESTING_KEEP_ORDER;
+static uint32 Aggressive_num_to_test = AGGRESSIVE_NUM_TO_TEST;
+
+#define AGGR_DEBUG_ALLOC(_p, _sz, _s) sal_alloc_debug_alloc(_p, _sz, _s)
+#define AGGR_DEBUG_FREE(_addr) sal_alloc_debug_free(_addr)
+#define AGGR_DEBUG_PRINT_BAD_ADDR(_addr) sal_alloc_debug_print_bad_addr(_addr)
+/*
+ * Below is a list of pairs of procedures (get/set) for the following control
+ * parameters (all related to implementation of AGGRESSIVE_ALLOC_DEBUG_TESTING)
+ *   aggressive_long_free_search
+ *   aggressive_alloc_debug_testing_keep_order
+ *   aggressive_num_to_test
+ * 'Get' procedures have no input and return the required parameter.
+ * 'Set' procedures have the parameter as input and no return value.
+ * {
+ */
+void
+set_aggressive_long_free_search(uint32 value)
+{
+    if (value != 0)
+    {
+        Aggressive_long_free_search = 1;
+    }
+    else
+    {
+        Aggressive_long_free_search = 0;
+    }
+}
+uint32
+get_aggressive_long_free_search(void)
+{
+    return (Aggressive_long_free_search);
+}
+
+void
+set_aggressive_alloc_debug_testing_keep_order(uint32 value)
+{
+    if (value != 0)
+    {
+        Aggressive_alloc_debug_testing_keep_order = 1;
+    }
+    else
+    {
+        Aggressive_alloc_debug_testing_keep_order = 0;
+    }
+}
+uint32
+get_aggressive_alloc_debug_testing_keep_order(void)
+{
+    return (Aggressive_alloc_debug_testing_keep_order);
+}
+
+void
+set_aggressive_num_to_test(uint32 value)
+{
+    if (value == 0)
+    {
+        Aggressive_num_to_test = AGGRESSIVE_NUM_TO_TEST;
+    }
+    else
+    {
+        Aggressive_num_to_test = value;
+    }
+}
+uint32
+get_aggressive_num_to_test(void)
+{
+    return (Aggressive_num_to_test);
+}
+
+static void
+enter_mutex(void)
+{
+    if (!_test_ininted) {
+        _test_ininted = 1;
+        pthread_mutex_init(&alloc_test_mutex, NULL);
+    }
+    pthread_mutex_lock(&alloc_test_mutex);
+}
+/* print all the allocations that were not de-alloced in the given size range */
+void print_sal_allocs(int min_size, int max_size)
+{
+  alloc_info *p_a = Allocs;
+  int i, j=0,k;
+
+  enter_mutex();
+  for (i = nof_allocs; i; --i, ++p_a) {
+    if (p_a->size >= min_size && p_a->size <= max_size) {
+      printf("allocation %d 0x%lx %d  from %p", j++, (unsigned long)p_a->addr, p_a->size, p_a->stack[ALLOC_DEBUG_TESTING_NOF_BACKTRACES-1]);
+      for (k = 0; k < ALLOC_DEBUG_TESTING_NOF_BACKTRACES - 1; ++k) {
+        printf(" -> %p", p_a->stack[ALLOC_DEBUG_TESTING_NOF_BACKTRACES - 2 - k]);
+      }
+      printf(" Description : %s\n", p_a->desc);
+    }
+  }
+  pthread_mutex_unlock(&alloc_test_mutex);
+}
+
+int sal_alloc_debug_nof_allocs_get(void)
+{
+    int nof_allocs_lcl;
+    enter_mutex();
+    nof_allocs_lcl = nof_allocs;
+    pthread_mutex_unlock(&alloc_test_mutex);
+    return nof_allocs_lcl;
+}
+
+void sal_alloc_debug_last_allocs_get(alloc_info *array, int nof_last_allocs)
+{
+    uint32 i;
+    int start = 0;
+
+    enter_mutex();
+    if(array) {
+        if (nof_allocs > nof_last_allocs) {
+            start = nof_allocs - nof_last_allocs;
+        }
+        for(i = start; i < nof_allocs; ++i) {
+            *(array++) = Allocs[i];
+        }
+    }
+    pthread_mutex_unlock(&alloc_test_mutex);
+}
+/*
+ * }
+ */
+void
+sal_alloc_debug_alloc(uint32 *p, unsigned int sz, const char* alloc_note)
+{
+    {
+        size_t addr = (size_t)(p+2);
+        alloc_info *p_a;
+        int ii, kk;
+        int alloc_test_base;
+        int nof_cycles;
+
+        enter_mutex();
+        if (Aggressive_debug_alloc_base >= nof_allocs)
+        {
+            Aggressive_debug_alloc_base = 0;
+        }
+        alloc_test_base = Aggressive_debug_alloc_base;
+        if ((Aggressive_debug_alloc_base + get_aggressive_num_to_test()) >= nof_allocs)
+        {
+            nof_cycles = nof_allocs - Aggressive_debug_alloc_base;
+        }
+        else
+        {
+            nof_cycles = get_aggressive_num_to_test();
+        }
+        Aggressive_debug_alloc_base += get_aggressive_num_to_test();
+
+        p_a = &Allocs[alloc_test_base];
+        for (ii = nof_cycles; ii ; --ii, ++p_a)
+        {
+            uint32 *a = (uint32*)(p_a->addr);
+
+            if (a[-1] != 0xaaaaaaaa)
+            {
+                printf("Wrong header 0x%08lX: Allocation address 0x%08lX, size 0x%lX ",
+                       (unsigned long)a[-1], (unsigned long)addr, (unsigned long)(p_a->size));
+                for (kk = ALLOC_DEBUG_TESTING_NOF_BACKTRACES - 1; kk > 0; --kk)
+                {
+                    printf("%p -> ", p_a->stack[kk]);
+                }
+                printf("%p\n", p_a->stack[0]);
+                assert(0);
+            }
+            assert(a[-2] == p_a->size / 4  && a[a[-2]] == 0xbbbbbbbb);
+            if (p_a->addr < addr + sz && addr < p_a->addr + p_a->size) {
+                printf("Allocation 0x%lx %d conflicts with previous allocation 0x%lx %d  at ",
+                       (unsigned long)addr, sz,
+                       (unsigned long)p_a->addr, p_a->size);
+                for (kk = ALLOC_DEBUG_TESTING_NOF_BACKTRACES - 1; kk > 0; --kk)
+                {
+                    printf("%p -> ", p_a->stack[kk]);
+                }
+                printf("%p\n", p_a->stack[0]);
+                assert(0);
+            }
+        }
+
+        if (nof_allocs >= MAX_ALLOCS) {
+            printf ("too many allocations, the testing mechanism will not work properly from now\n");
+            assert(0);
+        } else {
+            void *stack[ALLOC_DEBUG_TESTING_NOF_BACKTRACES + 1];
+
+            sal_memset(stack,0,sizeof(stack));
+            backtrace(stack, ALLOC_DEBUG_TESTING_NOF_BACKTRACES + 1);
+            Allocs[nof_allocs].addr = addr;
+            Allocs[nof_allocs].size = sz;
+            Allocs[nof_allocs].desc = alloc_note;
+            for (kk = 0; kk < ALLOC_DEBUG_TESTING_NOF_BACKTRACES; ++kk) {
+                Allocs[nof_allocs].stack[kk] = stack[kk + 1];
+            }
+            ++nof_allocs;
+        }
+        pthread_mutex_unlock(&alloc_test_mutex);
+    }
+}
+
+void
+sal_alloc_debug_free(void *addr)
+{
+    {
+        size_t iaddr = (size_t)addr;
+        alloc_info *p_a;
+        int ii, kk, found = -1;
+        uint32 *a;
+
+        a = (uint32 *)addr;
+        assert(a[-1] == 0xaaaaaaaa && a[a[-2]] == 0xbbbbbbbb);
+
+        enter_mutex();
+        p_a = &Allocs[nof_allocs - 1];
+        for (ii = 0; ii < nof_allocs; ++ii, --p_a) {
+            a = (uint32*)(p_a->addr);
+            assert(a[-1] == 0xaaaaaaaa && a[-2] == p_a->size / 4  && a[a[-2]] == 0xbbbbbbbb);
+            if (iaddr == p_a->addr) {
+                /* This is alloc matches the free */
+                if (found != -1) {
+                    printf("When freeing %p found two matching allocs: 0x%lx %d at ",
+                           addr,
+                           (unsigned long)Allocs[found].addr, Allocs[found].size);
+                    for (kk = ALLOC_DEBUG_TESTING_NOF_BACKTRACES - 1; kk > 0; --kk) {
+                        printf("%p -> ", Allocs[found].stack[kk]);
+                    }
+                    printf("%p and 0x%lx %d at ", Allocs[found].stack[0],
+                           (unsigned long)p_a->addr, p_a->size);
+                    for (kk = ALLOC_DEBUG_TESTING_NOF_BACKTRACES - 1; kk > 0; --kk) {
+                        printf("%p -> ", p_a->stack[kk]);
+                    }
+                    printf("%p\n", p_a->stack[0]);
+                    assert(0);
+                } else {
+                    found = nof_allocs - 1 - ii;
+                    if (get_aggressive_long_free_search() == 0)
+                    {
+                        break;
+                    }
+                }
+            }
+            else if (iaddr >= p_a->addr && iaddr < p_a->addr + p_a->size)
+            {
+                /* Found an alloc that the address is inside of */
+                printf("When freeing 0x%lxi found an alloc 0x%lx %d at ",
+                       (unsigned long)iaddr, (unsigned long)p_a->addr, p_a->size);
+                for (kk = ALLOC_DEBUG_TESTING_NOF_BACKTRACES - 1; kk > 0; --kk) {
+                    printf("%p -> ", p_a->stack[kk]);
+                }
+                printf("%p that conflicts with the free\n", p_a->stack[0]);
+                assert(0);
+            }
+        }
+        if (found == -1)
+        {
+            printf("Did not find a matching allocation of %p\n", addr);
+            assert(0);
+        } else {
+            if (get_aggressive_alloc_debug_testing_keep_order())
+            {
+                for(; found + 1 < nof_allocs; ++found)
+                {
+                    Allocs[found] = Allocs[found + 1];
+                }
+            }
+            else
+            {
+                p_a = &Allocs[nof_allocs - 1];
+                Allocs[found] = *p_a;
+            }
+            --nof_allocs;
+        }
+        pthread_mutex_unlock(&alloc_test_mutex);
+    }
+}
+
+void
+sal_alloc_debug_print_bad_addr(void *addr)
+{
+    printf("sal_free: BAD FREE %p\n", addr);
+}
+/* } */
+#else
+/* { */
+#define AGGR_DEBUG_ALLOC(_p, _sz, _s)
+#define AGGR_DEBUG_FREE(_addr)
+#define AGGR_DEBUG_PRINT_BAD_ADDR(addr)
+/* } */
+#endif /* AGGRESSIVE_ALLOC_DEBUG_TESTING */
+
+/* To do: use real data segment limits for bad pointer detection */
+#define BAD_PTR(p)						\
+        (PTR_TO_UINTPTR(p) < 0x1000UL ||			\
+         PTR_TO_UINTPTR(p) > ~0xfffUL)
+#define CORRUPT(p)						\
+	(p[-1] != 0xaaaaaaaa ||					\
+	 p[p[-2]] != 0xbbbbbbbb)
+#define FREED_PTR(p)    ((p[-1] == 0xcccccccc) && (p[p[-2]] == 0xdddddddd))
+
+static unsigned long	sal_alloc_bytes;
+static unsigned long	sal_alloc_calls;
+static unsigned long	sal_free_bytes;
+static unsigned long	sal_free_calls;
+
+static unsigned long    sal_alloc_bytes_main_thr;
+static unsigned long    sal_free_bytes_main_thr;
+
+#ifdef BROADCOM_DEBUG
+/* { */
+#ifdef INCLUDE_BCM_SAL_PROFILE
+/* { */
+static unsigned int _sal_alloc_max = 0 ;
+static unsigned int _sal_alloc_curr = 0 ;
+
+#define SAL_ALLOC_RESOURCE_USAGE_INCR(a_curr, a_max, a_size, ilock)     \
+        a_curr += (a_size);                                             \
+        a_max = ((a_curr) > (a_max)) ? (a_curr) : (a_max)
+
+#define SAL_ALLOC_RESOURCE_USAGE_DECR(a_curr, a_size, ilock)            \
+        a_curr -= (a_size)
+
+
+/*
+ * Function:
+ *      sal_alloc_resource_usage_get
+ * Purpose:
+ *      Provides Current/Maximum memory allocation.
+ * Parameters:
+ *      alloc_curr - Current memory usage.
+ *      alloc_max - Memory usage high water mark
+ */
+
+void 
+sal_alloc_resource_usage_get(uint32 *alloc_curr, uint32 *alloc_max)
+{
+    if (alloc_curr != NULL) {
+        *alloc_curr = _sal_alloc_curr;
+    }
+    if (alloc_max != NULL) {
+        *alloc_max = _sal_alloc_max;
+    }
+}
+static unsigned int _sal_dma_alloc_max;
+static unsigned int _sal_dma_alloc_curr;
+
+#define SAL_DMA_ALLOC_RESOURCE_USAGE_INCR(a_curr, a_max, a_size, ilock) \
+        a_curr += (a_size);                                             \
+        a_max = ((a_curr) > (a_max)) ? (a_curr) : (a_max)
+
+#define SAL_DMA_ALLOC_RESOURCE_USAGE_DECR(a_curr, a_size, ilock)        \
+        a_curr -= (a_size)
+
+/*
+ * Function:
+ *      sal_dma_alloc_resource_usage_get
+ * Purpose:
+ *      Provides Current/Maximum memory allocation.
+ * Parameters:
+ *      alloc_curr - Current memory usage.
+ *      alloc_max - Memory usage high water mark
+ */
+
+void 
+sal_dma_alloc_resource_usage_get(uint32 *alloc_curr, uint32 *alloc_max)
+{
+    if (alloc_curr != NULL)
+    {
+        *alloc_curr = _sal_dma_alloc_curr;
+    }
+    if (alloc_max != NULL)
+    {
+        *alloc_max = _sal_dma_alloc_max;
+    }
+}
+/* } */
+#endif
+/*
+ * Function:
+ *      sal_alloc_stat
+ * Purpose:
+ *      Dump the current allocations
+ * Parameters:
+ *      param - integer used to change behavior.
+ * Notes:
+ *      If the parameter is non-zero, the routine will not
+ *      display successive entries with the same description.
+ */
+void
+sal_alloc_stat(void *param)
+{
+}
+/* } */
+#endif /* BROADCOM_DEBUG */
+
+/**
+ * \brief
+ *     Get the main thread allocated and freed bytes counters.
+ * \param [out] alloc_bytes_count -
+ *     Pointer to alloc bytes counter storage.
+ * \param [out] free_bytes_count -
+ *     Pointer to free bytes counter storage.
+ * \return
+ *     (void)
+ * \remark
+ * * None
+ * \see
+ * * None
+ */
+void sal_get_alloc_counters_main_thr(unsigned long *alloc_bytes_count,unsigned long *free_bytes_count)
+{
+    *alloc_bytes_count = sal_alloc_bytes_main_thr;
+    *free_bytes_count = sal_free_bytes_main_thr;
+}
+
+/**
+ * \brief
+ *     Offsets the main thread allocated and freed bytes counters
+ * \param [out] alloc_bytes_count_offset -
+ *     Value that is substracted from the alloc bytes counter.
+ * \param [out] free_bytes_count_offset -
+ *     Value that is substracted from the free bytes counter.
+ * \return
+ *     (void)
+ * \remark
+ * * Used by sw state internals to offset the sal_alloc and sal_free counters
+ * \see
+ * * dnxc_sw_state_alloc_plain
+ */
+void sal_set_alloc_counters_offset_main_thr(unsigned long alloc_bytes_count_offset, unsigned long free_bytes_count_offset)
+{
+    sal_alloc_bytes_main_thr -= alloc_bytes_count_offset;
+    sal_free_bytes_main_thr -= free_bytes_count_offset;
+}
+
+/**
+ * \brief
+ *     Get the allocated and freed bytes counters.
+ *     Pointer to alloc bytes counter storage.
+ * \param [out] free_bytes_count -
+ *     Pointer to free bytes counter storage.
+ * \return
+ *     (void)
+ * \remark
+ * * None
+ * \see
+ * * None
+ */
+void sal_get_alloc_counters(unsigned long *alloc_bytes_count,unsigned long *free_bytes_count)
+{
+    *alloc_bytes_count = sal_alloc_bytes;
+    *free_bytes_count = sal_free_bytes;
+}
+
+/**
+ * \brief
+ *     Offsets the  allocated and freed bytes counters.
+ * \param [out] alloc_bytes_count_offset -
+ *     Value that is substracted from the alloc bytes counter.
+ * \param [out] free_bytes_count_offset -
+ *     Value that is substracted from the free bytes counter.
+ * \return
+ *     (void)
+ * \remark
+ * * Used by sw state internals to offset the sal_alloc and sal_free counters
+ * \see
+ * * dnxc_sw_state_alloc_plain
+ */
+void sal_set_alloc_counters_offset(unsigned long alloc_bytes_count_offset, unsigned long free_bytes_count_offset)
+{
+    sal_alloc_bytes -= alloc_bytes_count_offset;
+    sal_free_bytes -= free_bytes_count_offset;
+}
+
+/*
+ * \brief
+ *      Allocate general purpose system memory.
+ *      If flags  is set to SAL_ALLOC_F_ZERO the memory will be allocated
+ *           with calloc. Otherwise malloc will be used.
+ *  \param [in] sz - size of memory block to allocate. Relevant only for sal_alloc.
+ *  \param [in] flags - Allocation flags.
+ *      \ref SAL_ALLOC_F_NONE - Allocate the memory with malloc.
+ *      \ref SAL_ALLOC_F_ZERO - Allocate the memory with calloc.
+ *  \param [in] s - optional user description of memory block for debugging.
+ *
+ *  \return
+ *       \retval Pointer to the allocated memory block, if no error was detected.
+ *       \retval NULL if error was detected.
+ *
+ *  \remark
+ *      Memory allocated by this routine is not guaranteed to be safe
+ *      for hardware DMA read/write.
+ *  \see
+ *      sal_alloc
+ */
+
+void *
+sal_alloc2(unsigned int sz, unsigned int flags, char *s)
+{
+    unsigned int orig_sz, alloc_sz;
+    uint32  *p;
+
+#ifdef MEMORY_MEASUREMENT_DIAGNOSTICS
+    uint32 idx;
+#endif
+
+#ifdef INCLUDE_TCL
+/* { */
+    /*
+     * Protects against negative sizes. Does happen with intentionally
+     * illegal input (via TCL)
+     */
+    if ((int)sz < 0)
+    {
+        return NULL;
+    }
+/* } */
+#endif
+    EXT_DEBUG_ALLOC(sz, flags);
+
+    /*
+     * Round up size to accommodate corruption detection sentinels.
+     * Place sentinels at the beginning and end of the data area to
+     * detect memory corruption.  These are verified on free.
+     */
+
+    orig_sz = sz;
+
+    sz = (sz + 3) & ~3;
+
+    /* Check for wrap caused by bad input */
+    alloc_sz = sz + 12;
+    if (alloc_sz < orig_sz) {
+        return NULL;
+    }
+
+    sal_alloc_calls += 1;
+
+    p = ((flags & SAL_ALLOC_F_ZERO) == SAL_ALLOC_F_ZERO) ? calloc(1, alloc_sz) : malloc(alloc_sz);
+    if (p == 0) {
+        return p;
+    }
+
+    assert(UINTPTR_TO_PTR(PTR_TO_UINTPTR(p)) == p);
+
+    if (sal_thread_self() == sal_thread_main_get())
+    {
+        sal_alloc_bytes_main_thr += sz;
+    }
+
+    sal_alloc_bytes += sz;
+
+    p[0] = sz / 4;
+    p[1] = 0xaaaaaaaa;
+    p[2 + sz / 4] = 0xbbbbbbbb;
+
+#ifdef MEMORY_MEASUREMENT_DIAGNOSTICS
+    MEMORY_MEASUREMENT_INITIALIZE;
+    for(idx = 0;idx < memory_measurement_tool.count;idx++) {
+        if(memory_measurement_tool.elements[idx].is_active && (memory_measurement_tool.elements[idx].thread_id == sal_thread_self())) {
+            memory_measurement_tool.elements[idx].sal_size += sz;
+        }
+    }
+#endif
+
+#ifdef BROADCOM_DEBUG
+/* { */
+#ifdef INCLUDE_BCM_SAL_PROFILE
+/* { */
+    SAL_ALLOC_RESOURCE_USAGE_INCR(
+        _sal_alloc_curr,
+        _sal_alloc_max,
+        (sz),
+        ilock);
+
+/* } */
+#endif
+/* } */
+#endif /* BROADCOM_DEBUG */
+
+    AGGR_DEBUG_ALLOC(p, sz, s);
+
+    MEMLOG_ALLOC("sal_alloc", (void *)&p[0], orig_sz, s);
+
+    return (void *) &p[2];
+
+}
+
+
+/*
+ * \brief
+ *      Allocate general purpose system memory.
+ *  \param [in] sz - size of memory block to allocate. Relevant only for sal_alloc.
+ *  \param [in] s - optional user description of memory block for debugging.
+ *
+ *  \return
+ *       \retval Pointer to the allocated memory block, if no error was detected.
+ *       \retval NULL if error was detected.
+ *
+ *  \remark
+ *      Memory allocated by this routine is not guaranteed to be safe
+ *      for hardware DMA read/write.
+ *  \see
+ *      None
+ */
+
+void *
+sal_alloc(unsigned int sz, char *s)
+{
+    return sal_alloc2(sz, SAL_ALLOC_F_NONE , s);
+}
+
+/*
+ * Function:
+ *	sal_free
+ * Purpose:
+ *	Free memory block allocate by sal_alloc
+ * Parameters:
+ *	addr - Address returned by sal_alloc
+ */
+
+void 
+sal_free(void *addr)
+{
+    uint32	*p	= (uint32 *)addr;
+    uint32  *ap = p; /* Originally Allocated Pointer */
+
+#ifdef MEMORY_MEASUREMENT_DIAGNOSTICS
+    uint32 idx;
+#endif
+
+    EXT_DEBUG_FREE(addr);
+
+    /*
+     * Verify sentinels on free.  If this assertion fails, it means that
+     * memory corruption was detected.
+     */
+
+#ifdef SAL_FREE_NULL_IGNORE
+/* { */
+    if (addr == NULL)
+    {
+        return;
+    }
+/* } */
+#endif
+
+    AGGR_DEBUG_FREE(addr);
+
+    if (BAD_PTR(p) || FREED_PTR(p) || CORRUPT(p)) {
+        AGGR_DEBUG_PRINT_BAD_ADDR(addr);
+        assert(!BAD_PTR(p));	/* Use macro to beautify assert message */
+        assert(!FREED_PTR(p));  /* Detect double freed memory */
+        assert(!CORRUPT(p));	/* Use macro to beautify assert message */
+    }
+
+    /* Adjust for Corruption detection Sentinels */
+    ap--;
+    ap--;
+
+    if (sal_thread_self() == sal_thread_main_get())
+    {
+        sal_free_bytes_main_thr += ap[0] * 4;
+    }
+
+    sal_free_calls += 1;
+    sal_free_bytes += ap[0] * 4;
+
+#ifdef MEMORY_MEASUREMENT_DIAGNOSTICS
+    for(idx = 0;idx < memory_measurement_tool.count;idx++) {
+        if(memory_measurement_tool.elements[idx].is_active && (memory_measurement_tool.elements[idx].thread_id == sal_thread_self())) {
+            memory_measurement_tool.elements[idx].sal_size -= (ap[0] * 4);
+        }
+    }
+#endif
+
+#ifdef BROADCOM_DEBUG
+/* { */
+#ifdef INCLUDE_BCM_SAL_PROFILE
+/* { */
+    SAL_ALLOC_RESOURCE_USAGE_DECR(
+        _sal_alloc_curr,
+        (ap[0] * 4),
+        ilock);
+
+/* } */
+#endif
+/* } */
+#endif /* BROADCOM_DEBUG */
+
+    MEMLOG_FREE("sal_free", (void *)&p[-2]);
+
+    ap[1] = 0xcccccccc;    /* Detect redundant frees */
+    ap[2 + ap[0]] = 0xdddddddd;
+    /*    coverity[address_free : FALSE]    */
+    free(ap);
+}
+
+/*
+ * Function:
+ *	sal_dma_alloc
+ * Purpose:
+ *	Allocate memory that can be DMA'd into/out of.
+ * Parameters:
+ *	sz - number of bytes to allocate
+ *	s - string associated with allocate
+ * Returns:
+ *	Pointer to allocated memory or NULL if out of memory.
+ * Notes:
+ *	Memory allocated by this routine is not guaranteed to be safe
+ *	for hardware DMA read/write. This is for use only on sim platform.
+ */
+
+void *
+sal_dma_alloc(size_t sz, char *s)
+{
+    uint32	*p;
+    size_t  new_sz;
+#if defined(PTRS_ARE_64BITS) && defined(MAP_32BIT)
+    long pagesz = sysconf(_SC_PAGESIZE);
+#endif
+
+    /*
+     * Round up size to accommodate corruption detection sentinels.
+     * Place sentinels at the beginning and end of the data area to
+     * detect memory corruption.  These are verified on free.
+     */
+    sz = (sz + 3) & ~3;
+
+    /* Add bytes for holding sentinals */
+    new_sz = sz + 12;
+
+#if defined(PTRS_ARE_64BITS) && defined(MAP_32BIT)
+    /* For 64 bit SDK simulation image use mmap with MAP_32BIT flag for
+     * allocation as we need allocated region to be addressable in 32bit
+     * address space. Normal malloc would return memory in 64 bit virtual
+     * address space. Also allign the size to a page boundary as mmap
+     * allocates memory in pages
+     */
+    new_sz = (new_sz + (size_t)(pagesz-1)) & ~(pagesz-1);
+    p = mmap(NULL,
+             new_sz,
+             PROT_READ|PROT_WRITE,
+             MAP_ANONYMOUS|MAP_SHARED|MAP_32BIT,
+             -1,
+             0);
+    if (MAP_FAILED == p) {
+        return NULL;
+    }
+#else
+    if ((p = malloc(new_sz)) == 0) {
+        return p;
+    }
+#endif
+
+    assert(INT_TO_PTR(PTR_TO_INT(p)) == p);
+
+    p[0] = sz / 4;
+    p[1] = 0xaaaaaaaa;
+    p[2 + sz / 4] = 0xbbbbbbbb;
+#ifdef BROADCOM_DEBUG
+/* { */
+#ifdef INCLUDE_BCM_SAL_PROFILE
+/* { */
+    SAL_DMA_ALLOC_RESOURCE_USAGE_INCR(
+        _sal_dma_alloc_curr,
+        _sal_dma_alloc_max,
+        (sz),
+        ilock);
+/* } */
+#endif
+/* } */
+#endif /* BROADCOM_DEBUG */
+
+    MEMLOG_ALLOC("sal_dma_alloc", &p[0], new_sz, s);
+
+    return (void *) &p[2];
+}
+
+/*
+ * Function:
+ *	sal_dma_free
+ * Purpose:
+ *	Free memory allocated by sal_dma_alloc
+ * Parameters:
+ *	addr - pointer to memory to free.
+ * Returns:
+ *	Nothing.
+ */
+
+void
+sal_dma_free(void *addr)
+{
+#if defined(PTRS_ARE_64BITS) && defined(MAP_32BIT)
+    int org_sz;
+    long pagesz = sysconf(_SC_PAGESIZE);
+#endif
+    uint32	*p	= (uint32 *)addr;
+    uint32  *ap = p; /* Originally Allocated Pointer */
+
+    /*
+     * Verify sentinels on free.  If this assertion fails, it means that
+     * memory corruption was detected.
+     */
+
+    /*    coverity[conditional (1): FALSE]    */
+    /*    coverity[conditional (2): FALSE]    */
+    assert(!BAD_PTR(p));	/* Use macro to beautify assert message */
+    /* Detect double freed memory */
+    assert(!FREED_PTR(p));
+    /*    coverity[conditional (3): FALSE]    */
+    /*    coverity[conditional (4): FALSE]    */
+    assert(!CORRUPT(p));	/* Use macro to beautify assert message */
+
+
+    /* Adjust for Corruption detection Sentinels */
+    ap--;
+    ap--;
+
+#ifdef BROADCOM_DEBUG
+/* { */
+#ifdef INCLUDE_BCM_SAL_PROFILE
+/* { */
+    SAL_DMA_ALLOC_RESOURCE_USAGE_DECR(
+        _sal_dma_alloc_curr,
+        (ap[0] * 4),
+        ilock);
+/* } */
+#endif
+/* } */
+#endif /* BROADCOM_DEBUG */
+
+    MEMLOG_FREE("sal_dma_free", ap);
+
+    ap[1] = 0xcccccccc;  /* Detect redundant frees */
+    ap[2 + ap[0]] = 0xdddddddd;
+#if defined(PTRS_ARE_64BITS) && defined(MAP_32BIT)
+    /* For 64 bit SDK simulation image use  munmap as the allocation
+     * was done using mmap. Also re-adjust the size such that it is
+     * page alligned.
+     */
+    org_sz =  (ap[0] * 4) + 12; /* Add 12 for 3 sentinels */
+    org_sz = (org_sz + (size_t)(pagesz-1)) & ~(pagesz-1);
+    munmap(ap, org_sz);
+#else
+    /*    coverity[address_free : FALSE]    */
+    free(ap);
+#endif
+}
+
+/*
+ * Function:
+ *	sal_dma_flush
+ * Purpose:
+ *	Ensure modified cache is written out to memory.
+ * Parameters:
+ *	addr - beginning of address region
+ *	len - size of address region
+ * Notes:
+ *	A region of memory should always be flushed before telling
+ *	hardware to start a DMA read from that memory.
+ */
+
+void
+sal_dma_flush(void *addr, int len)
+{
+    COMPILER_REFERENCE(addr);
+    COMPILER_REFERENCE(len);
+}
+
+/*
+ * Function:
+ *	sal_dma_inval
+ * Purpose:
+ *	Ensure cache memory is discarded and not written out to memory.
+ * Parameters:
+ *	addr - beginning of address region
+ *	len - size of address region
+ * Notes:
+ *	A region of memory should always be invalidated before telling
+ *	hardware to start a DMA write into that memory.
+ */
+
+void
+sal_dma_inval(void *addr, int len)
+{
+    COMPILER_REFERENCE(addr);
+    COMPILER_REFERENCE(len);
+}
+
+/*
+ * Function:
+ *	sal_dma_vtop
+ * Purpose:
+ *	Convert a virtual memory address to physical.
+ * Parameters:
+ *	addr - address to convert
+ * Returns:
+ *	Physical address
+ */
+
+void *
+sal_dma_vtop(void *addr)
+{
+    return addr;
+}
+
+/*
+ * Function:
+ *	sal_dma_ptov
+ * Purpose:
+ *	Convert a physical memory address to virtual.
+ * Parameters:
+ *	addr - address to convert
+ * Returns:
+ *	Virtual address
+ */
+
+void *
+sal_dma_ptov(void *addr)
+{
+    return addr;
+}
+
+/*
+ * Function:
+ *	sal_memory_check
+ * Purpose:
+ *	Check an address in memory for existence and writability.
+ * Parameters:
+ *	addr - address to check
+ * Returns:
+ *	0 if writable, 1 if not
+ * Notes:
+ *	Should be written to catch SIGBUS and SIGSEGV.
+ *	For now, just returns success.
+ */
+
+int
+sal_memory_check(uint32 addr)
+{
+    return 0;
+}
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/alloc_debug.h sdk-6.5.21.new/src/sal/core/linux/alloc_debug.h
--- sdk-6.5.21.origin/src/sal/core/linux/alloc_debug.h	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/alloc_debug.h	2024-06-03 13:48:03.978757313 +0200
@@ -0,0 +1,100 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ */
+
+#ifndef _SAL_ALLOC_DEBUG_H
+/* { */
+#define _SAL_ALLOC_DEBUG_H
+
+#include <sys/types.h>
+#include <stdlib.h>
+#include <assert.h>
+#include <execinfo.h>
+#include <stdio.h>
+#include <pthread.h>
+
+#include <sal/types.h>
+
+
+#ifndef ALLOC_DEBUG_TESTING_NOF_BACKTRACES
+/* { */
+/*
+ * Depth of backtrace stack stored for each required allocation.
+ * The deeper we go the more information we get, per 'alloc' operation', but, also,
+ * the slower the alloc operation becomes. Recommended value is '15'.
+ */
+#define ALLOC_DEBUG_TESTING_NOF_BACKTRACES 15
+/* } */
+#endif
+
+#if ALLOC_DEBUG_TESTING_NOF_BACKTRACES < 3
+#undef ALLOC_DEBUG_TESTING_NOF_BACKTRACES
+#define ALLOC_DEBUG_TESTING_NOF_BACKTRACES 3
+#endif
+
+typedef struct {
+    size_t addr;
+    int size;
+    void* stack[ALLOC_DEBUG_TESTING_NOF_BACKTRACES];
+    CONST char *desc;
+} alloc_info;
+
+#define BUF_SIZE 1024
+#define MAX_ALLOCS 500000
+
+#if AGGRESSIVE_ALLOC_DEBUG_TESTING
+/* { */
+#if USE_EXTERNAL_MEM_CHECKING
+/* { */
+#error "USE_EXTERNAL_MEM_CHECKING and AGGRESSIVE_ALLOC_DEBUG_TESTING can\'t be set both."
+/* } */
+#endif
+#ifndef AGGRESSIVE_ALLOC_DEBUG_TESTING_KEEP_ORDER
+/* { */
+/* The allocations stored in array.
+ * When freeing allocation in the middle of the array,
+ * the last entry in the array replace it.
+ * if this flags is set, all the entries next to the free allocation will be pushed down,
+ * and hence, the order will be kept.
+ */
+#define AGGRESSIVE_ALLOC_DEBUG_TESTING_KEEP_ORDER 0
+/* } */
+#endif
+
+#ifndef AGGRESSIVE_NUM_TO_TEST
+/* { */
+/*
+ * Number of allocation entries in the global array 'Allocas'
+ * to scan every time an allocation is required.
+ * See sal_alloc_debug_alloc()
+ * This is just initial/default value and may be changed during
+ * runtime. See Aggressive_num_to_test
+ */
+#define AGGRESSIVE_NUM_TO_TEST       200
+/* } */
+#endif
+
+#ifndef AGGRESSIVE_LONG_FREE_SEARCH
+/* { */
+/*
+ * Control on whether to keep searching Allocs[] after finding first match on 'free'.
+ * If AGGRESSIVE_LONG_FREE_SEARCH is set to a zero value then, on the first
+ * match of input address (on 'free'), the search is ended.
+ */
+#define AGGRESSIVE_LONG_FREE_SEARCH 0
+/* } */
+#endif
+
+void set_aggressive_num_to_test(uint32 value);
+void set_aggressive_alloc_debug_testing_keep_order(uint32 value);
+void set_aggressive_long_free_search(uint32 value);
+int sal_alloc_debug_nof_allocs_get(void);
+void sal_alloc_debug_last_allocs_get(alloc_info *array, int nof_last_allocs);
+/* } */
+#endif
+
+/* } */
+#endif /* _SAL_ALLOC_DEBUG_H */
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/assert.c sdk-6.5.21.new/src/sal/core/linux/assert.c
--- sdk-6.5.21.origin/src/sal/core/linux/assert.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/assert.c	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,69 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ */
+
+#include <stdio.h>
+#include <stdlib.h>
+
+
+#include <soc/debug.h>
+
+
+#include <sal/core/libc.h>
+#include <sal/core/boot.h>
+
+/*
+ * Function:
+ *	_default_assert
+ * Purpose:
+ *	Default assertion routine used if not assigned by
+ *	a call to sal_assert_set().
+ */
+
+void
+_default_assert(const char *expr, const char *file, int line)
+{
+    printf("ERROR: Assertion failed: (%s) at %s:%d\n",
+	   expr, file, line);
+    abort();
+}
+
+/*
+ * Function:
+ *	sal_assert_set
+ * Purpose:
+ *	Set new assertion handler routine.
+ * Parameters:
+ *	f - assertion handler function
+ */
+
+static sal_assert_func_t _assert = _default_assert;
+
+#if !defined(BCM_LTSW_SUPPORT)
+
+void
+sal_assert_set(sal_assert_func_t f)
+{
+    _assert = (f) ? f : _default_assert;
+}
+
+#endif // BCM_LTSW_SUPPORT
+
+/*
+ * Function:
+ *	_sal_assert
+ * Purpose:
+ *	Main assertion routine
+ * Notes:
+ *	Normally #define'd to assert().
+ */
+
+/* coverity[+kill] */
+void
+_sal_assert(const char *expr, const char *file, int line)
+{
+    _assert(expr, file, line);
+}
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/boot.c sdk-6.5.21.new/src/sal/core/linux/boot.c
--- sdk-6.5.21.origin/src/sal/core/linux/boot.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/boot.c	2024-06-03 13:48:03.978757313 +0200
@@ -0,0 +1,163 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * File: 	boot.c
+ * Purpose:	Kernel initialization
+ */
+
+#include <stdio.h>
+#include <stdlib.h>
+
+
+#include <soc/debug.h>
+
+
+
+#include <sal/core/libc.h>
+#include <sal/core/boot.h>
+#include <sal/core/spl.h>
+#include <sal/core/dpc.h>
+#include <sal/core/sync.h>
+
+/*
+ * Function:
+ *	sal_core_init
+ * Purpose:
+ *	Initialize the Kernel SAL
+ * Returns:
+ *	0 on success, -1 on failure
+ */
+
+int
+sal_core_init(void)
+{    
+    sal_udelay(0);	/* Cause sal_udelay() to self-calibrate */
+
+    sal_thread_main_set(sal_thread_self());
+
+    if (sal_spl_init()) {
+        return -1;
+    }
+
+    if (sal_dpc_init()) {
+        return -1;
+    }
+
+    if (sal_global_lock_init()) {
+        return -1;
+    }
+
+    
+    if (sal_appl_global_lock_init()) {
+        return -1;
+    }
+
+    return 0;
+}
+
+/*
+ * Function:
+ *  sal_core_cleanup
+ * Purpose:
+ *  Clean up resources created during sal_core_init
+ * Returns:
+ *  Nothing
+ */
+void
+sal_core_cleanup(void)
+{
+    sal_dpc_term();
+
+    return;
+}
+
+/*
+ * Function:
+ *	sal_boot_flags_get
+ * Purpose:
+ *	Return boot flags from startup
+ *	Flags are set for PLISIM and NO_PROBE by default, and can be
+ *	overridden by setting the environment variable SOC_BOOT_FLAGS.
+ * Parameters:
+ *	None
+ * Returns:
+ *	32-bit flags value, 0 if not supported or no flags set.
+ */
+
+static int	_sal_boot_flags_init = FALSE;
+static uint32	_sal_boot_flags = 0;
+
+uint32
+sal_boot_flags_get(void)
+{
+    if (!_sal_boot_flags_init) {
+	char *s = getenv("SOC_BOOT_FLAGS");
+	if (s == NULL) {
+#ifdef PLISIM
+	    _sal_boot_flags = (BOOT_F_PLISIM | BOOT_F_NO_PROBE);
+#ifdef LINUX_PLI_COMBO_BDE
+            if (getenv("BCM_SIM_PATH") == NULL) {
+                _sal_boot_flags = 0;
+            }
+#endif
+#endif
+	} else {
+	    _sal_boot_flags = sal_ctoi(s, NULL);
+	}
+	_sal_boot_flags_init = TRUE;
+    }
+
+    return _sal_boot_flags;
+}
+
+/*
+ * Function:
+ *	sal_boot_flags_set
+ * Purpose:
+ *	Change boot flags
+ * Parameters:
+ *	flags - New boot flags
+ */
+
+void
+sal_boot_flags_set(uint32 flags)
+{
+    _sal_boot_flags_init = TRUE;
+    _sal_boot_flags = flags;
+}
+
+/*
+ * Function:
+ *	sal_boot_script
+ * Purpose:
+ *	Return name of boot script from startup
+ * Parameters:
+ *	None
+ * Returns:
+ *	Name of boot script, NULL if none
+ */
+char *
+sal_boot_script(void)
+{
+    return getenv("SOC_BOOT_SCRIPT");
+}
+
+
+/*
+ * Function:
+ *      sal_os_name
+ * Purpose:
+ *      Provide a description of the underlying operating system
+ * Parameters:
+ *      None
+ * Returns:
+ *      String describing the OS
+ */
+const char* 
+sal_os_name(void)
+{
+    return "Unix (Posix)"; 
+}
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/date.c sdk-6.5.21.new/src/sal/core/linux/date.c
--- sdk-6.5.21.origin/src/sal/core/linux/date.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/date.c	2024-06-03 13:48:03.978757313 +0200
@@ -0,0 +1,35 @@
+/*! \file date.c
+ *
+ * Date API.
+ */
+/*
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ */
+
+#include <string.h>
+#include <time.h>
+#include <sys/time.h>
+
+#include <sal/core/date.h>
+
+char *
+sal_date(sal_date_t *date)
+{
+    char *ptr, *nl;
+    time_t now = time(NULL);
+
+    if (!date || sizeof(date->buf) < 26) {
+        return SAL_DATE_NULL;
+    }
+    ptr = ctime_r(&now, date->buf);
+    if (!ptr) {
+        return SAL_DATE_NULL;
+    }
+    /* Remove newline if present */
+    if ((nl = strchr(ptr, '\n')) != NULL) {
+        *nl = '\0';
+    }
+    return ptr;
+}
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/dl.c sdk-6.5.21.new/src/sal/core/linux/dl.c
--- sdk-6.5.21.origin/src/sal/core/linux/dl.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/dl.c	2024-06-03 13:48:03.978757313 +0200
@@ -0,0 +1,38 @@
+/*! \file dl.c
+ *
+ * Dynamic loader API.
+ */
+/*
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ */
+
+#include <dlfcn.h>
+#include <stdio.h>
+
+#include <sal/core/dl.h>
+
+sal_dl_t
+sal_dl_open(const char *libname)
+{
+    sal_dl_t rv;
+
+    rv = dlopen(libname, RTLD_LAZY);
+    if (rv == NULL) {
+        printf("dllopen failed error = %s\n", dlerror());
+    }
+    return rv;
+}
+
+void *
+sal_dl_sym(sal_dl_t dlh, const char *symname)
+{
+    return dlsym(dlh, symname);
+}
+
+int
+sal_dl_close(sal_dl_t dlh)
+{
+    return dlclose(dlh);
+}
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/Makefile sdk-6.5.21.new/src/sal/core/linux/Makefile
--- sdk-6.5.21.origin/src/sal/core/linux/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/Makefile	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,15 @@
+# $Id: Makefile,v 1.3 2004/03/03 09:33:48 brb Exp $
+# This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+# 
+# Copyright 2007-2020 Broadcom Inc. All rights reserved.
+#
+# Makefile for SOC SAL support (UNIX/POSIX)
+#
+LOCALDIR = src/sal/core/unix
+
+include ${SDK}/make/Make.config
+
+lib = libsal_core_plat
+include ${SDK}/make/Make.lib
+
+include ${SDK}/make/Make.depend
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/msgq.c sdk-6.5.21.new/src/sal/core/linux/msgq.c
--- sdk-6.5.21.origin/src/sal/core/linux/msgq.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/msgq.c	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,427 @@
+/*! \file msgq.c
+ *
+ * Message queue API.
+ */
+/*
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ */
+
+#include <unistd.h>
+#include <stdlib.h>
+#include <time.h>
+#include <assert.h>
+#include <errno.h>
+#include <pthread.h>
+
+#include <sal/core/libc.h>
+#include <sal/core/time.h>
+#include <sal/core/msgq.h>
+
+#define SAL_MSGQ_SIGNATURE   0x8532b9d0
+
+typedef struct basic_element_s {
+    struct basic_element_s *next;
+    uint8 data[];
+} basic_element_t;
+
+typedef struct {
+    basic_element_t *head;
+    basic_element_t *tail;
+} pri_list_t;
+
+typedef struct rwlock_ctrl_s {
+    uint32 signature;
+    size_t element_size;
+    size_t num_of_element;
+    size_t max_elements;
+    uint8 *buf;
+    pri_list_t pri_lists[SAL_MSGQ_PRIORITIES];
+    basic_element_t *free_element_list;
+    pthread_mutex_t q_lock_mutex;
+    pthread_mutex_t recv_mutex;
+    pthread_mutex_t post_mutex;
+    pthread_cond_t recv_cond;
+    pthread_cond_t post_cond;
+    uint32 pending_to_post;
+    uint32 pending_to_recv;
+    const char *desc;
+} rwlock_ctrl_t;
+
+
+sal_msgq_t
+sal_msgq_create(size_t element_size, size_t max_elements, const char *desc)
+{
+    rwlock_ctrl_t *mq;
+    size_t actual_element_size = element_size + sizeof(void *);
+
+    mq = (rwlock_ctrl_t *)malloc(sizeof(rwlock_ctrl_t));
+    if (!mq) {
+        return NULL;
+    }
+    sal_memset(mq, 0, sizeof(*mq));
+    do {
+        int j;
+        basic_element_t *p_element;
+        mq->free_element_list = (basic_element_t *)
+            malloc(actual_element_size * max_elements);
+        if (!mq->free_element_list) {
+            break;
+        }
+        mq->buf = (uint8 *)mq->free_element_list;  /* Keep pointer to free the memory */
+        for (j = 0, p_element = mq->free_element_list;
+             j < max_elements-1;
+             j++) {
+            p_element->next = (basic_element_t *)((uint8 *)p_element + actual_element_size);
+            p_element = p_element->next;
+        }
+        p_element->next = NULL; /* Terminate the list */
+
+        for (j = 0; j < SAL_MSGQ_PRIORITIES; j++) {
+            mq->pri_lists[j].head = NULL;
+            mq->pri_lists[j].tail = NULL;
+        }
+        if ((0 != pthread_mutex_init(&mq->q_lock_mutex, NULL)) ||
+            (0 != pthread_mutex_init(&mq->recv_mutex, NULL)) ||
+            (0 != pthread_mutex_init(&mq->post_mutex, NULL))) {
+            break;
+        }
+        if (0 != pthread_cond_init(&mq->recv_cond, NULL)) {
+            break;
+        }
+        if (0 != pthread_cond_init(&mq->post_cond, NULL)) {
+            break;
+        }
+        mq->desc = desc;
+        mq->element_size = element_size;
+        mq->max_elements = max_elements;
+        mq->num_of_element = 0;
+        mq->pending_to_post = 0;
+        mq->pending_to_recv = 0;
+        mq->signature = SAL_MSGQ_SIGNATURE;
+        return (sal_msgq_t)mq;
+    } while (0);
+
+    /* Free all allocated resources and return failure */
+    if (mq->buf) {
+        free (mq->buf);
+    }
+    if (*(uint32 *)(&mq->q_lock_mutex)) {
+        pthread_mutex_destroy(&mq->q_lock_mutex);
+    }
+    if (*(uint32 *)(&mq->recv_mutex)) {
+        pthread_mutex_destroy(&mq->recv_mutex);
+    }
+    if (*(uint32 *)(&mq->post_mutex)) {
+        pthread_mutex_destroy(&mq->post_mutex);
+    }
+    if (*(uint32 *)(&mq->recv_cond)) {
+        pthread_cond_destroy(&mq->recv_cond);
+    }
+    if (*(uint32 *)(&mq->post_cond)) {
+        pthread_cond_destroy(&mq->post_cond);
+    }
+    free(mq);
+    return NULL;
+}
+
+void
+sal_msgq_destroy(sal_msgq_t msgq_hdl)
+{
+    rwlock_ctrl_t *mq = (rwlock_ctrl_t *)msgq_hdl;
+
+    /* Input validation */
+    if (!mq || (mq->signature != SAL_MSGQ_SIGNATURE)) {
+        return;
+    }
+
+    /* Release Q resources */
+    pthread_cond_destroy(&mq->recv_cond);
+    pthread_cond_destroy(&mq->post_cond);
+    pthread_mutex_destroy(&mq->q_lock_mutex);
+    pthread_mutex_destroy(&mq->recv_mutex);
+    pthread_mutex_destroy(&mq->post_mutex);
+    free (mq->buf);
+    free (mq);
+}
+static int
+_timed_calc(uint32 usec, struct timespec *ts)
+{
+#if defined(CLOCK_REALTIME)
+    if (clock_gettime(CLOCK_REALTIME, ts) != 0) {
+        return -1;
+    }
+#else
+    /* Use time if realtime clock is not available */
+    ts->tv_sec = time(NULL)+1; /* round up fractions of sec */
+#endif
+
+    /* Add in the delay */
+    ts->tv_sec += usec / SECOND_USEC;
+    ts->tv_nsec += (usec % SECOND_USEC) * 1000;
+    /* Currect overflow - if occured */
+    if (ts->tv_nsec > SECOND_NSEC) {
+        /* Can only have overflow of 1 sec */
+        ts->tv_sec++;
+        ts->tv_nsec -= SECOND_NSEC;
+    }
+    return 0;
+}
+
+int
+sal_msgq_post(sal_msgq_t msgq_hdl,
+              void *element,
+              sal_msgq_priority_t pri,
+              uint32 usec)
+{
+    rwlock_ctrl_t *mq = (rwlock_ctrl_t *)msgq_hdl;
+    int rv;
+    basic_element_t *p_element;
+
+    /* Input validation */
+    if (!mq || (mq->signature != SAL_MSGQ_SIGNATURE) ||
+        (pri < SAL_MSGQ_MIN_PRIORITY) || (pri > SAL_MSGQ_MAX_PRIORITY)) {
+        return SAL_MSGQ_E_INVALID_PARAM;
+    }
+
+    /* Lock the queue */
+    if (pthread_mutex_lock(&mq->q_lock_mutex) != 0) {
+        rv = __LINE__;
+        return -rv;
+    }
+    /* Is the queue full or other pending ? */
+    if (mq->num_of_element == mq->max_elements) {
+        int ret_status;
+
+        /* Need to wait until there is room */
+        if (usec == SAL_MSGQ_NOWAIT) { /* Return error if can't wait */
+            pthread_mutex_unlock(&mq->q_lock_mutex);
+            return SAL_MSGQ_E_TIMEOUT;
+        }
+        mq->pending_to_post++;
+
+post_retry:
+        rv = pthread_mutex_lock(&mq->post_mutex);
+        if (rv != 0) {
+            mq->pending_to_post--;
+            pthread_mutex_unlock(&mq->q_lock_mutex);
+            rv = __LINE__;
+            return -rv;
+        }
+        pthread_mutex_unlock(&mq->q_lock_mutex);
+
+        /*
+         * This can be critical place. If we get stuck here (task switch) and
+         * the recv threads depleting the queue then nobody will signal the
+         * condition variable ==> deadlock. For this reason, we make sure that
+         * the recv thread locks the post mutex before signaling. Since at this
+         * point we have the post_mutex, the recv thread will block and we
+         * can get into the condition function which will unlock the post_mutex
+        */
+        ret_status = -2;
+        if (usec == SAL_MSGQ_FOREVER) {
+            rv = pthread_cond_wait(&mq->post_cond, &mq->post_mutex);
+        } else  {
+            struct timespec ts;
+            int loop_count = 0;
+            do {
+                _timed_calc(usec, &ts);
+
+                rv = pthread_cond_timedwait(&mq->post_cond,
+                                            &mq->post_mutex, &ts);
+                assert ((rv == 0) || (rv == ETIMEDOUT));
+                if (rv == ETIMEDOUT) {
+                    ret_status = SAL_MSGQ_E_TIMEOUT;
+                }
+            } while (rv == EINVAL && loop_count++ < 1);
+        }
+        /* Unlock the mutex */
+        pthread_mutex_unlock(&mq->post_mutex);
+
+        /* Lock the queue again */
+        if (pthread_mutex_lock(&mq->q_lock_mutex) != 0) {
+            rv = __LINE__;
+            return -rv;
+        }
+        if (rv != 0) {  /* If failed condition wait */
+            mq->pending_to_post--;
+            pthread_mutex_unlock(&mq->q_lock_mutex);
+            return ret_status;
+        }
+        /* It is possible, on multiple cores, that multiple threads will
+         * wake up from a single condition signal (according to the
+         * documentation). So check that everything is okay
+         */
+        if (mq->num_of_element == mq->max_elements) {
+            goto post_retry;
+        }
+        mq->pending_to_post--;
+    }
+    /* When we here, the queue is locked and there is room */
+    assert (mq->num_of_element < mq->max_elements);
+    assert (mq->free_element_list != NULL);
+
+    /* Get an element from the free list */
+    p_element = mq->free_element_list;
+    mq->free_element_list = p_element->next;
+    p_element->next = NULL;
+
+    /* Copy the data into the element */
+    memcpy(p_element->data, element, mq->element_size);
+
+    /* Attach the element to the tail of the list (based on its priority) */
+    if (mq->pri_lists[pri].head) {    /* If the list is not empty */
+        mq->pri_lists[pri].tail->next = p_element;  /* Attach to the tail end*/
+    }  else {
+        mq->pri_lists[pri].head = p_element;
+    }
+    mq->pri_lists[pri].tail = p_element;  /* Set the tail to be the new element */
+
+    mq->num_of_element++;
+
+    if (mq->pending_to_recv > 0) {   /* If someone waiting for recv */
+        pthread_mutex_lock(&mq->recv_mutex);
+        rv = pthread_cond_signal(&mq->recv_cond); /* Wake up pending recv threads */
+        assert(rv == 0);
+        /*
+         * Unlock the queue before freeing the receive mutex, so if the receiver
+         * wakes up it will not be required to perform another task switch as
+         * it will be blocked on the q_lock_mutex.
+         */
+        pthread_mutex_unlock(&mq->q_lock_mutex);
+        pthread_mutex_unlock(&mq->recv_mutex);
+    } else {
+        /* Unlock the queue and return */
+        pthread_mutex_unlock(&mq->q_lock_mutex);
+    }
+
+    return 0;
+}
+
+int
+sal_msgq_recv(sal_msgq_t msgq_hdl, void *element, uint32 usec)
+{
+    rwlock_ctrl_t *mq = (rwlock_ctrl_t *)msgq_hdl;
+    int rv;
+    basic_element_t *p_element;
+    int j;
+
+    /* Input validation */
+    if (!mq || (mq->signature != SAL_MSGQ_SIGNATURE)) {
+        return SAL_MSGQ_E_INVALID_PARAM;
+    }
+
+    /* Lock the queue */
+    if (pthread_mutex_lock(&mq->q_lock_mutex) != 0) {
+        return -1;
+    }
+    /* Is the queue empty or others are waiting to receive ? */
+    if (mq->num_of_element == 0) {
+        int ret_status;
+
+        /* Need to wait, does the caller willing too? */
+        if (usec == SAL_MSGQ_NOWAIT) { /* Return error if can't wait */
+            pthread_mutex_unlock(&mq->q_lock_mutex);
+            rv = __LINE__;
+            return -rv;
+        }
+        mq->pending_to_recv++;   /* Increment the number of waiting */
+
+recv_retry:
+        rv = pthread_mutex_lock(&mq->recv_mutex);
+        if (0 != rv) {
+            mq->pending_to_recv--;
+            pthread_mutex_unlock(&mq->q_lock_mutex);
+            rv = __LINE__;
+            return -rv;
+        }
+        pthread_mutex_unlock(&mq->q_lock_mutex);
+
+        ret_status = -2;
+        if (usec == SAL_MSGQ_FOREVER) {
+            rv = pthread_cond_wait(&mq->recv_cond, &mq->recv_mutex);
+        } else  {
+            struct timespec ts;
+            int loop_count = 0;
+            do {
+                _timed_calc(usec, &ts);
+
+                rv = pthread_cond_timedwait(&mq->recv_cond,
+                                            &mq->recv_mutex,
+                                            &ts);
+                if (rv == ETIMEDOUT) {
+                    ret_status = SAL_MSGQ_E_TIMEOUT;
+                }
+            } while (rv == EINVAL && loop_count++ < 1);
+        }
+        /* Unlock the mutex */
+        pthread_mutex_unlock(&mq->recv_mutex);
+
+        /* Lock the queue again */
+        if (pthread_mutex_lock(&mq->q_lock_mutex) != 0) {
+            rv = __LINE__;
+            return -rv;
+        }
+        if (rv != 0) {  /* If failed condition wait */
+            mq->pending_to_recv--;
+            pthread_mutex_unlock(&mq->q_lock_mutex);
+            return ret_status;
+        }
+
+        /* It is possible, on multiple cores, that multiple threads will
+         * wake up from a single condition signal (according to the
+         * documentation). So verify that if the Q is empty that try again.
+         */
+        if (mq->num_of_element == 0) {
+            goto recv_retry;
+        }
+
+        mq->pending_to_recv--;  /* Decrement the number of receive pending */
+    } /* End of if Q is empty or pending receivers */
+
+    /* If we are here have have the Q lock and there are elements in the Q */
+    assert (mq->num_of_element > 0);
+    for (j = SAL_MSGQ_MAX_PRIORITY; j >= SAL_MSGQ_MIN_PRIORITY; j--) {
+        if (mq->pri_lists[j].head) {
+            break;
+        }
+    }
+    assert(j >= SAL_MSGQ_MIN_PRIORITY);
+    p_element = mq->pri_lists[j].head;
+    mq->pri_lists[j].head = p_element->next;
+    if (mq->pri_lists[j].tail == p_element) {
+        mq->pri_lists[j].tail = NULL;  /* was the last element */
+    }
+
+    /* Copy the data */
+    sal_memcpy(element, p_element->data, mq->element_size);
+
+    /* Free the element to the free list */
+    p_element->next = mq->free_element_list;
+    mq->free_element_list = p_element;
+
+    mq->num_of_element--;
+    if (mq->pending_to_post > 0) {  /* If someone is waiting to post */
+        pthread_mutex_lock(&mq->post_mutex);
+        rv = pthread_cond_signal(&mq->post_cond); /* Wake up pending post threads */
+        assert(rv == 0);
+        pthread_mutex_unlock(&mq->post_mutex);
+    }
+
+    pthread_mutex_unlock(&mq->q_lock_mutex);
+    return 0;
+}
+
+size_t
+sal_msgq_count_get(sal_msgq_t msgq_hdl)
+{
+    rwlock_ctrl_t *mq = (rwlock_ctrl_t *)msgq_hdl;
+
+    /* Input validation */
+    if (!mq || (mq->signature != SAL_MSGQ_SIGNATURE)) {
+        return 0;
+    }
+    /* No need to lock the queue as this value being updated atomically */
+    return mq->num_of_element;
+}
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/rwlock.c sdk-6.5.21.new/src/sal/core/linux/rwlock.c
--- sdk-6.5.21.origin/src/sal/core/linux/rwlock.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/rwlock.c	2024-06-03 13:48:03.978757313 +0200
@@ -0,0 +1,141 @@
+/*! \file rwlock.c
+ *
+ * Read/write lock API.
+ */
+/*
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ */
+
+#include <unistd.h>
+#include <stdlib.h>
+#include <time.h>
+#include <assert.h>
+#include <errno.h>
+#include <pthread.h>
+
+#include <sal/core/time.h>
+#include <sal/core/rwlock.h>
+
+#define SAL_RWLOCK_SIGNATURE   0x8482a9d0
+
+/* Local abstract type built on the POSIX rwlock */
+typedef struct rwlock_ctrl_s {
+    uint32 signature;
+    pthread_rwlock_t rwlock;
+    const char *desc;
+} rwlock_ctrl_t;
+
+static int
+timed_calc(uint32 usec, struct timespec *ts)
+{
+#if defined(CLOCK_REALTIME)
+    if (clock_gettime(CLOCK_REALTIME, ts) != 0) {
+        return -1;
+    }
+#else
+    /* we use time if realtime clock is not available */
+    ts->tv_sec = time(NULL)+1; /* round up fractions of sec */
+#endif
+
+    /* Add in the delay */
+    ts->tv_sec += usec / SECOND_USEC;
+    ts->tv_nsec += (usec % SECOND_USEC) * 1000;
+    /* currect overflow - if occured */
+    if (ts->tv_nsec > SECOND_NSEC) {
+        /* can only have overflow of 1 sec */
+        ts->tv_sec++;
+        ts->tv_nsec -= SECOND_NSEC;
+    }
+    return 0;
+}
+
+sal_rwlock_t
+sal_rwlock_create(const char *desc)
+{
+    rwlock_ctrl_t *mc;
+
+    if ((mc = malloc(sizeof(rwlock_ctrl_t))) == NULL) {
+        return NULL;
+    }
+
+    mc->desc = desc;   /* save the name for debug usage */
+    mc->signature = SAL_RWLOCK_SIGNATURE;
+    /* initialize with the default attributes */
+    if (pthread_rwlock_init(&mc->rwlock, NULL) != 0) {
+        free(mc);
+        return NULL;
+    }
+
+    return (sal_rwlock_t)mc;
+}
+
+void
+sal_rwlock_destroy(sal_rwlock_t rwlock)
+{
+    rwlock_ctrl_t *mc = (rwlock_ctrl_t *)rwlock;
+    if (!mc || (mc->signature != SAL_RWLOCK_SIGNATURE)) {
+        return;
+    }
+    pthread_rwlock_destroy(&mc->rwlock);
+    free(mc);
+}
+
+int
+sal_rwlock_rlock(sal_rwlock_t rwlock, uint32 usec)
+{
+    rwlock_ctrl_t *mc = (rwlock_ctrl_t *)rwlock;
+    int rv = -1;
+    struct timespec ts;
+
+    if (!mc || (mc->signature != SAL_RWLOCK_SIGNATURE)) {
+        return -1;
+    }
+    if (usec == SAL_RWLOCK_FOREVER) {
+        rv = pthread_rwlock_rdlock(&mc->rwlock);
+    } else if (usec == SAL_RWLOCK_NOWAIT) {
+        rv = pthread_rwlock_tryrdlock(&mc->rwlock);
+    } else {
+        if (timed_calc(usec, &ts) == 0) {
+            rv = pthread_rwlock_timedrdlock(&mc->rwlock, &ts);
+        }
+    }
+    return (rv != 0 ? -1 : 0);
+}
+
+int
+sal_rwlock_wlock(sal_rwlock_t rwlock, uint32 usec)
+{
+    rwlock_ctrl_t *mc = (rwlock_ctrl_t *)rwlock;
+    int rv = -1;
+    struct timespec ts;
+
+    if (!mc || (mc->signature != SAL_RWLOCK_SIGNATURE)) {
+        return -1;
+    }
+    if (usec == SAL_RWLOCK_FOREVER) {
+        rv = pthread_rwlock_wrlock(&mc->rwlock);
+    } else if (usec == SAL_RWLOCK_NOWAIT) {
+        rv = pthread_rwlock_trywrlock(&mc->rwlock);
+    } else {
+        if (timed_calc(usec, &ts) == 0) {
+            rv = pthread_rwlock_timedwrlock(&mc->rwlock, &ts);
+        }
+    }
+    return (rv != 0 ? -1 : 0);
+}
+
+int
+sal_rwlock_give(sal_rwlock_t rwlock)
+{
+    rwlock_ctrl_t *mc = (rwlock_ctrl_t *)rwlock;
+    int rv;
+
+    if (!mc || (mc->signature != SAL_RWLOCK_SIGNATURE)) {
+        return -1;
+    }
+    rv = pthread_rwlock_unlock(&mc->rwlock);
+    return (rv != 0 ? -1 : 0);
+}
+
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/spl.c sdk-6.5.21.new/src/sal/core/linux/spl.c
--- sdk-6.5.21.origin/src/sal/core/linux/spl.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/spl.c	2024-06-03 13:48:03.978757313 +0200
@@ -0,0 +1,170 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * File: 	spl.c
+ * Purpose:	Interrupt Blocking
+ */
+#if defined(LINUX) || defined(linux) || defined(__linux__)
+#define _XOPEN_SOURCE 600
+#endif
+#include <sys/types.h>
+#include <signal.h>
+#include <assert.h>
+#include <sal/core/sync.h>
+#include <pthread.h>
+
+/*
+ *  To improve spl lock performance, pthread_mutex_lock/pthread_mutex_unlock
+ *  is used by default.
+ *  Define SAL_SPL_USE_SAL_MUTEX to use sal_mutex on the spl lock.
+ */
+#ifdef SAL_SPL_USE_SAL_MUTEX
+static sal_mutex_t spl_mutex;
+#define SAL_SPL_LOCK_INIT(m) m = sal_mutex_create("spl mutex")
+#define SAL_SPL_LOCK(m)      sal_mutex_take(m, sal_mutex_FOREVER)
+#define SAL_SPL_UNLOCK(m)    sal_mutex_give(m)
+#else
+static pthread_mutex_t spl_mutex;
+#define SAL_SPL_LOCK_INIT(m) \
+    do {\
+        pthread_mutexattr_t attr;\
+        pthread_mutexattr_init(&attr);\
+        pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_RECURSIVE);\
+        pthread_mutex_init(&m, &attr);\
+    } while(0)
+#define SAL_SPL_LOCK(m)      pthread_mutex_lock(&m)
+#define SAL_SPL_UNLOCK(m)    pthread_mutex_unlock(&m)
+#endif /* SAL_SPL_USE_SAL_MUTEX */
+
+static int spl_level;
+
+/*
+ * Function:
+ *	sal_spl_init
+ * Purpose:
+ *	Initialize the synchronization portion of the SAL
+ * Returns:
+ *	0 on success, -1 on failure
+ */
+
+int
+sal_spl_init(void)
+{
+    /* Initialize spl */
+    SAL_SPL_LOCK_INIT(spl_mutex);
+    spl_level = 0;
+
+    return 0;
+}
+
+/*
+ * Function:
+ *	sal_spl
+ * Purpose:
+ *	Set interrupt level.
+ * Parameters:
+ *	level - interrupt level to set.
+ * Returns:
+ *	Value of interrupt level in effect prior to the call.
+ * Notes:
+ *	Used most often to restore interrupts blocked by sal_splhi.
+ */
+
+int
+sal_spl(int level)
+{
+#ifdef SAL_SPL_NO_PREEMPT
+    struct sched_param param;
+    int policy;
+
+    if (pthread_getschedparam(pthread_self(), &policy, &param) == 0) {
+        /* Interrupt thread uses SCHED_RR and should be left alone */
+        if (policy != SCHED_RR) {
+            /* setting sched_priority to 0 will only change the real time priority
+               of the thread. For a non real time thread it should be 0. This is
+               very Linux specific.
+             */  
+            param.sched_priority = 0;
+            pthread_setschedparam(pthread_self(), SCHED_OTHER, &param);
+        }
+    }
+#endif
+    assert(level == spl_level);
+    spl_level--;
+    SAL_SPL_UNLOCK(spl_mutex);
+    return 0;
+}
+
+/*
+ * Function:
+ *	sal_splhi
+ * Purpose:
+ *	Set interrupt mask to highest level.
+ * Parameters:
+ *	None
+ * Returns:
+ *	Value of interrupt level in effect prior to the call.
+ */
+
+int
+sal_splhi(void)
+{
+#ifdef SAL_SPL_NO_PREEMPT
+    struct sched_param param;
+    int policy;
+
+    if (pthread_getschedparam(pthread_self(), &policy, &param) == 0) {
+        /* Interrupt thread uses SCHED_RR and should be left alone */
+        if (policy != SCHED_RR) {
+            param.sched_priority = 90;
+            pthread_setschedparam(pthread_self(), SCHED_FIFO, &param);
+        }
+    }
+#endif
+    SAL_SPL_LOCK(spl_mutex);
+    return ++spl_level;
+}
+
+/*
+ * Function:
+ *	sal_int_context
+ * Purpose:
+ *	Return TRUE if running in interrupt context.
+ * Parameters:
+ *	None
+ * Returns:
+ *	Boolean
+ */
+
+int
+sal_int_context(void)
+{
+    /* Must be provided by the virtual interrupt controller */
+    extern int intr_int_context(void) __attribute__((weak)); 
+    
+    if (intr_int_context) {
+        return intr_int_context();
+    } else {
+        return 0;
+    }
+}
+
+/*
+ * Function:
+ *	sal_no_sleep
+ * Purpose:
+ *	Return TRUE if current context cannot sleep.
+ * Parameters:
+ *	None
+ * Returns:
+ *	Boolean
+ */
+
+int
+sal_no_sleep(void)
+{
+    return 0;
+}
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/stats.c sdk-6.5.21.new/src/sal/core/linux/stats.c
--- sdk-6.5.21.origin/src/sal/core/linux/stats.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/stats.c	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,115 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * File:    stats.c
+ * Purpose: cpu occupation stats.
+ */
+
+
+#include <sys/types.h>
+#include <sal/core/stats.h>
+#include <sal/core/libc.h>
+
+#if defined(linux)
+#include <stdio.h>
+#endif
+
+
+#if defined(linux)
+STATIC uint64 sal_atouint64(CONST char *str){
+    uint64 val = COMPILER_64_INIT(0,0);
+
+    while(*str >= '0' && *str <= '9') {
+        COMPILER_64_UMUL_32(val, 10);
+        COMPILER_64_ADD_32(val, *str - '0');
+        ++str;
+    }
+    return val;
+}
+
+STATIC CONST char *advance_to_next_number(CONST char *str) {
+    while(*str && (*str < '0' || *str > '9')) {
+        ++str;
+    }
+    return (*str) ? str : NULL;
+}
+
+#define ADVANCE_TO_NEXT_NUMBER_RETURN_FALSE_ON_ERROR(_cur_location, _fp)\
+    _cur_location = advance_to_next_number(_cur_location);              \
+    if(!_cur_location) {                                                \
+        fclose(_fp);                                                    \
+        return FALSE;                                                   \
+    }
+
+#define TAKE_NUMBER_AND_ADVANCE(_str, _number)       \
+    _number = sal_atouint64(_str);                   \
+    while(*_str && (*_str >= '0' || *_str <= '9')) { \
+        ++_str;                                      \
+    }
+    
+
+int 
+sal_cpu_stats_get(sal_cpu_stats_t* cpu_stats)
+{
+    FILE* f;
+    uint64 nice = COMPILER_64_INIT(0,0);
+    uint64 iowait = COMPILER_64_INIT(0,0);
+    char line[200];
+    CONST char *seperator;
+    
+    COMPILER_64_ZERO(cpu_stats->user);
+    COMPILER_64_ZERO(cpu_stats->kernel);
+    COMPILER_64_ZERO(cpu_stats->idle);
+    COMPILER_64_ZERO(cpu_stats->total);
+    
+    if ((f=fopen("/proc/stat", "r" )) == NULL) {
+        return FALSE;
+    }
+
+    fgets(line, sizeof(line), f);
+    seperator = sal_strstr(line, "cpu");
+    if(!seperator) {
+        fclose(f);
+        return FALSE;
+    }
+
+    ADVANCE_TO_NEXT_NUMBER_RETURN_FALSE_ON_ERROR(seperator, f);
+    TAKE_NUMBER_AND_ADVANCE(seperator, cpu_stats->user);
+    ADVANCE_TO_NEXT_NUMBER_RETURN_FALSE_ON_ERROR(seperator, f);
+    TAKE_NUMBER_AND_ADVANCE(seperator, nice);
+    ADVANCE_TO_NEXT_NUMBER_RETURN_FALSE_ON_ERROR(seperator, f);
+    TAKE_NUMBER_AND_ADVANCE(seperator, cpu_stats->kernel);
+    ADVANCE_TO_NEXT_NUMBER_RETURN_FALSE_ON_ERROR(seperator, f);
+    TAKE_NUMBER_AND_ADVANCE(seperator, cpu_stats->idle);
+    ADVANCE_TO_NEXT_NUMBER_RETURN_FALSE_ON_ERROR(seperator, f);
+    TAKE_NUMBER_AND_ADVANCE(seperator, iowait);
+
+    fclose(f);
+    
+    COMPILER_64_ADD_64(cpu_stats->kernel, nice);
+    COMPILER_64_ADD_64(cpu_stats->kernel, iowait);
+
+    COMPILER_64_ADD_64(cpu_stats->total, cpu_stats->user);
+    COMPILER_64_ADD_64(cpu_stats->total, cpu_stats->idle);
+    COMPILER_64_ADD_64(cpu_stats->total, cpu_stats->kernel);
+
+    return TRUE;
+} /* sal_cpu_stats_get */
+
+#else
+
+int 
+sal_cpu_stats_get(sal_cpu_stats_t* cpu_stats)
+{
+    COMPILER_64_ZERO(cpu_stats->user);
+    COMPILER_64_ZERO(cpu_stats->kernel);
+    COMPILER_64_ZERO(cpu_stats->idle);
+    COMPILER_64_ZERO(cpu_stats->total);
+       
+    return FALSE;
+}
+#endif
+
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/sync.c sdk-6.5.21.new/src/sal/core/linux/sync.c
--- sdk-6.5.21.origin/src/sal/core/linux/sync.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/sync.c	2024-06-03 13:48:03.978757313 +0200
@@ -0,0 +1,1000 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * File: 	sync.c
+ * Purpose:	Defines sal routines for mutexes and semaphores
+ *
+ * Mutex and Binary Semaphore abstraction
+ *
+ * Note: the SAL mutex abstraction is required to allow the same mutex
+ * to be taken recursively by the same thread without deadlock.
+ *
+ * The POSIX mutex used here has been further abstracted to ensure this.
+ */
+
+#if defined(LINUX) || defined(linux) || defined(__linux__)
+#define _XOPEN_SOURCE 600
+#endif
+
+#include <sys/types.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <errno.h>
+#include <signal.h>
+#include <unistd.h>
+#include <signal.h>
+#include <pthread.h>
+#include <semaphore.h>
+#include <time.h>
+#include <sys/time.h>
+
+#include <assert.h>
+#include <sal/core/sync.h>
+#include <sal/core/thread.h>
+#include <sal/core/time.h>
+#include <sal/core/libc.h>
+
+#include <soc/dnxc/multithread_analyzer.h>
+
+#ifndef BCM_MONOTONIC_MUTEXES
+
+#if defined(LINUX) && defined(__USE_UNIX98)
+
+#define USE_POSIX_RECURSIVE_MUTEX
+
+#endif
+
+
+#if defined(_POSIX_TIMERS) && (_POSIX_TIMERS >= 200112L) && \
+        defined(_POSIX_TIMEOUTS) && (_POSIX_TIMEOUTS >= 200112L)
+/* Sometimes customers want to set new real time, so they must use monotic time.
+  * But if we define USE_POSIX_SEM_TIMEDWAIT or USE_POSIX_MUTEX_TIMEDLOCK,
+  * we will use real time, so we add this new Micro */
+#if !defined(BCM_MONOTONIC_TIME)
+#define USE_POSIX_SEM_TIMEDWAIT
+#define USE_POSIX_MUTEX_TIMEDLOCK
+#endif /*BCM_MONOTONIC_TIMER*/
+#endif
+
+#ifndef USE_POSIX_SPINLOCK
+#if defined(LINUX) && defined(__USE_XOPEN2K) && defined(__GLIBC__)
+#define USE_POSIX_SPINLOCK 1
+#else
+#define USE_POSIX_SPINLOCK 0
+#endif
+#endif
+
+#if defined (__STRICT_ANSI__)
+#define NO_CONTROL_C
+#endif
+
+#if defined(BCM_DNX_SUPPORT) || defined(BCM_DNXF_SUPPORT)
+#ifndef NO_CONTROL_C
+#define NO_CONTROL_C
+#endif /*NO_CONTROL_C*/
+#endif /*defined(BCM_DNX_SUPPORT) || defined(BCM_DNXF_SUPPORT)*/
+
+#ifndef SECOND_NSEC
+#define SECOND_NSEC     (SECOND_USEC * 1000)
+#endif
+
+#ifdef BROADCOM_DEBUG
+#ifdef INCLUDE_BCM_SAL_PROFILE
+static unsigned int _sal_sem_count_curr;
+static unsigned int _sal_sem_count_max;
+static unsigned int _sal_mutex_count_curr;
+static unsigned int _sal_mutex_count_max;
+#define SAL_SEM_RESOURCE_USAGE_INCR(a_curr, a_max, ilock)               \
+        a_curr++;                                                       \
+        a_max = ((a_curr) > (a_max)) ? (a_curr) : (a_max)
+    
+#define SAL_SEM_RESOURCE_USAGE_DECR(a_curr, ilock)                      \
+        a_curr--
+
+/*
+ * Function:
+ *      sal_sem_resource_usage_get
+ * Purpose:
+ *      Provides count of active sem and maximum sem allocation
+ * Parameters:
+ *      sem_curr - Current semaphore allocation.
+ *      sem_max - Maximum semaphore allocation.
+ */
+
+void
+sal_sem_resource_usage_get(unsigned int *sem_curr, unsigned int *sem_max)
+{
+    if (sem_curr != NULL) {
+        *sem_curr = _sal_sem_count_curr;
+    }
+    if (sem_max != NULL) {
+        *sem_max = _sal_sem_count_max;
+    }
+}
+
+/*
+ * Function:
+ *      sal_mutex_resource_usage_get
+ * Purpose:
+ *      Provides count of active mutex and maximum mutex allocation
+ * Parameters:
+ *      mutex_curr - Current mutex allocation.
+ *      mutex_max - Maximum mutex allocation.
+ */
+
+void
+sal_mutex_resource_usage_get(unsigned int *mutex_curr, unsigned int *mutex_max)
+{
+    if (mutex_curr != NULL) {
+        *mutex_curr = _sal_mutex_count_curr;
+    }
+    if (mutex_max != NULL) {
+        *mutex_max = _sal_mutex_count_max;
+    }
+}
+#endif
+#endif
+
+/*
+ * Keyboard interrupt protection
+ *
+ *   When a thread is running on a console, the user could Control-C
+ *   while a mutex is held by the thread.  Control-C results in a signal
+ *   that longjmp's somewhere else.  We prevent this from happening by
+ *   blocking Control-C signals while any mutex is held.
+ */
+
+#ifndef NO_CONTROL_C
+static int ctrl_c_depth = 0;
+int ctrl_c_blocked = 0;
+static sigset_t ctrl_c_sigset;
+static int ctrl_c_initialized;
+static sal_thread_t main_thread = SAL_THREAD_ERROR;
+#endif
+
+
+static void
+ctrl_c_block(void)
+{
+#ifndef NO_CONTROL_C
+    if (main_thread == SAL_THREAD_ERROR) {
+        main_thread = sal_thread_main_get();
+    }
+    if (sal_thread_self() == main_thread) {
+	if (ctrl_c_depth++ == 0) {
+	    sigprocmask(SIG_BLOCK, &ctrl_c_sigset, NULL);
+        ctrl_c_blocked = 1;
+	}
+    }
+#endif    
+}
+
+static void
+ctrl_c_unblock(void)
+{
+#ifndef NO_CONTROL_C
+    if (main_thread == SAL_THREAD_ERROR) {
+        main_thread = sal_thread_main_get();
+    }
+    if (sal_thread_self() == main_thread) {
+	assert(ctrl_c_depth > 0);
+	if (--ctrl_c_depth == 0) {
+	    sigprocmask(SIG_UNBLOCK, &ctrl_c_sigset, NULL);
+        ctrl_c_blocked = 0;
+	}
+    }
+#endif
+}
+
+#if defined(USE_POSIX_SEM_TIMEDWAIT) || defined(USE_POSIX_MUTEX_TIMEDLOCK)
+static
+int
+_sal_compute_timeout(struct timespec *ts, int usec)
+{
+    int sec;
+    uint32 nsecs;
+
+#ifdef CLOCK_REALTIME
+    if (clock_gettime(CLOCK_REALTIME, ts) == 0) {
+        ;
+    }
+    else
+#endif
+    {
+        struct timeval	ltv;
+
+        /* Fall back to RTC if realtime clock unavailable */
+        gettimeofday(&ltv, 0);
+        ts->tv_sec = ltv.tv_sec;
+        ts->tv_nsec = ltv.tv_usec * 1000;
+    }
+    /* Add in the delay */
+    ts->tv_sec += usec / SECOND_USEC;
+
+    /* compute new nsecs */
+    nsecs = ts->tv_nsec + (usec % SECOND_USEC) * 1000;
+
+    /* detect and handle rollover */
+    if (nsecs < ts->tv_nsec) {
+        ts->tv_sec += 1;
+        nsecs -= SECOND_NSEC;
+    }
+    ts->tv_nsec = nsecs;
+
+    /* Normalize if needed */
+    sec = ts->tv_nsec / SECOND_NSEC;
+    if (sec) {
+        ts->tv_sec += sec;
+        ts->tv_nsec = ts->tv_nsec % SECOND_NSEC;
+    }
+
+    /* indicate that we successfully got the time */
+    return 1;
+}
+#endif
+
+/*
+ * recursive_mutex_t
+ *
+ *   This is an abstract type built on the POSIX mutex that allows a
+ *   mutex to be taken recursively by the same thread without deadlock.
+ *
+ *   The Linux version of pthreads supports recursive mutexes
+ *   (a non-portable extension to posix). In this case, we 
+ *   use the Linux support instead of our own. 
+ */
+
+typedef struct recursive_mutex_s {
+    pthread_mutex_t	mutex;
+    char		*desc;
+#ifndef USE_POSIX_RECURSIVE_MUTEX
+    sal_thread_t	owner;
+    int			recurse_count;
+#endif
+
+#ifdef BROADCOM_DEBUG_MUTEX
+#define FILE_LOC_NAME_MAX 128
+    unsigned int ctrl_c_blk;
+    unsigned int take_count;
+    unsigned int give_count;
+    unsigned int tk_exc_gv_ind;
+    char         prev_file_tk_location[FILE_LOC_NAME_MAX];
+    char         last_file_tk_location[FILE_LOC_NAME_MAX];
+
+    char         prev_file_gv_location[FILE_LOC_NAME_MAX];
+    char         last_file_gv_location[FILE_LOC_NAME_MAX];
+#endif
+
+} recursive_mutex_t;
+
+
+#ifdef BROADCOM_DEBUG_MUTEX
+
+#include "string.h"
+
+#define MUTEX_DBG_ARR_MAX 5000
+static recursive_mutex_t *mutex_dbg_arr_ptr[MUTEX_DBG_ARR_MAX] = {0};
+
+/*If you want to set GDB on a breakpoint for certain events */
+void sal_mutext_dbg_break(void)
+{
+    printf("\nGot Debugger Break Function Indication. Examine Call Stack Now\n");
+}
+
+int sal_mutex_take_intern(sal_mutex_t m, int usec);
+int sal_mutex_give_intern(sal_mutex_t m);
+
+int sal_mutex_take_bcm_debug(sal_mutex_t m, int usec, const char *take_loc, int line)
+{
+    char lineNum[8] = {'\0'};
+    int retVal;
+    recursive_mutex_t	*rm = (recursive_mutex_t *) m;
+    assert(rm);
+
+    retVal = sal_mutex_take_intern(m, usec);
+
+    rm->take_count++;
+
+    sprintf(lineNum, ":%d", line);
+	strncpy(rm->prev_file_tk_location, rm->last_file_tk_location, FILE_LOC_NAME_MAX - 6);
+	strncpy(rm->last_file_tk_location, take_loc, FILE_LOC_NAME_MAX - 6);
+    strcat(rm->last_file_tk_location, lineNum); 
+
+   /* Detect recursion usage and flag*/
+    if (rm->take_count > rm->give_count + 1 && !rm->tk_exc_gv_ind) {
+        rm->tk_exc_gv_ind = 1; /* Only print first occurence */
+        printf ("\nMTX TK:%d EXCEEDS GV:%d\n", rm->take_count, rm->give_count);
+        printf ("AT: Last Loc:%s  Prev Loc: %s",
+                rm->last_file_tk_location, rm->prev_file_tk_location);
+        sal_mutext_dbg_break();
+    }
+
+    return retVal;
+}
+
+
+int sal_mutex_give_bcm_debug(sal_mutex_t m, const char *give_loc, int line)
+{
+    char lineNum[8] = {'\0'};
+    recursive_mutex_t	*rm = (recursive_mutex_t *) m;
+    assert(rm);
+    rm->give_count++;
+
+    sprintf(lineNum, ":%d", line);
+	strncpy(rm->prev_file_gv_location, rm->last_file_gv_location, FILE_LOC_NAME_MAX - 6);
+	strncpy(rm->last_file_gv_location, give_loc, FILE_LOC_NAME_MAX - 6);
+    strcat(rm->last_file_gv_location, lineNum);
+
+    if (rm->give_count > rm->take_count) {
+        printf ("\nERROR: MTX GV:%d EXCEEDS TK:%d\n", rm->give_count, rm->take_count);
+        sal_mutext_dbg_break();
+    }
+
+    return sal_mutex_give_intern(m);
+}
+
+
+void sal_mutex_dbg_dump(void)
+{
+    int i = 0;
+    char temp_ch;
+
+    for (i = 0; i < MUTEX_DBG_ARR_MAX; i++) {
+        /* Find nonempty slots */
+        if (mutex_dbg_arr_ptr[i] != 0) {
+            recursive_mutex_t *rm = mutex_dbg_arr_ptr[i];
+
+
+            /* If MUTEX was created but never taken or given don't display it */
+            if (rm->take_count || rm->give_count) {
+                printf ("\n\nMUTEX STATS[%d]  For:%s  Owner:ox%x CTRL_C_Depth:%d\n", 
+                        i, rm->desc, (unsigned int)rm->owner, rm->ctrl_c_blk);
+
+                printf("\nT_CNT:%d G_CNT:%d \nPREV_T_LOC:%s  LST_T_LOC:%s\nPREV_G_LOC:%s  LST_G_LOC:%s", 
+                       rm->take_count, rm->give_count,
+                       rm->prev_file_tk_location, rm->last_file_tk_location,
+                       rm->prev_file_gv_location, rm->last_file_gv_location);
+            }
+
+            if (rm->ctrl_c_blk > 0) {
+                printf ("\nWARNING: CTRL_C Left DISABLED??");
+                temp_ch = getchar(); /*Pause  */
+            }
+ 
+            if (rm->take_count != rm->give_count) {
+                printf ("\nWARNING: Take != Give");
+                temp_ch = getchar(); /*Pause  */
+            }
+        }
+    }
+}
+
+
+
+#endif
+
+
+#ifdef netbsd
+/*
+ * The netbsd pthreads implementation we are using
+ * does not seem to have his function
+ */
+static int
+pthread_mutexattr_init(pthread_mutexattr_t* attr)
+{
+    attr->m_type = PTHREAD_MUTEXTYPE_DEBUG;
+    attr->m_flags = 0;
+    return 0;
+}
+
+#endif /* netbsd */
+
+static sal_mutex_t
+_sal_mutex_create(char *desc)
+{
+    recursive_mutex_t	*rm;
+    pthread_mutexattr_t attr;
+
+#ifdef BROADCOM_DEBUG_MUTEX
+    int i = 0;
+#endif
+
+#ifndef NO_CONTROL_C
+    if (!ctrl_c_initialized) {
+        sigemptyset(&ctrl_c_sigset);
+        sigaddset(&ctrl_c_sigset, SIGINT);
+        ctrl_c_initialized = 1;
+    }
+#endif
+    
+    if ((rm = malloc(sizeof (recursive_mutex_t))) == NULL) {
+	return NULL;
+    }
+
+    rm->desc = desc;
+    pthread_mutexattr_init(&attr);
+#ifdef USE_POSIX_RECURSIVE_MUTEX
+    pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_RECURSIVE);
+#else
+    rm->owner = 0;
+    rm->recurse_count = 0;
+
+#ifdef BROADCOM_DEBUG_MUTEX
+    rm->ctrl_c_blk = 0;
+    rm->take_count = 0;
+    rm->give_count = 0;
+    rm->tk_exc_gv_ind = 0;
+
+    for (i = 0; i < FILE_LOC_NAME_MAX; i++) {
+        rm->prev_file_tk_location[i] = '\0';
+        rm->last_file_tk_location[i] = '\0';
+
+        rm->prev_file_gv_location[i] = '\0';
+        rm->last_file_gv_location[i] = '\0';
+    }
+
+    for (i = 0; i < MUTEX_DBG_ARR_MAX; i++) {
+        /* Find an empty slot */
+        if (mutex_dbg_arr_ptr[i] == 0) {
+            mutex_dbg_arr_ptr[i] = rm;
+            break;
+        }
+    }
+
+#endif
+
+#endif
+
+    pthread_mutex_init(&rm->mutex, &attr);
+
+#ifdef BROADCOM_DEBUG
+#ifdef INCLUDE_BCM_SAL_PROFILE
+        SAL_SEM_RESOURCE_USAGE_INCR(
+            _sal_mutex_count_curr,
+            _sal_mutex_count_max,
+            ilock);
+#endif
+#endif
+    return (sal_mutex_t) rm;
+}
+
+/*
+ * Mutex and semaphore abstraction
+ */
+
+sal_mutex_t
+sal_mutex_create(char *desc)
+{
+#ifdef SAL_GLOBAL_MUTEX
+    static sal_mutex_t _m = NULL;
+    if (!_m) {
+	_m = _sal_mutex_create("sal_global_mutex");
+	assert(_m);
+    }
+    if (strcmp(desc, "spl mutex")) {
+	return _m;
+    }
+#endif
+    return _sal_mutex_create(desc);
+
+}
+
+void
+sal_mutex_destroy(sal_mutex_t m)
+{
+    recursive_mutex_t	*rm = (recursive_mutex_t *) m;
+
+#ifdef BROADCOM_DEBUG_MUTEX
+    int i;
+#endif
+
+    assert(rm);
+
+#ifndef USE_POSIX_RECURSIVE_MUTEX
+    /* Check for pending mutex unlocks */
+    if ((rm->recurse_count > 0) || (rm->owner != 0)) {
+        char thread_name[SAL_THREAD_NAME_MAX_LEN];
+        sal_thread_name(rm->owner, thread_name, sizeof (thread_name));
+        printf("WARNING: Mutex \"%s\" has not been unlocked before being destroyed.\n",
+                        rm->desc);
+        printf("\t Current owner is \"%s\"(%p) \n", thread_name, (void*)rm->owner);
+    }
+#ifdef SAL_MUTEX_DEBUG
+    assert(rm->recurse_count == 0);
+    assert(rm->owner == 0);
+#endif /* SAL_MUTEX_DEBUG */
+
+#ifdef BROADCOM_DEBUG_MUTEX
+    assert(rm->take_count == rm->give_count);
+
+    for (i = 0; i < FILE_LOC_NAME_MAX; i++) {
+        rm->prev_file_tk_location[i] = '\0';
+        rm->last_file_tk_location[i] = '\0';
+
+        rm->prev_file_gv_location[i] = '\0';
+        rm->last_file_gv_location[i] = '\0';
+    }
+
+    for (i = 0; i < MUTEX_DBG_ARR_MAX; i++) {
+        /* Find it's slot and mark empty*/
+        if (mutex_dbg_arr_ptr[i] == rm) {
+            mutex_dbg_arr_ptr[i] = 0;
+            break;
+        }
+    }
+
+#endif
+
+#endif /* !USE_POSIX_RECURSIVE_MUTEX */
+
+    pthread_mutex_destroy(&rm->mutex);
+
+    free(rm);
+
+#ifdef BROADCOM_DEBUG
+#ifdef INCLUDE_BCM_SAL_PROFILE
+        SAL_SEM_RESOURCE_USAGE_DECR(
+            _sal_mutex_count_curr,
+            ilock);
+#endif
+#endif
+}
+
+int
+#ifdef BROADCOM_DEBUG_MUTEX
+sal_mutex_take_intern(sal_mutex_t m, int usec)
+#else
+sal_mutex_take(sal_mutex_t m, int usec)
+#endif
+{
+    recursive_mutex_t	*rm = (recursive_mutex_t *) m;
+    int			err = 0;
+
+#ifndef USE_POSIX_RECURSIVE_MUTEX
+    sal_thread_t	myself = sal_thread_self();
+#endif
+
+#ifdef USE_POSIX_MUTEX_TIMEDLOCK
+    struct timespec	ts;
+#endif
+
+    assert(rm);
+
+    
+    DNXC_MTA(dnxc_multithread_analyzer_declare_api_in_play(0, rm->desc, MTA_FLAG_MUTEX, 1));
+
+#ifndef USE_POSIX_RECURSIVE_MUTEX
+    if (rm->owner == myself) {
+
+        rm->recurse_count++;
+
+        return 0;
+    }
+
+#endif
+
+    ctrl_c_block();
+
+#ifdef BROADCOM_DEBUG_MUTEX
+    rm->ctrl_c_blk++;
+#endif
+
+    if (usec == sal_mutex_FOREVER) {
+        do {
+            err = pthread_mutex_lock(&rm->mutex);
+        } while (err != 0 && errno == EINTR);
+    }
+
+#ifdef USE_POSIX_MUTEX_TIMEDLOCK
+    else if (_sal_compute_timeout(&ts, usec)) {
+        /* Treat EAGAIN as a fatal error on Linux */
+        err = pthread_mutex_timedlock(&rm->mutex, &ts);
+    }
+#else
+    else {
+        int		time_wait = 1;
+
+        /* Retry algorithm with exponential backoff */
+
+        for (;;) {
+            err = pthread_mutex_trylock(&rm->mutex);
+
+            if (err != EBUSY) {
+                break;		/* Done (0), or error other than EBUSY */
+            }
+
+            if (time_wait > usec) {
+                time_wait = usec;
+            }
+
+            sal_usleep(time_wait);
+
+            usec -= time_wait;
+
+            if (usec == 0) {
+                err = ETIMEDOUT;
+                break;
+            }
+
+            if ((time_wait *= 2) > 100000) {
+                time_wait = 100000;
+            }
+        }
+    }
+#endif
+
+    if (err) {
+        ctrl_c_unblock();
+
+#ifdef BROADCOM_DEBUG_MUTEX
+        printf("\n\nERROR in TAKING MUTEX \n\n");
+        rm->ctrl_c_blk--;
+#endif
+        if (err != ETIMEDOUT) {
+            fprintf(stderr, "sal_mutex_take: %s\n", strerror(err));
+        }
+        assert(usec != sal_mutex_FOREVER);
+
+        return -1;
+    }
+
+#ifndef USE_POSIX_RECURSIVE_MUTEX
+    assert(rm->owner == 0);
+    rm->owner = myself;
+#endif
+ 
+    return 0;
+}
+
+
+
+int
+#ifdef BROADCOM_DEBUG_MUTEX
+sal_mutex_give_intern(sal_mutex_t m)
+#else
+sal_mutex_give(sal_mutex_t m)
+#endif
+{
+    recursive_mutex_t	*rm = (recursive_mutex_t *) m;
+    int			err;
+
+    assert(rm);
+
+    
+    DNXC_MTA(dnxc_multithread_analyzer_declare_api_in_play(0, rm->desc, MTA_FLAG_MUTEX, 0));
+
+#ifndef USE_POSIX_RECURSIVE_MUTEX
+    if ((rm->owner != sal_thread_self())) {
+        assert(rm->owner == sal_thread_self());
+    }
+
+    if (rm->recurse_count > 0) {
+        rm->recurse_count--;
+        return 0;
+    }
+
+    rm->owner = 0;
+#endif
+
+
+    err = pthread_mutex_unlock(&rm->mutex);
+    ctrl_c_unblock();
+
+#ifdef BROADCOM_DEBUG_MUTEX
+    rm->ctrl_c_blk--;
+#endif
+
+    if (err) {
+        fprintf(stderr, "sal_mutex_give: %s\n", strerror(err));
+    }
+    assert(err == 0);
+
+    return err ? -1 : 0;
+}
+
+
+/*
+ * Wrapper class to hold additional info
+ * along with the semaphore.
+ */
+typedef struct {
+    sem_t       s;
+    char        *desc;
+    int         binary;
+} wrapped_sem_t;
+
+sal_sem_t
+sal_sem_create(char *desc, int binary, int initial_count)
+{
+    wrapped_sem_t *s = NULL;
+
+    if ((s = malloc(sizeof (wrapped_sem_t))) == NULL) {
+        return NULL;
+    }
+
+    /* 
+     * This is needed by some libraries with a bug requiring to zero sem_t before calling sem_init(),
+     * even though this it is not required by the function description.
+     * Threads using sem_timedwait() to maintain polling interval use 100% CPU if we not set the memory to zero SDK-77724 
+     */ 
+    sal_memset(s, 0, sizeof(wrapped_sem_t));
+
+    sem_init(&s->s, 0, initial_count);
+    s->desc = desc;
+    s->binary = binary;
+
+#ifdef BROADCOM_DEBUG
+#ifdef INCLUDE_BCM_SAL_PROFILE
+        SAL_SEM_RESOURCE_USAGE_INCR(
+            _sal_sem_count_curr,
+            _sal_sem_count_max,
+            ilock);
+#endif
+#endif
+
+    return (sal_sem_t) s;
+}
+
+void
+sal_sem_destroy(sal_sem_t b)
+{
+    wrapped_sem_t *s = (wrapped_sem_t *) b;
+
+    assert(s);
+
+    sem_destroy(&s->s);
+
+    free(s);
+
+#ifdef BROADCOM_DEBUG
+#ifdef INCLUDE_BCM_SAL_PROFILE
+        SAL_SEM_RESOURCE_USAGE_DECR(
+            _sal_sem_count_curr,
+            ilock);
+#endif
+#endif
+}
+
+int
+sal_sem_take(sal_sem_t b, int usec)
+{
+    wrapped_sem_t		*s = (wrapped_sem_t *) b;
+    int			err = 0;
+#ifdef USE_POSIX_SEM_TIMEDWAIT
+    struct timespec	ts;
+#endif
+
+    if (s == NULL) {
+        return 0;
+    }
+
+    if ((usec < 0) && (usec != sal_sem_FOREVER)) {
+        /* Return error if negative timeout is specified */
+        return -1;
+    }
+
+    if (usec == sal_sem_FOREVER) {
+        do {
+            err = sem_wait(&s->s);
+        } while (err != 0 && errno == EINTR);
+    }
+#ifdef USE_POSIX_SEM_TIMEDWAIT
+    else if (_sal_compute_timeout(&ts, usec)) {
+        while (1) {
+            if (!sem_timedwait(&s->s, &ts)) {
+                err = 0;
+                break;
+            }
+            if (errno != EAGAIN && errno != EINTR) {
+                err = errno;
+                break;
+            }
+        }
+    }
+#else
+    else {
+	int		time_wait = 1;
+
+	/* Retry algorithm with exponential backoff */
+
+	for (;;) {
+	    if (sem_trywait(&s->s) == 0) {
+		err = 0;
+		break;
+	    }
+
+	    if (errno != EAGAIN && errno != EINTR) {
+		err = errno;
+		break;
+	    }
+
+	    if (time_wait > usec) {
+		time_wait = usec;
+	    }
+
+	    sal_usleep(time_wait);
+
+	    usec -= time_wait;
+
+	    if (usec == 0) {
+		err = ETIMEDOUT;
+		break;
+	    }
+
+#ifdef BCM_MONOTONIC_TIME
+        /* To reduce CPU share for some threads */
+        if ((time_wait *= 4) > 100000) {
+            time_wait = 100000;
+        }
+#else
+        if ((time_wait *= 2) > 100000) {
+            time_wait = 100000;
+        }
+#endif
+	}
+    }
+#endif
+
+    return err ? -1 : 0;
+}
+
+int
+sal_sem_give(sal_sem_t b)
+{
+    wrapped_sem_t       *s = (wrapped_sem_t *) b;
+    int                 err = 0;
+    int                 sem_val = 0;
+
+    if (s == NULL) {
+        return 0;
+    }
+
+    /* Binary sem only post if sem_val == 0 */
+    if (s->binary) {
+        /* Post sem on getvalue failure */
+        sem_getvalue(&s->s, &sem_val);
+        if (sem_val == 0) {
+            err = sem_post(&s->s);
+        }
+    } else {
+        err = sem_post(&s->s);
+    }
+
+    return err ? -1 : 0;
+}
+
+#endif /* BCM_MONOTONIC_MUTEXES */
+
+/*
+ * spinlock_ctrl_t
+ *
+ *   This is an abstract type built on the POSIX spinlock.
+ */
+
+#if USE_POSIX_SPINLOCK
+typedef struct spinlock_ctrl_s {
+    pthread_spinlock_t spinlock;
+    char *desc;
+} *spinlock_ctrl_t;
+#endif
+
+/*
+ * Function:
+ *  sal_spinlock_create
+ * Purpose:
+ *  Create a spinlock
+ * Parameters:
+ *  desc - spinlock description
+ * Returns:
+ *  The spinlock or NULL if creation failed
+ */
+
+sal_spinlock_t
+sal_spinlock_create(char *desc)
+{
+#if USE_POSIX_SPINLOCK
+    spinlock_ctrl_t sl = malloc(sizeof(*sl));
+    int result;
+
+    if (sl != NULL) {
+        result = pthread_spin_init(&(sl->spinlock), PTHREAD_PROCESS_SHARED);
+        if (result != 0) {
+            free(sl);
+            return (sal_spinlock_t)NULL;
+        }
+        sl->desc = desc;
+    }
+    return (sal_spinlock_t)sl;
+#else
+    return (sal_spinlock_t)sal_mutex_create(desc);
+#endif
+}
+
+/*
+ * Function:
+ *  sal_spinlock_destroy
+ * Purpose:
+ *  Destroy a spinlock
+ * Parameters:
+ *  lock - spinlock to destroy
+ * Returns:
+ *  0 on success, error code on failure
+ */
+
+int
+sal_spinlock_destroy(sal_spinlock_t lock)
+{
+#if USE_POSIX_SPINLOCK
+    spinlock_ctrl_t sl = (spinlock_ctrl_t)lock;
+    int result;
+
+    assert(sl);
+    result = pthread_spin_destroy(&sl->spinlock);
+    free(sl);
+    return result;
+#else
+    sal_mutex_destroy((sal_mutex_t)lock);
+    return 0;
+#endif
+}
+
+/*
+ * Function:
+ *  sal_spinlock_lock
+ * Purpose:
+ *  Obtains a spinlock
+ * Parameters:
+ *  lock - spninlock to obtain
+ * Returns:
+ *  0 on success, error code on failure
+ */
+
+int
+sal_spinlock_lock(sal_spinlock_t lock)
+{
+#if USE_POSIX_SPINLOCK
+    spinlock_ctrl_t sl = (spinlock_ctrl_t)lock;
+    struct timeval tv;
+
+    assert(sl);
+    /* On some systems pthread_spin_lock() is unsafe and won't block preemption,
+       which could lead to deadlock. So here pthread_spin_trylock() is used instead
+       to avoid this kind of issue. */
+    while (pthread_spin_trylock(&sl->spinlock)) {
+        tv.tv_sec = 0;
+        tv.tv_usec = SECOND_USEC / sysconf(_SC_CLK_TCK);
+        select(0, (fd_set *)0, (fd_set *)0, (fd_set *)0, &tv);
+    }
+    return 0;
+#else
+    return sal_mutex_take((sal_mutex_t)lock, sal_mutex_FOREVER);
+#endif
+}
+
+/*
+ * Function:
+ *  sal_spinlock_unlock
+ * Purpose:
+ *  Releases a spinlock
+ * Parameters:
+ *  lock - spinlock to release
+ * Returns:
+ *  0 on success, error code on failure
+ */
+
+int
+sal_spinlock_unlock(sal_spinlock_t lock)
+{
+#if USE_POSIX_SPINLOCK
+    spinlock_ctrl_t sl = (spinlock_ctrl_t)lock;
+
+    assert(sl);
+    return pthread_spin_unlock(&sl->spinlock);
+#else
+    return sal_mutex_give((sal_mutex_t)lock);
+#endif
+}
+
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/sync_monotonic.c sdk-6.5.21.new/src/sal/core/linux/sync_monotonic.c
--- sdk-6.5.21.origin/src/sal/core/linux/sync_monotonic.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/sync_monotonic.c	2024-06-03 13:48:03.978757313 +0200
@@ -0,0 +1,678 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * File:    sync_monotonic.c
+ * Purpose: Defines sal routines for mutexes and semaphores using more modern
+ *          condition variables and the monotonic clock.
+ *
+ * Mutex and Binary Semaphore abstraction
+ *
+ * Note: the SAL mutex abstraction is required to allow the same mutex
+ * to be taken recursively by the same thread without deadlock.
+ *
+ * The POSIX mutex used here has been further abstracted to ensure this.
+ */
+
+#if defined(LINUX) || defined(linux) || defined(__linux__)
+#define _XOPEN_SOURCE 600
+#endif
+
+#include <sys/types.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <errno.h>
+#include <signal.h>
+#include <unistd.h>
+#include <signal.h>
+#include <pthread.h>
+#include <semaphore.h>
+#include <time.h>
+#include <sys/time.h>
+
+#include <assert.h>
+#include <sal/core/sync.h>
+#include <sal/core/thread.h>
+#include <sal/core/time.h>
+
+#ifdef BCM_MONOTONIC_MUTEXES
+
+#if defined (__STRICT_ANSI__)
+#define NO_CONTROL_C
+#endif
+
+#ifndef SECOND_NSEC
+#define SECOND_NSEC     (SECOND_USEC * 1000)
+#endif
+
+#if defined(BROADCOM_DEBUG) && defined(INCLUDE_BCM_SAL_PROFILE)
+#include "string.h"
+
+static unsigned int _sal_sem_count_curr;
+static unsigned int _sal_sem_count_max;
+static unsigned int _sal_mutex_count_curr;
+static unsigned int _sal_mutex_count_max;
+
+#define FILE_LOC_NAME_MAX 128
+#define MUTEX_DBG_ARR_MAX 5000
+#define DEBUG_SAL_PROFILE 1
+
+#define SAL_SEM_RESOURCE_USAGE_INCR(a_curr, a_max)             \
+    do {                                                       \
+        a_curr++;                                              \
+        a_max = ((a_curr) > (a_max)) ? (a_curr) : (a_max);     \
+    } while (0)
+    
+#define SAL_SEM_RESOURCE_USAGE_DECR(a_curr) \
+    do {                                    \
+      a_curr--;                             \
+    } while(0)
+
+#else
+#define SAL_SEM_RESOURCE_USAGE_INCR(a_curr, a_max)  ;
+#define SAL_SEM_RESOURCE_USAGE_DECR(a_curr)         ;
+#endif
+
+#ifdef DEBUG_SAL_PROFILE
+/*
+ * Function:
+ *      sal_sem_resource_usage_get
+ * Purpose:
+ *      Provides count of active sem and maximum sem allocation
+ * Parameters:
+ *      sem_curr - Current semaphore allocation.
+ *      sem_max - Maximum semaphore allocation.
+ */
+
+void
+sal_sem_resource_usage_get(unsigned int *sem_curr, unsigned int *sem_max)
+{
+    if (sem_curr != NULL) {
+        *sem_curr = _sal_sem_count_curr;
+    }
+    if (sem_max != NULL) {
+        *sem_max = _sal_sem_count_max;
+    }
+}
+
+/*
+ * Function:
+ *      sal_mutex_resource_usage_get
+ * Purpose:
+ *      Provides count of active mutex and maximum mutex allocation
+ * Parameters:
+ *      mutex_curr - Current mutex allocation.
+ *      mutex_max - Maximum mutex allocation.
+ */
+
+void
+sal_mutex_resource_usage_get(unsigned int *mutex_curr, unsigned int *mutex_max)
+{
+    if (mutex_curr != NULL) {
+        *mutex_curr = _sal_mutex_count_curr;
+    }
+    if (mutex_max != NULL) {
+        *mutex_max = _sal_mutex_count_max;
+    }
+}
+#endif /* DEBUG_SAL_PROFILE */
+
+/*
+ * Keyboard interrupt protection
+ *
+ *   When a thread is running on a console, the user could Control-C
+ *   while a mutex is held by the thread.  Control-C results in a signal
+ *   that longjmp's somewhere else.  We prevent this from happening by
+ *   blocking Control-C signals while any mutex is held.
+ */
+
+#ifndef NO_CONTROL_C
+
+static int ctrl_c_depth = 0;
+int ctrl_c_blocked = 0;
+static sigset_t ctrl_c_sigset;
+static int ctrl_c_initialized;
+
+static void 
+ctrl_c_block(void)
+{
+    if (sal_thread_self() == sal_thread_main_get()) {
+        if (ctrl_c_depth++ == 0) {
+            sigprocmask(SIG_BLOCK, &ctrl_c_sigset, NULL);
+            ctrl_c_blocked = 1;
+        }
+    }
+}
+
+static void
+ctrl_c_unblock(void)
+{
+    if (sal_thread_self() == sal_thread_main_get()) {
+        assert(ctrl_c_depth > 0);
+        if (--ctrl_c_depth == 0) {
+            sigprocmask(SIG_UNBLOCK, &ctrl_c_sigset, NULL);
+            ctrl_c_blocked = 0;
+        }
+    }
+}
+
+static void _init_ctrl_c() {
+    if (!ctrl_c_initialized) {
+        sigemptyset(&ctrl_c_sigset);
+        sigaddset(&ctrl_c_sigset, SIGINT);
+        ctrl_c_initialized = 1;
+    }
+}
+
+#else /* NO_CONTROL_C is defined */
+
+static void ctrl_c_block(void)
+{
+}
+
+static void ctrl_c_unblock(void)
+{
+}
+
+static void _init_ctrl_c(void) 
+{
+}
+
+#endif /* NO_CONTROL_C */
+
+static int
+_sal_compute_timeout(struct timespec *ts, int usec)
+{
+    int sec;
+    uint32 nsecs;
+
+    if (clock_gettime(CLOCK_MONOTONIC, ts)) {
+        if (clock_gettime(CLOCK_REALTIME, ts)) {
+            struct timeval  ltv;
+
+            /* Fall back to RTC if realtime clock unavailable */
+            gettimeofday(&ltv, 0);
+            ts->tv_sec = ltv.tv_sec;
+            ts->tv_nsec = ltv.tv_usec * 1000;
+        }
+    }
+
+    /* Add in the delay */
+    ts->tv_sec += usec / SECOND_USEC;
+
+    /* compute new nsecs */
+    nsecs = ts->tv_nsec + (usec % SECOND_USEC) * 1000;
+
+    /* detect and handle rollover */
+    if (nsecs < ts->tv_nsec) {
+        ts->tv_sec += 1;
+        nsecs -= SECOND_NSEC;
+    }
+    ts->tv_nsec = nsecs;
+
+    /* Normalize if needed */
+    sec = ts->tv_nsec / SECOND_NSEC;
+    if (sec) {
+        ts->tv_sec += sec;
+        ts->tv_nsec = ts->tv_nsec % SECOND_NSEC;
+    }
+
+    /* indicate that we successfully got the time */
+    return 1;
+}
+
+/*
+ * recursive_mutex_t
+ *
+ *   This is an abstract type built on the POSIX mutex that allows a
+ *   mutex to be taken recursively by the same thread without deadlock.
+ *
+ *   The Linux version of pthreads supports recursive mutexes
+ *   (a non-portable extension to posix). In this case, we 
+ *   use the Linux support instead of our own. 
+ */
+
+typedef struct recursive_mutex_s {
+    int             val;
+    pthread_mutex_t mutex;
+    pthread_cond_t  cond;
+    char            *desc;
+    sal_thread_t    owner;
+    int             recurse_count;
+
+#ifdef BROADCOM_DEBUG_MUTEX
+    unsigned int ctrl_c_blk;
+    unsigned int take_count;
+    unsigned int give_count;
+    unsigned int tk_exc_gv_ind;
+    char         prev_file_tk_location[FILE_LOC_NAME_MAX];
+    char         last_file_tk_location[FILE_LOC_NAME_MAX];
+
+    char         prev_file_gv_location[FILE_LOC_NAME_MAX];
+    char         last_file_gv_location[FILE_LOC_NAME_MAX];
+#endif
+
+} recursive_mutex_t;
+
+
+#ifdef BROADCOM_DEBUG_MUTEX
+
+static recursive_mutex_t *mutex_dbg_arr_ptr[MUTEX_DBG_ARR_MAX] = {0};
+
+/*If you want to set GDB on a breakpoint for certain events */
+void sal_mutext_dbg_break(void)
+{
+    sal_printf("\nGot Debugger Break Function Indication. Examine Call Stack Now\n");
+}
+
+int sal_mutex_take_intern(sal_mutex_t m, int usec);
+int sal_mutex_give_intern(sal_mutex_t m);
+
+int sal_mutex_take_bcm_debug(sal_mutex_t m, int usec, const char *take_loc, 
+                             int line)
+{
+    char lineNum[8] = {'\0'};
+    int retVal;
+    recursive_mutex_t   *rm = (recursive_mutex_t *) m;
+    assert(rm);
+
+    retVal = sal_mutex_take_intern(m, usec);
+
+    rm->take_count++;
+
+    sal_sprintf(lineNum, ":%d", line);
+    sal_strncpy(rm->prev_file_tk_location, rm->last_file_tk_location, 
+                FILE_LOC_NAME_MAX - 6);
+    sal_strncpy(rm->last_file_tk_location, take_loc, FILE_LOC_NAME_MAX - 6);
+    sal_strcat(rm->last_file_tk_location, lineNum); 
+
+   /* Detect recursion usage and flag*/
+    if (rm->take_count > rm->give_count + 1 && !rm->tk_exc_gv_ind) {
+        rm->tk_exc_gv_ind = 1; /* Only print first occurence */
+        sal_printf ("\nMTX TK:%d EXCEEDS GV:%d\n", rm->take_count, 
+                    rm->give_count);
+        sal_printf ("AT: Last Loc:%s  Prev Loc: %s",
+                rm->last_file_tk_location, rm->prev_file_tk_location);
+        sal_mutext_dbg_break();
+    }
+
+    return retVal;
+}
+
+int sal_mutex_give_bcm_debug(sal_mutex_t m, const char *give_loc, int line)
+{
+    char lineNum[8] = {'\0'};
+    recursive_mutex_t   *rm = (recursive_mutex_t *) m;
+    assert(rm);
+    rm->give_count++;
+
+    sal_sprintf(lineNum, ":%d", line);
+    sal_strncpy(rm->prev_file_gv_location, rm->last_file_gv_location, 
+                FILE_LOC_NAME_MAX - 6);
+    sal_strncpy(rm->last_file_gv_location, give_loc, FILE_LOC_NAME_MAX - 6);
+    sal_strcat(rm->last_file_gv_location, lineNum);
+
+    if (rm->give_count > rm->take_count) {
+        sal_printf("\nERROR: MTX GV:%d EXCEEDS TK:%d\n", rm->give_count, 
+                   rm->take_count);
+        sal_mutext_dbg_break();
+    }
+
+    return sal_mutex_give_intern(m);
+}
+
+void sal_mutex_dbg_dump(void)
+{
+    int i = 0;
+    char temp_ch;
+
+    for (i = 0; i < MUTEX_DBG_ARR_MAX; i++) {
+        /* Find nonempty slots */
+        if (mutex_dbg_arr_ptr[i] != 0) {
+            recursive_mutex_t *rm = mutex_dbg_arr_ptr[i];
+
+
+            /* If MUTEX was created but never taken or given don't display it */
+            if (rm->take_count || rm->give_count) {
+                sal_printf ("\n\nMUTEX STATS[%d]  For:%s  Owner:ox%x CTRL_C_Depth:%d\n", 
+                        i, rm->desc, (unsigned int)rm->owner, rm->ctrl_c_blk);
+
+                sal_printf("\nT_CNT:%d G_CNT:%d \nPREV_T_LOC:%s  LST_T_LOC:%s\nPREV_G_LOC:%s  LST_G_LOC:%s", 
+                       rm->take_count, rm->give_count,
+                       rm->prev_file_tk_location, rm->last_file_tk_location,
+                       rm->prev_file_gv_location, rm->last_file_gv_location);
+            }
+
+            if (rm->ctrl_c_blk > 0) {
+                sal_printf ("\nWARNING: CTRL_C Left DISABLED??");
+                temp_ch = getchar(); /*Pause  */
+            }
+ 
+            if (rm->take_count != rm->give_count) {
+                sal_printf ("\nWARNING: Take != Give");
+                temp_ch = getchar(); /*Pause  */
+            }
+        }
+    }
+}
+#endif /* BROADCOM_DEBUG_MUTEX */
+
+#ifdef netbsd
+/*
+ * The netbsd pthreads implementation we are using
+ * does not seem to have his function
+ */
+static int
+pthread_mutexattr_init(pthread_mutexattr_t* attr)
+{
+    attr->m_type = PTHREAD_MUTEXTYPE_DEBUG;
+    attr->m_flags = 0;
+    return 0;
+}
+#endif /* netbsd */
+
+static sal_mutex_t
+_sal_mutex_create(char *desc)
+{
+    recursive_mutex_t   *rm;
+    pthread_mutexattr_t mutex_attr;
+    pthread_condattr_t  cond_attr;
+    struct timespec     ts;
+
+    _init_ctrl_c();
+
+    if ((rm = malloc(sizeof (recursive_mutex_t))) == NULL) {
+        return NULL;
+    }
+
+    rm->desc          = desc;
+    rm->owner         = 0;
+    rm->recurse_count = 0;
+    rm->val           = 1;
+
+    pthread_mutexattr_init(&mutex_attr);
+    pthread_mutex_init(&rm->mutex, &mutex_attr);
+
+    pthread_condattr_init(&cond_attr);
+    if (clock_gettime(CLOCK_MONOTONIC, &ts) == 0) {
+        pthread_condattr_setclock(&cond_attr, CLOCK_MONOTONIC);
+    }
+    pthread_cond_init(&rm->cond, &cond_attr);
+
+#ifdef BROADCOM_DEBUG_MUTEX
+    {
+        int i;
+
+        rm->ctrl_c_blk = 0;
+        rm->take_count = 0;
+        rm->give_count = 0;
+        rm->tk_exc_gv_ind = 0;
+
+        sal_memset(rm->prev_file_tk_location, FILE_LOC_NAME_MAX, 0);
+        sal_memset(rm->last_file_tk_location, FILE_LOC_NAME_MAX, 0);
+        sal_memset(rm->prev_file_gv_location, FILE_LOC_NAME_MAX, 0);
+        sal_memset(rm->last_file_gv_location, FILE_LOC_NAME_MAX, 0);
+
+        for (i = 0; i < MUTEX_DBG_ARR_MAX; i++) {
+            /* Find an empty slot */
+            if (mutex_dbg_arr_ptr[i] == 0) {
+                mutex_dbg_arr_ptr[i] = rm;
+                break;
+            }
+        }
+    }
+#endif /* BROADCOM_DEBUG_MUTEX */
+
+    SAL_SEM_RESOURCE_USAGE_INCR(_sal_mutex_count_curr, _sal_mutex_count_max);
+
+    return (sal_mutex_t) rm;
+}
+
+/*
+ * Mutex and semaphore abstraction
+ */
+sal_mutex_t
+sal_mutex_create(char *desc)
+{
+#ifdef SAL_GLOBAL_MUTEX
+    static sal_mutex_t _m = NULL;
+    if (!_m) {
+        _m = _sal_mutex_create("sal_global_mutex");
+        assert(_m);
+    }
+    if (strcmp(desc, "spl mutex")) {
+        return _m;
+    }
+#endif
+
+    return _sal_mutex_create(desc);
+}
+
+void
+sal_mutex_destroy(sal_mutex_t m)
+{
+    recursive_mutex_t   *rm = (recursive_mutex_t *) m;
+
+    assert(rm);
+
+    pthread_mutex_destroy(&rm->mutex);
+    pthread_cond_destroy(&rm->cond);
+
+    free(rm);
+
+    SAL_SEM_RESOURCE_USAGE_DECR(_sal_mutex_count_curr);
+}
+
+/*
+ * Both semaphores and mutexes are secretly mutexes, so the core of the take
+ * logic can be shared between them
+ */
+static int 
+sal_mutex_sem_take(pthread_mutex_t *mutex, pthread_cond_t *cond, 
+                   int *val, int forever, int usec) 
+{
+    struct timespec ts;
+    int             err = 0;
+
+    if ((!forever) && (!_sal_compute_timeout(&ts, usec))) {
+        err = -1; 
+    }
+
+    if (err == 0) {
+        err = pthread_mutex_lock(mutex);
+
+        while ((*val == 0) && (err == 0)) {
+            if (forever) {
+                err = pthread_cond_wait(cond, mutex);
+            } else {
+                err = pthread_cond_timedwait(cond, mutex, &ts);
+            }
+            
+        }
+
+        if (err == 0) {
+            *val -= 1;
+        }
+
+        /* even if there's an error, try to unlock this... */
+        pthread_mutex_unlock(mutex);
+    }
+
+    return err ? -1 : 0;
+}
+
+int
+#ifdef BROADCOM_DEBUG_MUTEX
+sal_mutex_take_intern(sal_mutex_t m, int usec)
+#else
+sal_mutex_take(sal_mutex_t m, int usec)
+#endif
+{
+    recursive_mutex_t *rm = (recursive_mutex_t *)m;
+    sal_thread_t      myself = sal_thread_self();
+    int               err = 0;
+
+    assert(rm);
+
+    if (rm->owner == myself) {
+        rm->recurse_count++;
+        return 0;
+    }
+
+    ctrl_c_block();
+
+#ifdef BROADCOM_DEBUG_MUTEX
+    rm->ctrl_c_blk++;
+#endif
+
+    err = sal_mutex_sem_take(&rm->mutex, &rm->cond, &rm->val, 
+                             usec == sal_mutex_FOREVER, usec);
+
+    rm->owner = myself;
+
+    if (err) {
+        ctrl_c_unblock();
+
+#ifdef BROADCOM_DEBUG_MUTEX
+        printf("\n\nERROR in TAKING MUTEX \n\n");
+        rm->ctrl_c_blk--;
+#endif
+        
+        return -1;
+    }
+ 
+    return err ? -1 : 0;
+}
+
+
+int
+#ifdef BROADCOM_DEBUG_MUTEX
+sal_mutex_give_intern(sal_mutex_t m)
+#else
+sal_mutex_give(sal_mutex_t m)
+#endif
+{
+    recursive_mutex_t  *rm = (recursive_mutex_t *) m;
+    int                err = 0;
+    sal_thread_t       myself = sal_thread_self();
+
+    assert(rm);
+
+    assert(rm->owner == myself);
+
+    if (rm->recurse_count > 0) {
+        rm->recurse_count--;
+        return 0;
+    }
+    rm->owner = 0;
+    pthread_mutex_lock(&rm->mutex);
+    rm->val++;
+    err = pthread_cond_broadcast(&rm->cond);
+    /* even if there's an error, try to unlock this... */
+    pthread_mutex_unlock(&rm->mutex);
+    ctrl_c_unblock();
+
+#ifdef BROADCOM_DEBUG_MUTEX
+    rm->ctrl_c_blk--;
+#endif
+
+    return err ? -1 : 0;
+}
+
+
+/*
+ * Wrapper class to hold additional info
+ * along with the semaphore.
+ */
+typedef struct {
+    int             binary;
+    int             val;
+    pthread_mutex_t mutex;
+    pthread_cond_t  cond;
+    char            *desc;
+} wrapped_sem_t;
+
+sal_sem_t
+sal_sem_create(char *desc, int binary, int initial_count)
+{
+    wrapped_sem_t       *s = NULL;
+    struct timespec     ts;
+    pthread_condattr_t  cond_attr;
+    pthread_mutexattr_t mutex_attr;
+
+    /* Ignore binary for now */
+
+    if ((s = malloc(sizeof (wrapped_sem_t))) == NULL) {
+        return NULL;
+    }
+
+    s->binary = binary;
+    s->val = initial_count;
+    s->desc = desc;
+    pthread_mutexattr_init(&mutex_attr);
+    pthread_mutex_init(&s->mutex, &mutex_attr);
+
+    pthread_condattr_init(&cond_attr);
+    if (clock_gettime(CLOCK_MONOTONIC, &ts) == 0) {
+        pthread_condattr_setclock(&cond_attr, CLOCK_MONOTONIC);
+    }
+    pthread_cond_init(&s->cond, &cond_attr);
+
+    SAL_SEM_RESOURCE_USAGE_INCR(_sal_sem_count_curr, _sal_sem_count_max);
+
+    return (sal_sem_t) s;
+}
+
+void
+sal_sem_destroy(sal_sem_t b)
+{
+    wrapped_sem_t *s = (wrapped_sem_t *) b;
+
+    assert(s);
+
+    pthread_mutex_destroy(&s->mutex);
+    pthread_cond_destroy(&s->cond);
+
+    free(s);
+
+    SAL_SEM_RESOURCE_USAGE_DECR(_sal_sem_count_curr);
+}
+
+int
+sal_sem_take(sal_sem_t b, int usec)
+{
+    wrapped_sem_t    *s = (wrapped_sem_t *) b;
+    int              err = 0;
+
+    if ((usec < 0) && (usec != sal_sem_FOREVER)) {
+        /* Return error if negative timeout is specified */
+        return -1;
+    }
+
+    err = sal_mutex_sem_take(&s->mutex, &s->cond, &s->val, 
+                             usec == sal_sem_FOREVER, usec);
+
+    return err ? -1 : 0;
+}
+
+int
+sal_sem_give(sal_sem_t b)
+{
+    wrapped_sem_t *s = (wrapped_sem_t *) b;
+    int           err;
+
+    pthread_mutex_lock(&s->mutex);
+    if (s->binary && s->val) {
+        pthread_mutex_unlock(&s->mutex);
+        return 0;
+    }
+    s->val++;
+    err = pthread_cond_broadcast(&s->cond);
+    pthread_mutex_unlock(&s->mutex);
+
+    return err ? -1 : 0;
+}
+
+#endif /* BCM_MONOTONIC_MUTEXES */
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/sysrq.c sdk-6.5.21.new/src/sal/core/linux/sysrq.c
--- sdk-6.5.21.origin/src/sal/core/linux/sysrq.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/sysrq.c	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,183 @@
+/*! \file sysrq.c
+ *
+ * Platform-dependent system requests.
+ */
+/*
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ */
+
+#include <sal/core/libc.h>
+#include <sal/core/sysrq.h>
+
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+#include <sys/wait.h>
+#include <sys/ptrace.h>
+#include <sys/syscall.h>
+
+/* Backtrace is currently supported only as a glibc extension */
+#ifndef SAL_BACKTRACE_SUPPORT
+#if defined(__GLIBC__) && !defined(__UCLIBC__)
+#define SAL_BACKTRACE_SUPPORT 1
+#else
+#define SAL_BACKTRACE_SUPPORT 0
+#endif
+#endif
+
+#if SAL_BACKTRACE_SUPPORT == 1
+
+#include <execinfo.h>
+
+#define BT_REC_MAX      64
+
+static void
+gnu_backtrace(void)
+{
+    int nrecs;
+    void *bt_recs[BT_REC_MAX];
+
+    /* Link with -rdynamic to get function names. */
+    nrecs = backtrace(bt_recs, BT_REC_MAX);
+    backtrace_symbols_fd(bt_recs, nrecs, STDOUT_FILENO);
+}
+
+static int
+gdb_present(void)
+{
+  int status;
+  int pid = fork();
+
+  if (pid == -1) {
+      return -1;
+  }
+
+  if (pid == 0) {
+      /*
+       * Use a child to test for gdb, since a ptrace test from the
+       * primary thread will prevent the backtrace gdb instance from
+       * attaching later.
+       */
+      int ppid = getppid();
+      if (ptrace(PTRACE_ATTACH, ppid, NULL, NULL) == 0) {
+          /* Wait for the parent to stop and let it continue */
+          waitpid(ppid, NULL, 0);
+          ptrace(PTRACE_CONT, NULL, NULL);
+          /* Presumably gdb is not present */
+          ptrace(PTRACE_DETACH, getppid(), NULL, NULL);
+          exit(0);
+      }
+      /* Trace failed so assume that gdb is present */
+      exit(1);
+  }
+
+  /* Let parent wait for child to detemine trace status */
+  waitpid(pid, &status, 0);
+
+  return WEXITSTATUS(status);
+}
+
+static int
+gdb_backtrace(void)
+{
+    char pid_buf[30];
+    char cmd_buf[384];
+    char name_buf[256];
+    int name_len;
+    int output_enable;
+    int tid = 0;
+    FILE *gdb_out;
+
+#ifdef SYS_gettid
+    tid = syscall(SYS_gettid);
+#endif
+
+    /* Get our own name */
+    name_len = readlink("/proc/self/exe", name_buf, sizeof(name_buf) - 1);
+    if (name_len <= 0) {
+        return -1;
+    }
+    name_buf[name_len] = 0;
+
+    /*
+     * Since gdb has its own thread numbering system, we cannot
+     * request a backtrace for a specific thread based on the thread
+     * ID (tid). Instead we request backtraces for all threads and
+     * filter the output to suit our needs.
+     */
+    snprintf(cmd_buf, sizeof(cmd_buf) - 1,
+             "gdb --batch -n -ex 'thread apply all bt' --pid=%d %s",
+             getpid(), name_buf);
+
+    snprintf(pid_buf, sizeof(pid_buf) - 1, "LWP %d", tid);
+    printf("Attaching gdb for %s ...\n", pid_buf);
+    if ((gdb_out = popen(cmd_buf, "r")) == NULL) {
+        printf("FAILED\n");
+        return -1;
+    }
+    output_enable = 0;
+    while (fgets(cmd_buf, sizeof(cmd_buf) - 1, gdb_out) != NULL) {
+        if (output_enable) {
+            if (tid && *cmd_buf != '#') {
+                /* End of backtrace for this thread */
+                output_enable = 0;
+            }
+        } else {
+            if (tid == 0 || sal_strstr(cmd_buf, pid_buf) != NULL) {
+                /* Found matching thread ID */
+                output_enable = 1;
+            }
+        }
+        if (output_enable) {
+            /* Only show backtrace for matching thread ID */
+            printf("%s", cmd_buf);
+        }
+    }
+    pclose(gdb_out);
+    return 0;
+}
+
+static void
+show_backtrace(int try_gdb)
+{
+    if (try_gdb == 0 || gdb_present()) {
+        gnu_backtrace();
+    } else {
+        if (gdb_backtrace() < 0) {
+            gnu_backtrace();
+        }
+    }
+}
+
+#else
+
+/* No built-in backtrace support */
+static void
+show_backtrace(int try_gdb)
+{
+    printf("Backtrace not available\n");
+}
+
+#endif
+
+void
+sal_sysrq(sal_sysrq_t req, unsigned long prm)
+{
+    switch (req) {
+    case SAL_SYSRQ_EXIT:
+        exit((int)prm);
+        break;
+    case SAL_SYSRQ_RESET:
+        exit((int)prm);
+        break;
+    case SAL_SYSRQ_BACKTRACE:
+        show_backtrace(prm);
+        break;
+    case SAL_SYSRQ_ABORT:
+    default:
+        abort();
+        break;
+    }
+}
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/thread.c sdk-6.5.21.new/src/sal/core/linux/thread.c
--- sdk-6.5.21.origin/src/sal/core/linux/thread.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/thread.c	2024-06-03 13:48:03.974757198 +0200
@@ -0,0 +1,950 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * File: 	thread.c
+ * Purpose:	Defines SAL routines for Unix threads
+ *
+ * Thread Abstraction
+ *
+ * POSIX does not keep thread names.  The keep the names, we have a
+ * linked list of all threads we create.  If your OS has the ability to
+ * retrieve the thread name, most of this code can be deleted.  If you
+ * don't care about thread names, you may just have sal_thread_name
+ * always return the empty string.
+ *
+ * The most important use for thread names is in sal/appl/xxx/console.c,
+ * where the console output of background tasks can be prefixed by the
+ * task name.
+ */
+
+#include <pthread.h>
+#include <sys/types.h>
+#include <sys/time.h>
+#include <sys/param.h>
+#include <sys/prctl.h>
+#include <sys/syscall.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <signal.h>
+#include <string.h>
+#include <unistd.h>
+
+#include <assert.h>
+#include <sal/core/thread.h>
+#include <sal/core/sync.h>
+#include <sal/core/time.h>
+#include <sal/core/spl.h>
+#include <sal/limits.h>
+
+#if defined (__STRICT_ANSI__)
+#define NO_CONTROL_C
+#endif
+
+#ifndef SAL_THREAD_RT_PRIO_HIGHEST
+#define SAL_THREAD_RT_PRIO_HIGHEST  90
+#endif
+
+/*
+ * Linux scheduler policy and real-time priority used for threads
+ * configured for SAL_THREAD_PRIO_INTERRUPT. Please refer to the Linux
+ * documentation if you want to override these values.
+ */
+#ifndef SAL_SCHED_POLICY_INTERRUPT
+#define SAL_SCHED_POLICY_INTERRUPT      SCHED_FIFO
+#endif
+#ifndef SAL_SCHED_PRIO_INTERRUPT
+#define SAL_SCHED_PRIO_INTERRUPT        90
+#endif
+
+/*
+ * Linux scheduler policy and real-time priority used for threads
+ * configured for SAL_THREAD_PRIO_CRITICAL. Please refer to the Linux
+ * documentation if you want to override these values.
+ */
+#ifndef SAL_SCHED_POLICY_CRITICAL
+#define SAL_SCHED_POLICY_CRITICAL       SCHED_FIFO
+#endif
+#ifndef SAL_SCHED_PRIO_CRITICAL
+#define SAL_SCHED_PRIO_CRITICAL         10
+#endif
+
+static pthread_mutex_t _sal_thread_lock = PTHREAD_MUTEX_INITIALIZER;
+
+#define THREAD_LOCK() pthread_mutex_lock(&_sal_thread_lock)
+#define THREAD_UNLOCK() pthread_mutex_unlock(&_sal_thread_lock)
+
+#if defined(BROADCOM_DEBUG) && defined(INCLUDE_BCM_SAL_PROFILE)
+static unsigned int _sal_thread_count_curr;
+static unsigned int _sal_thread_count_max;
+static unsigned int _sal_thread_stack_size_curr;
+static unsigned int _sal_thread_stack_size_max;
+#define SAL_THREAD_RESOURCE_USAGE_INCR(a_cnt, a_cnt_max, a_sz,      \
+                                       a_sz_max, n_ssize, ilock)    \
+    a_cnt++;                                                        \
+    a_sz += (n_ssize);                                              \
+    a_cnt_max = ((a_cnt) > (a_cnt_max)) ? (a_cnt) : (a_cnt_max);    \
+    a_sz_max = ((a_sz) > (a_sz_max)) ? (a_sz) : (a_sz_max)
+
+#define SAL_THREAD_RESOURCE_USAGE_DECR(a_count, a_ssize, n_ssize, ilock)\
+        a_count--;                                                      \
+        a_ssize -= (n_ssize)
+
+/*
+ * Function:
+ *      sal_thread_resource_usage_get
+ * Purpose:
+ *      Provides count of active threads and stack allocation
+ * Parameters:
+ *      alloc_curr - Current memory usage.
+ *      alloc_max - Memory usage high water mark
+ */
+
+void
+sal_thread_resource_usage_get(unsigned int *sal_thread_count_curr,
+                              unsigned int *sal_stack_size_curr,
+                              unsigned int *sal_thread_count_max,
+                              unsigned int *sal_stack_size_max)
+{
+    if (sal_thread_count_curr != NULL) {
+        *sal_thread_count_curr = _sal_thread_count_curr;
+    }
+    if (sal_stack_size_curr != NULL) {
+        *sal_stack_size_curr = _sal_thread_stack_size_curr;
+    }
+    if (sal_thread_count_max != NULL) {
+        *sal_thread_count_max = _sal_thread_count_max;
+    }
+    if (sal_stack_size_max != NULL) {
+        *sal_stack_size_max = _sal_thread_stack_size_max;
+    }
+}
+
+#else
+/* Resource tracking disabled */
+#define SAL_THREAD_RESOURCE_USAGE_INCR(a_cnt, a_cnt_max, a_sz,      \
+                                       a_sz_max, n_ssize, ilock)
+#define SAL_THREAD_RESOURCE_USAGE_DECR(a_count, a_ssize, n_ssize, ilock)
+#endif
+
+/* If user defined min stack size in Make.local
+ * then undefine local stack min
+ * and set user defined value as the new min
+ */
+#ifdef SAL_THREAD_STACK_MIN
+#ifdef PTHREAD_STACK_MIN
+#undef PTHREAD_STACK_MIN
+#endif
+#define PTHREAD_STACK_MIN SAL_THREAD_STACK_MIN
+#else
+/* If no user defined min stack size
+ * and if no local stack min
+ * define local stack min
+ */
+#ifndef PTHREAD_STACK_MIN
+#define PTHREAD_STACK_MIN 16384
+#endif
+#endif
+
+/*
+ * Function:
+ *	thread_boot
+ * Purpose:
+ *	Entry point for each new thread created
+ * Parameters:
+ *	ti - information about thread being created
+ * Notes:
+ *	Signals and other parameters are configured before jumping to
+ *	the actual thread's main routine.
+ */
+
+typedef struct thread_info_s {
+    void		(*f)(void *);
+    char		*name;
+    pthread_t		id;
+    void		*arg;
+    int                 tid;
+    int                 ss;
+    sal_sem_t           sem;
+    struct thread_info_s *next;
+} thread_info_t;
+
+static thread_info_t	*thread_head = NULL;
+
+static void *
+thread_boot(void *ti_void)
+{
+
+    thread_info_t	*ti = ti_void;
+    void		(*f)(void *);
+    void		*arg;
+#ifndef NO_CONTROL_C
+    sigset_t		new_mask, orig_mask;
+
+    /* Make sure no child thread catches Control-C */
+    sigemptyset(&new_mask);
+    sigaddset(&new_mask, SIGINT);
+    sigprocmask(SIG_BLOCK, &new_mask, &orig_mask);
+#endif
+
+#if defined(BCM_DNX_SUPPORT) ||  defined(BCM_DNXF_SUPPORT)
+	/* DBAL_COLLECTION_WORKER threads must be joinable */
+    if (strcmp(ti->name, "DBAL_COLLECTION_WORKER_0") && strcmp(ti->name, "DBAL_COLLECTION_WORKER_1"))
+#endif
+    {
+        /* Ensure that we give up all resources upon exit */
+        pthread_detach(pthread_self());
+    }
+
+#ifdef PR_SET_NAME
+    prctl(PR_SET_NAME, ti->name, 0, 0, 0);
+#endif
+
+#ifndef netbsd
+    /* not supported */
+    pthread_setcanceltype(PTHREAD_CANCEL_ASYNCHRONOUS, NULL);
+    pthread_setcancelstate(PTHREAD_CANCEL_ENABLE, NULL);
+#endif /* netbsd */
+
+    f = ti->f;
+    arg = ti->arg;
+
+    ti->id = pthread_self();
+    ti->tid = syscall(SYS_gettid);
+
+    /* Notify parent to continue */
+    sal_sem_give(ti->sem);
+
+    /* Call thread function */
+    (*f)(arg);
+
+    /* Thread function did not call sal_thread_exit() */
+    sal_thread_exit(0);
+
+    /* Will never get here */
+    return NULL;
+}
+
+
+/*
+ * Function:
+ *  sal_thread_join
+ * Purpose:
+ *  The function waits for the thread specified by thread
+ *  to terminate.  If that thread has already terminated, then
+ *  the function returns immediately. The thread specified by thread
+ *  must be joinable.
+ * Parameters:
+ *  thread - Thread to wait for
+ *  retval - If retval is not NULL, then sal_thread_join() copies the exit status of
+ *           the target thread (i.e., the value that the target thread supplied to
+ *           the thread exit() into the location pointed to by retval.
+ * Returns:
+ *  On success, pthread_join() returns 0; on error, it returns an error number.
+ */
+
+int
+sal_thread_join(sal_thread_t thread, void **retval)
+{
+    return pthread_join((pthread_t) thread, retval);
+}
+
+/*
+ * Function:
+ *	sal_thread_create
+ * Purpose:
+ *	Abstraction for task creation
+ * Parameters:
+ *	name - name of task
+ *	ss - stack size requested
+ *	prio - scheduling prio (0 = highest, 255 = lowest)
+ *	func - address of function to call
+ *	arg - argument passed to func.
+ * Returns:
+ *	Thread ID
+ */
+
+sal_thread_t
+sal_thread_create(char *name, int ss, int prio, void (f)(void *), void *arg)
+{
+    pthread_attr_t	attribs;
+    struct sched_param param;
+    thread_info_t	*ti;
+    pthread_t		id;
+    sal_sem_t           sem;
+
+    if (pthread_attr_init(&attribs)) {
+        return(SAL_THREAD_ERROR);
+    }
+
+    ss += PTHREAD_STACK_MIN;
+    pthread_attr_setstacksize(&attribs, ss);
+
+    if (prio == SAL_THREAD_PRIO_NO_PREEMPT) {
+        pthread_attr_setinheritsched(&attribs, PTHREAD_EXPLICIT_SCHED);
+        pthread_attr_setschedpolicy(&attribs, SCHED_FIFO);
+        param.sched_priority = SAL_THREAD_RT_PRIO_HIGHEST;
+        pthread_attr_setschedparam(&attribs, &param);
+    }
+
+    if ((ti = malloc(sizeof (*ti))) == NULL) {
+	return SAL_THREAD_ERROR;
+    }
+
+    if ((sem = sal_sem_create("threadBoot", 1, 0)) == NULL) {
+	free(ti);
+	return SAL_THREAD_ERROR;
+    }
+    ti->name = NULL;
+    if ((ti->name = malloc(strlen(name)+1)) == NULL) {
+        free(ti);
+        sal_sem_destroy(sem);
+        return SAL_THREAD_ERROR;
+    }
+    /* coverity[secure_coding] */
+    strcpy(ti->name, name);
+
+    ti->f = f;
+    
+    ti->arg = arg;
+    ti->id = (pthread_t)0;
+    ti->ss = ss;
+    ti->sem = sem;
+
+    THREAD_LOCK();
+    ti->next = thread_head;
+    thread_head = ti;
+    THREAD_UNLOCK();
+
+    if (pthread_create(&id, &attribs, thread_boot, (void *)ti)) {
+        THREAD_LOCK();
+	thread_head = thread_head->next;
+        THREAD_UNLOCK();
+        if (ti->name != NULL) {
+            free(ti->name);
+        }
+	free(ti);
+        sal_sem_destroy(sem);
+	return(SAL_THREAD_ERROR);
+    }
+
+    SAL_THREAD_RESOURCE_USAGE_INCR(
+        _sal_thread_count_curr,
+        _sal_thread_count_max,
+        _sal_thread_stack_size_curr,
+        _sal_thread_stack_size_max,
+        ss,
+        ilock);
+
+    /*
+     * Note that at this point ti can no longer be safely
+     * dereferenced, as the thread we just created may have
+     * exited already. Instead we wait for the new thread
+     * to update thread_info_t and tell us to continue.
+     */
+    sal_sem_take(sem, sal_sem_FOREVER);
+    sal_sem_destroy(sem);
+
+    return ((sal_thread_t)id);
+}
+
+/*
+ * Function:
+ *	sal_thread_destroy
+ * Purpose:
+ *	Abstraction for task deletion
+ * Parameters:
+ *	thread - thread ID
+ * Returns:
+ *	0 on success, -1 on failure
+ * Notes:
+ *	This routine is not generally used by Broadcom drivers because
+ *	it's unsafe.  If a task is destroyed while holding a mutex or
+ *	other resource, system operation becomes unpredictable.  Also,
+ *	some RTOS's do not include kill routines.
+ *
+ *	Instead, Broadcom tasks are written so they can be notified via
+ *	semaphore when it is time to exit, at which time they call
+ *	sal_thread_exit().
+ */
+
+int
+sal_thread_destroy(sal_thread_t thread)
+{
+#ifdef netbsd
+    /* not supported */
+    return -1;
+#else
+    thread_info_t	*ti, **tp;
+    pthread_t		id = (pthread_t) thread;
+
+    if (pthread_cancel(id)) {
+	return -1;
+    }
+
+    ti = NULL;
+
+    THREAD_LOCK();
+    for (tp = &thread_head; (*tp) != NULL; tp = &(*tp)->next) {
+	if ((*tp)->id == id) {
+	    ti = (*tp);
+	    (*tp) = (*tp)->next;
+	    break;
+	}
+    }
+    THREAD_UNLOCK();
+
+    if (ti) {
+        SAL_THREAD_RESOURCE_USAGE_DECR(
+            _sal_thread_count_curr,
+            _sal_thread_stack_size_curr,
+            ti->ss,
+            ilock);
+        if (ti->name != NULL) {
+            free(ti->name);
+        }
+        free(ti);
+    }
+
+    return 0;
+#endif
+}
+
+/*
+ * Function:
+ *	sal_thread_self
+ * Purpose:
+ *	Return thread ID of caller
+ * Parameters:
+ *	None
+ * Returns:
+ *	Thread ID
+ */
+
+sal_thread_t
+sal_thread_self(void)
+{
+    return (sal_thread_t) pthread_self();
+}
+
+int
+sal_thread_id_get(void)
+{
+    return syscall(SYS_gettid);
+}
+
+/*
+ * Function:
+ *	sal_thread_name
+ * Purpose:
+ *	Return name given to thread when it was created
+ * Parameters:
+ *	thread - thread ID
+ *	thread_name - buffer to return thread name;
+ *		gets empty string if not available
+ *	thread_name_size - maximum size of buffer
+ * Returns:
+ *	NULL, if name not available
+ *	thread_name, if name available
+ */
+char *
+sal_thread_name(sal_thread_t thread, char *thread_name, int thread_name_size)
+{
+    thread_info_t	*ti;
+    char                *name;
+
+    name = NULL;
+
+    THREAD_LOCK();
+    for (ti = thread_head; ti != NULL; ti = ti->next) {
+	if (ti->id == (pthread_t)thread) {
+	    strncpy(thread_name, ti->name, thread_name_size);
+	    thread_name[thread_name_size - 1] = 0;
+	    name = thread_name;
+            break;
+	}
+    }
+    THREAD_UNLOCK();
+
+    if (name == NULL) {
+        thread_name[0] = 0;
+    }
+
+    return name;
+}
+
+/*
+ * Function:
+ *	sal_thread_exit
+ * Purpose:
+ *	Exit the calling thread
+ * Parameters:
+ *	rc - return code from thread.
+ * Notes:
+ *	Never returns.
+ */
+
+void
+sal_thread_exit(int rc)
+{
+    thread_info_t	*ti, **tp;
+    pthread_t		id = pthread_self();
+
+    ti = NULL;
+
+    THREAD_LOCK();
+    for (tp = &thread_head; (*tp) != NULL; tp = &(*tp)->next) {
+	if ((*tp)->id == id) {
+	    ti = (*tp);
+	    (*tp) = (*tp)->next;
+	    break;
+	}
+    }
+    THREAD_UNLOCK();
+
+    if (ti) {
+        SAL_THREAD_RESOURCE_USAGE_DECR(
+            _sal_thread_count_curr,
+            _sal_thread_stack_size_curr,
+            ti->ss,
+            ilock);
+        if (ti->name != NULL) {
+            free(ti->name);
+        }
+        free(ti);
+    }
+
+    pthread_exit(INT_TO_PTR(rc));
+}
+
+/*
+ * Function:
+ *	sal_thread_yield
+ * Purpose:
+ *	Yield the processor to other tasks.
+ * Parameters:
+ *	None
+ */
+
+void
+sal_thread_yield(void)
+{
+    sal_usleep(1);
+}
+
+/*
+ * Function:
+ *	sal_thread_main_set
+ * Purpose:
+ *	Set which thread is the main thread
+ * Parameters:
+ *	thread - thread ID
+ * Notes:
+ *	The main thread is the one that runs in the foreground on the
+ *	console.  It prints normally, takes keyboard signals, etc.
+ */
+
+static sal_thread_t _sal_thread_main = 0;
+
+void
+sal_thread_main_set(sal_thread_t thread)
+{
+    _sal_thread_main = thread;
+}
+
+/*
+ * Function:
+ *	sal_thread_main_get
+ * Purpose:
+ *	Return which thread is the main thread
+ * Returns:
+ *	Thread ID
+ * Notes:
+ *	See sal_thread_main_set().
+ */
+
+sal_thread_t
+sal_thread_main_get(void)
+{
+    return _sal_thread_main;
+}
+
+/*!
+ * \brief Set priority of current thread.
+ *
+ * This function may be used to avoid priority inversion by elevating
+ * the thread priority while holding a lock.
+ *
+ * \param [in] prio Thread priority (SAL_THREAD_PRIO_xxx).
+ *
+ * \retval 0 No errors.
+ * \retval -1 Unsupported priority or failed to set priority.
+ */
+int
+sal_thread_prio_set(int prio)
+{
+    pthread_t thread;
+    struct sched_param param;
+
+    thread = pthread_self();
+    switch (prio) {
+    case SAL_THREAD_PRIO_INTERRUPT:
+        param.sched_priority = SAL_SCHED_PRIO_INTERRUPT;
+        pthread_setschedparam(thread, SAL_SCHED_POLICY_INTERRUPT, &param);
+        return 0;
+    case SAL_THREAD_PRIO_CRITICAL:
+        param.sched_priority = SAL_SCHED_PRIO_CRITICAL;
+        pthread_setschedparam(thread, SAL_SCHED_POLICY_CRITICAL, &param);
+        return 0;
+    case SAL_THREAD_PRIO_DEFAULT:
+    case SAL_THREAD_PRIO_LOW:
+    case SAL_THREAD_PRIO_HIGH:
+        param.sched_priority = 0;
+        pthread_setschedparam(thread, SCHED_OTHER, &param);
+        return 0;
+    default:
+        break;
+    }
+    return -1;
+}
+
+/*!
+ * \brief Get priority of current thread.
+ *
+ * This function may be used to avoid priority inversion by elevating
+ * the thread priority while holding a lock.
+ *
+ * \param [out] prio Thread priority (SAL_THREAD_PRIO_xxx).
+ *
+ * \retval 0 No errors.
+ * \retval -1 Unsupported priority or failed to get priority.
+ */
+int
+sal_thread_prio_get(int *prio)
+{
+    pthread_t thread;
+    struct sched_param param;
+    int policy;
+
+    thread = pthread_self();
+    if (thread && pthread_getschedparam(thread, &policy, &param) == 0) {
+        if (policy == SAL_SCHED_POLICY_INTERRUPT &&
+            param.sched_priority == SAL_SCHED_PRIO_INTERRUPT) {
+            *prio = SAL_THREAD_PRIO_INTERRUPT;
+            return 0;
+        }
+        if (policy == SAL_SCHED_POLICY_CRITICAL &&
+            param.sched_priority == SAL_SCHED_PRIO_CRITICAL) {
+            *prio = SAL_THREAD_PRIO_CRITICAL;
+            return 0;
+        }
+        if (policy == SCHED_OTHER) {
+            *prio = SAL_THREAD_PRIO_DEFAULT;
+            return 0;
+        }
+    }
+    return -1;
+}
+
+/*
+ * Function:
+ *      sal_thread_traverse
+ * Purpose:
+ *      Go through thread list and do callback
+ * Returns:
+ *      None
+ * Notes:
+ *      None
+ */
+
+void
+sal_thread_traverse(thread_traverse_cb_f cb_func, void *cb_date)
+{
+    thread_info_t *ti;
+
+    for (ti = thread_head; ti != NULL; ti = ti->next) {
+        if (cb_func) {
+            cb_func(cb_date, ti->tid, ti->name);
+        }
+    }
+}
+
+/*
+ * Function:
+ *	sal_sleep
+ * Purpose:
+ *	Suspend calling thread for a specified number of seconds.
+ * Parameters:
+ *	sec - number of seconds to suspend
+ * Notes:
+ *	Other tasks are free to run while the caller is suspended.
+ */
+
+void
+sal_sleep(int sec)
+{
+    struct timeval tv;
+    tv.tv_sec = (time_t) sec;
+    tv.tv_usec = 0;
+    select(0, (fd_set *) 0, (fd_set *) 0, (fd_set *) 0, &tv);
+}
+
+/*
+ * Function:
+ *	sal_usleep
+ * Purpose:
+ *	Suspend calling thread for a specified number of microseconds.
+ * Parameters:
+ *	usec - number of microseconds to suspend
+ * Notes:
+ *	The actual delay period depends on the resolution of the
+ *	Unix select routine, whose precision is limited to the
+ *	the period of the scheduler tick, generally 1/60 or 1/100 sec.
+ *	Other tasks are free to run while the caller is suspended.
+ *
+ *	A short usleep less than 20000 usec is done by doing a 'yield'
+ *	within a loop, rather than a true 'sleep'. If no other tasks are
+ *	using the CPU, this will effectively be a busy-wait, as the yield
+ *	will immediately return. This can make it appear that the calling
+ *	thread is using a lot of CPU, though this is only because no other
+ *	task is in a running state. To avoid this appearance of 100% CPU
+ *	load, the calling thread can increase the delay to 20000.
+ *	The appearance of 100% CPU load for this thread should not have any
+ *	effects on other threads. The thread that is spinning doing a
+ *	sal_usleep() is continually calling an OS yield, so any other scheduled
+ *	threads will run. The only time you will see this thread getting 100%
+ *	CPU is if no other tasks are trying to run.
+ */
+
+void
+sal_usleep(uint32 usec)
+{
+    struct timeval tv;
+
+    if (usec < (2 * SECOND_USEC)/HZ) {
+        sal_usecs_t now;
+        sal_usecs_t earlier;
+        sal_usecs_t delta;
+        sal_usecs_t max_time = SAL_UINT32_MAX;
+
+        earlier = sal_time_usecs();
+        do {
+#if defined(_POSIX_PRIORITY_SCHEDULING) && (_POSIX_PRIORITY_SCHEDULING >= 200112L)
+            sched_yield();
+#else
+            tv.tv_sec = 0;
+            tv.tv_usec = 0;
+            select(0, (fd_set *) 0, (fd_set *) 0, (fd_set *) 0, &tv);
+#endif
+            now = sal_time_usecs();
+            if (now < earlier) {
+                delta = max_time - earlier + now;
+            } else {
+                delta = now - earlier;
+            }
+        } while (delta < usec);
+    }
+    else {
+        tv.tv_sec = (time_t) (usec / SECOND_USEC);
+        tv.tv_usec = (long) (usec % SECOND_USEC);
+        select(0, (fd_set *) 0, (fd_set *) 0, (fd_set *) 0, &tv);
+    }
+}
+
+#define UDELAY_USE_CLOCK_GETTIME (-1)
+/*
+ * Function:
+ *	sal_udelay
+ * Purpose:
+ *	Spin wait for an approximate number of microseconds
+ * Parameters:
+ *	usec - number of microseconds
+ * Notes:
+ *	MUST be called once before normal use so it can self-calibrate.
+ *	Code for self-calibrating delay loop is courtesy of
+ *	Geoffrey Espin, the comp.os.vxworks Usenet group, and
+ *	JA Borkhuis (http://www.xs4all.nl/~borkhuis).
+ *      The current implementation assumes that sal_time_usecs has
+ *      system tick resolution (or better).
+ */
+
+void
+sal_udelay(uint32 usec)
+{
+    static volatile int _sal_udelay_counter;
+    static int loops = 0;
+    uint32 iy;
+    int ix; 
+#ifdef CLOCK_MONOTONIC
+    int error;
+    struct timespec now, earlier;
+    long delta_usec, diff_nsec;
+
+    if (loops == 0) {
+        error = clock_getres(CLOCK_MONOTONIC, &now);
+        if (!error && !now.tv_sec && (now.tv_nsec <= 1000)) {
+            loops = UDELAY_USE_CLOCK_GETTIME;
+        }
+    }
+
+    if (loops == UDELAY_USE_CLOCK_GETTIME) {
+        error = clock_gettime(CLOCK_MONOTONIC, &earlier);
+        assert(!error);
+        do {
+            error = clock_gettime(CLOCK_MONOTONIC, &now);
+            assert(!error);
+            diff_nsec = now.tv_nsec - earlier.tv_nsec;
+            if (diff_nsec < 0) {
+                diff_nsec += 1000000000;
+                now.tv_sec--;
+            }
+            delta_usec = (now.tv_sec - earlier.tv_sec) * 1000000 +
+                         (diff_nsec / 1000);
+        } while ((uint32)delta_usec < usec);
+        return;
+    }
+#endif
+    if (loops == 0 || usec == 0) {      /* Need calibration? */
+        int max_loops;
+        int start = 0, stop = 0;
+        int mpt = (SECOND_USEC / HZ);   /* usec/tick */
+
+        for (loops = 1; loops < 0x1000 && stop == start; loops <<= 1) {
+            /* Wait for clock turn over */
+            for (stop = start = sal_time_usecs() / mpt;
+                 start == stop;
+                 start = sal_time_usecs() / mpt) {
+                /* Empty */
+            }
+            sal_udelay(mpt);    /* Single recursion */
+            stop = sal_time_usecs() / mpt;
+        }
+
+        max_loops = loops / 2;  /* Loop above overshoots */
+
+        start = stop = 0;
+
+        if (loops < 4) {
+            loops = 4;
+        }
+
+        for (loops /= 4; loops < max_loops && stop == start; loops++) {
+            /* Wait for clock turn over */
+            for (stop = start = sal_time_usecs() / mpt;
+                 start == stop;
+                 start = sal_time_usecs() / mpt) {
+                /* Empty */
+            }
+            sal_udelay(mpt);    /* Single recursion */
+            stop = sal_time_usecs() / mpt;
+        }
+    }
+   
+    for (iy = 0; iy < usec; iy++) {
+        for (ix = 0; ix < loops; ix++) {
+            _sal_udelay_counter++;      /* Prevent optimizations */
+        }
+    }
+}
+
+#define MAX_TLS_KEY_SUPPORTED 8
+
+typedef struct {
+    pthread_key_t key;
+    int mapped;
+} pthread_key_map_t;
+
+static pthread_key_map_t key_maps[MAX_TLS_KEY_SUPPORTED];
+static int sal_tls_inited = FALSE;
+
+static void 
+sal_tls_init(void)
+{  
+    int i;
+
+    if (sal_tls_inited) {
+        return;    
+    }
+    for (i = 0; i < MAX_TLS_KEY_SUPPORTED; i++) {
+        key_maps[i].mapped = FALSE;
+    }
+    sal_tls_inited = TRUE;
+    return;
+}
+
+sal_tls_key_t * 
+sal_tls_key_create(void (*destructor)(void *))
+{
+    int i;
+    int lvl;
+    
+    lvl = sal_splhi();
+    sal_tls_init();    
+    for (i = 0; i < MAX_TLS_KEY_SUPPORTED; i++) {
+        if (!key_maps[i].mapped) { 
+        	key_maps[i].mapped = TRUE;         
+            break;
+        }
+    }
+    sal_spl(lvl);
+     
+    if (i >= MAX_TLS_KEY_SUPPORTED) {
+        return NULL;
+    }
+    if (0 == pthread_key_create(&key_maps[i].key, destructor)) {
+        return (void *)&key_maps[i].key;
+    } else {
+    	key_maps[i].mapped = FALSE;
+        return NULL;    
+    }
+}
+
+int 
+sal_tls_key_set(sal_tls_key_t *key, void *val)
+{
+    if (key == NULL) {
+        return FALSE;   
+    }
+    
+    if (!sal_tls_inited) {
+        return FALSE;   
+    }
+    
+    if (0 == pthread_setspecific(*(pthread_key_t *)key, val)) {
+        return TRUE;
+    } else {
+        return FALSE;   
+    }
+        
+}
+
+void *
+sal_tls_key_get(sal_tls_key_t *key)
+{   
+    if (key == 0) {
+        return NULL;
+    }
+    if (!sal_tls_inited) {
+        return NULL;    
+    }
+    return pthread_getspecific(*(pthread_key_t *)key); 
+}
+
+int 
+sal_tls_key_delete(sal_tls_key_t *key)
+{
+    if (key == 0) {
+        return FALSE;
+    }
+    if (!sal_tls_inited) {
+        return FALSE;   
+    }
+    if (0 == pthread_key_delete(*(pthread_key_t *)key)) {
+        return TRUE;
+    } else {
+        return FALSE;   
+    }
+}
+
diff -Naur sdk-6.5.21.origin/src/sal/core/linux/time.c sdk-6.5.21.new/src/sal/core/linux/time.c
--- sdk-6.5.21.origin/src/sal/core/linux/time.c	1970-01-01 01:00:00.000000000 +0100
+++ sdk-6.5.21.new/src/sal/core/linux/time.c	2024-06-03 13:48:03.978757313 +0200
@@ -0,0 +1,89 @@
+/*
+ * 
+ * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * 
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ *
+ * File: 	time.c
+ * Purpose:	Time management
+ */
+
+
+#include <sys/types.h>
+#include <sys/time.h>
+#if defined(linux) || (__STRICT_ANSI__)
+#include <time.h>
+#endif
+#include <sal/core/time.h>
+
+#ifdef COMPILER_HAS_DOUBLE
+
+/*
+ * Function:
+ *	sal_time_double
+ * Purpose:
+ *	Returns the time since boot in seconds.
+ * Returns:
+ *	Double precision floating-point seconds.
+ * Notes:
+ *	Useful for benchmarking.
+ *	Made to be as accurate as possible on the given platform.
+ */
+
+double
+sal_time_double(void)
+{
+    struct timeval	tv;
+    gettimeofday(&tv, 0);
+    return (tv.tv_sec + tv.tv_usec * 0.000001);
+}
+
+#endif /* COMPILER_HAS_DOUBLE */
+
+
+/*
+ * Function:
+ *	sal_time_usecs
+ * Purpose:
+ *	Returns the relative time in microseconds modulo 2^32.
+ * Returns:
+ *	Time in microseconds modulo 2^32
+ * Notes:
+ *	The precision is limited to the Unix clock period.
+ *	Time is monotonic if supported by the O/S.
+ */
+
+sal_usecs_t
+sal_time_usecs(void)
+{
+    struct timeval	ltv;
+#ifdef CLOCK_MONOTONIC
+    struct timespec	lts;
+    if (clock_gettime(CLOCK_MONOTONIC, &lts) == 0) {
+        return (lts.tv_sec * SECOND_USEC + lts.tv_nsec / 1000);
+    }
+#endif
+    /* Fall back to RTC if monotonic clock unavailable */
+    gettimeofday(&ltv, 0);
+    return (ltv.tv_sec * SECOND_USEC + ltv.tv_usec);
+}
+    
+/*
+ * Function:
+ *	sal_time
+ * Purpose:
+ *	Return the current time in seconds since 00:00, Jan 1, 1970.
+ * Returns:
+ *	Time in seconds
+ * Notes:
+ *	This routine must be implemented so it is safe to call from
+ *	an interrupt routine.  It is used for timestamping and other
+ *	purposes.
+ */
+
+sal_time_t
+sal_time(void)
+{
+    /* "Interrupt safe" since intrs are fake for PLISIM */
+    return (sal_time_t) time(0);
+}
diff -Naur sdk-6.5.21.origin/systems/bde/linux/include/linux_dma.h sdk-6.5.21.new/systems/bde/linux/include/linux_dma.h
--- sdk-6.5.21.origin/systems/bde/linux/include/linux_dma.h	2024-06-03 13:49:24.349081992 +0200
+++ sdk-6.5.21.new/systems/bde/linux/include/linux_dma.h	2024-06-03 13:48:05.226793413 +0200
@@ -23,7 +23,7 @@
 /* ioremap is broken in kernel */
 #define IOREMAP(addr, size) ((void *)KSEG1ADDR(addr))
 #else
-#define IOREMAP(addr, size) ioremap_nocache(addr, size)
+#define IOREMAP(addr, size) ioremap(addr, size)
 #endif
 
 #if defined (__mips__)
diff -Naur sdk-6.5.21.origin/systems/bde/linux/kernel/linux_dma.c sdk-6.5.21.new/systems/bde/linux/kernel/linux_dma.c
--- sdk-6.5.21.origin/systems/bde/linux/kernel/linux_dma.c	2024-06-03 13:49:24.349081992 +0200
+++ sdk-6.5.21.new/systems/bde/linux/kernel/linux_dma.c	2024-06-03 13:48:05.230793529 +0200
@@ -1124,7 +1124,7 @@
     
     dma_sync_single_for_cpu(NULL, (unsigned long)ptr, length, DMA_BIDIRECTIONAL);
 #else
-    dma_cache_sync(NULL, ptr, length, DMA_BIDIRECTIONAL);
+    dma_sync_single_for_device(NULL, ptr, length, DMA_BIDIRECTIONAL);
 #endif
 #endif
     return 0;
@@ -1140,7 +1140,7 @@
     
     dma_sync_single_for_cpu(NULL, (unsigned long)ptr, length, DMA_BIDIRECTIONAL);
 #else
-    dma_cache_sync(NULL, ptr, length, DMA_BIDIRECTIONAL);
+    dma_sync_single_for_device(NULL, ptr, length, DMA_BIDIRECTIONAL);
 #endif
 #endif
 
diff -Naur sdk-6.5.21.origin/systems/bde/linux/kernel/linux-kernel-bde.c sdk-6.5.21.new/systems/bde/linux/kernel/linux-kernel-bde.c
--- sdk-6.5.21.origin/systems/bde/linux/kernel/linux-kernel-bde.c	2024-06-03 13:49:24.349081992 +0200
+++ sdk-6.5.21.new/systems/bde/linux/kernel/linux-kernel-bde.c	2024-06-03 13:48:05.230793529 +0200
@@ -24,6 +24,12 @@
  * Linux Kernel BDE
  */
 
+#if !defined(KBUILD_MODNAME)
+
+#define KBUILD_MODNAME "linux-kernel-bde"
+
+#endif /* !defined(KBUILD_MODNAME) */
+
 #include <gmodule.h>
 #include <linux-bde.h>
 #include <linux_dma.h>
diff -Naur sdk-6.5.21.origin/systems/bde/linux/user/kernel/linux-user-bde.c sdk-6.5.21.new/systems/bde/linux/user/kernel/linux-user-bde.c
--- sdk-6.5.21.origin/systems/bde/linux/user/kernel/linux-user-bde.c	2024-06-03 13:49:24.353082108 +0200
+++ sdk-6.5.21.new/systems/bde/linux/user/kernel/linux-user-bde.c	2024-06-03 13:48:05.230793529 +0200
@@ -118,7 +118,7 @@
 #define HX5_INTC_INTR_STATUS_BASE          (HX5_INTC_INTR_STATUS_REG0)
 #define HX5_INTC_INTR_RAW_STATUS_BASE      (HX5_INTC_INTR_RAW_STATUS_REG0)
 
-#define IOREMAP(addr, size)                ioremap_nocache(addr, size)
+#define IOREMAP(addr, size)                ioremap(addr, size)
 
 #define HX5_IHOST_GICD_ISENABLERN_0        (0x10781100)
 #define HX5_IHOST_GICD_ISENABLERN_1        (0x10781104)
diff -Naur sdk-6.5.21.origin/systems/linux/kernel/modules/shared/gmodule.c sdk-6.5.21.new/systems/linux/kernel/modules/shared/gmodule.c
--- sdk-6.5.21.origin/systems/linux/kernel/modules/shared/gmodule.c	2024-06-03 13:49:24.357082224 +0200
+++ sdk-6.5.21.new/systems/linux/kernel/modules/shared/gmodule.c	2024-06-03 13:48:05.238793760 +0200
@@ -1,8 +1,33 @@
 /*
+ * Copyright 2007-2020 Broadcom Inc. All rights reserved.
  * 
- * This license is set out in https://raw.githubusercontent.com/Broadcom-Network-Switching-Software/OpenBCM/master/Legal/LICENSE file.
+ * Permission is granted to use, copy, modify and/or distribute this
+ * software under either one of the licenses below.
  * 
- * Copyright 2007-2020 Broadcom Inc. All rights reserved.
+ * License Option 1: GPL
+ * 
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License, version 2, as
+ * published by the Free Software Foundation (the "GPL").
+ * 
+ * This program is distributed in the hope that it will be useful, but
+ * WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * General Public License version 2 (GPLv2) for more details.
+ * 
+ * You should have received a copy of the GNU General Public License
+ * version 2 (GPLv2) along with this source code.
+ * 
+ * 
+ * License Option 2: Broadcom Open Network Switch APIs (OpenNSA) license
+ * 
+ * This software is governed by the Broadcom Open Network Switch APIs license:
+ * https://www.broadcom.com/products/ethernet-connectivity/software/opennsa
+ */
+/*
+ * $Id: gmodule.c,v 1.20 Broadcom SDK $
+ * $Copyright: (c) 2005 Broadcom Corp.
+ * All Rights Reserved.$
  * 
  * Generic Linux Module Framework
  *
@@ -26,7 +51,7 @@
 devfs_handle_t devfs_handle = NULL;
 #endif
 
-
+/* FIXME: support dynamic debugging */
 
 static int _dbg_enable = 0;
 
@@ -124,6 +149,7 @@
     return single_release(inode, file);
 }
 
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,6,0)
 struct file_operations _gmodule_proc_fops = {
     owner:      THIS_MODULE,
     open:       _gmodule_proc_open,
@@ -133,6 +159,15 @@
     release:    _gmodule_proc_release,
 };
 #else
+struct proc_ops _gmodule_proc_fops = {
+    proc_open:       _gmodule_proc_open,
+    proc_read:       seq_read,
+    proc_lseek:      seq_lseek,
+    proc_write:      _gmodule_proc_write,
+    proc_release:    _gmodule_proc_release,
+};
+#endif
+#else
 int
 gmodule_vpprintf(char** page_ptr, const char* fmt, va_list args)
 {
@@ -246,7 +281,7 @@
     return 0;
 }
 
-#ifdef HAVE_UNLOCKED_IOCTL
+#if defined(HAVE_UNLOCKED_IOCTL) || LINUX_VERSION_CODE >= KERNEL_VERSION(5,9,0)
 static long
 _gmodule_unlocked_ioctl(struct file *filp,
                         unsigned int cmd, unsigned long arg)
@@ -309,7 +344,7 @@
 /* FILE OPERATIONS */
 
 struct file_operations _gmodule_fops = {
-#ifdef HAVE_UNLOCKED_IOCTL
+#if defined(HAVE_UNLOCKED_IOCTL) || LINUX_VERSION_CODE >= KERNEL_VERSION(5,9,0)
     unlocked_ioctl: _gmodule_unlocked_ioctl,
 #else
     ioctl:      _gmodule_ioctl,
